[
  [
    {
      "type": "cmd",
      "data": "import",
      "source": "import \"window_tools\""
    },
    {
      "type": "str",
      "data": "\"window_tools\"",
      "source": "\"window_tools\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"windows\""
    },
    {
      "type": "str",
      "data": "\"request\"",
      "source": "\"request\""
    },
    {
      "type": "str",
      "data": "\"windows\"",
      "source": "\"windows\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"terminal\""
    },
    {
      "type": "str",
      "data": "\"request\"",
      "source": "\"request\""
    },
    {
      "type": "str",
      "data": "\"terminal\"",
      "source": "\"terminal\""
    }
  ],
  [
    {
      "type": "asi",
      "data": "=??",
      "source": "window.show()",
      "left": {
        "type": "var",
        "data": "window",
        "source": "window"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window",
            "source": "window"
          },
          {
            "type": "mtv",
            "data": "show",
            "parameters": [],
            "source": "show()"
          }
        ],
        "source": "window.show()"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=??",
      "source": "window.resize(600,400)",
      "left": {
        "type": "var",
        "data": "window",
        "source": "window"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window",
            "source": "window"
          },
          {
            "type": "mtv",
            "data": "resize",
            "parameters": [
              {
                "type": "num",
                "data": 600,
                "source": "600"
              },
              {
                "type": "num",
                "data": 400,
                "source": "400"
              }
            ],
            "source": "resize(600,400)"
          }
        ],
        "source": "window.resize(600,400)"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "current_tab = \"no_perms\"",
      "left": {
        "type": "var",
        "data": "current_tab",
        "source": "current_tab"
      },
      "right": {
        "type": "str",
        "data": "\"no_perms\"",
        "source": "\"no_perms\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "activity_info = false",
      "left": {
        "type": "var",
        "data": "activity_info",
        "source": "activity_info"
      },
      "right": {
        "type": "var",
        "data": false,
        "source": "false"
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if Windows().getKeys(\"id\").contains(passed_data) ("
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "fnc",
          "data": "Windows",
          "parameters": [],
          "source": "Windows()"
        },
        {
          "type": "mtv",
          "data": "getKeys",
          "parameters": [
            {
              "type": "str",
              "data": "\"id\"",
              "source": "\"id\""
            }
          ],
          "source": "getKeys(\"id\")"
        },
        {
          "type": "mtv",
          "data": "contains",
          "parameters": [
            {
              "type": "var",
              "data": "passed_data",
              "source": "passed_data"
            }
          ],
          "source": "contains(passed_data)"
        }
      ],
      "source": "Windows().getKeys(\"id\").contains(passed_data)"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "activity_info = true",
            "left": {
              "type": "var",
              "data": "activity_info",
              "source": "activity_info"
            },
            "right": {
              "type": "var",
              "data": true,
              "source": "true"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "page = passed_data",
            "left": {
              "type": "var",
              "data": "page",
              "source": "page"
            },
            "right": {
              "type": "var",
              "data": "passed_data",
              "source": "passed_data"
            }
          }
        ]
      ],
      "source": "(\n  activity_info = true\n  page = passed_data\n)"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "memory = roturLink.enabled or \"performance.memory !== undefined\".eval()",
      "left": {
        "type": "var",
        "data": "memory",
        "source": "memory"
      },
      "right": {
        "type": "log",
        "data": "or",
        "source": "or",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "roturLink",
              "source": "roturLink"
            },
            {
              "type": "var",
              "data": "enabled",
              "source": "enabled"
            }
          ],
          "source": "roturLink.enabled"
        },
        "right": {
          "type": "mtd",
          "data": [
            {
              "type": "str",
              "data": "\"performance.memory !== undefined\"",
              "source": "\"performance.memory !== undefined\""
            },
            {
              "type": "mtv",
              "data": "eval",
              "parameters": [],
              "source": "eval()"
            }
          ],
          "source": "\"performance.memory !== undefined\".eval()"
        }
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "paused = false",
      "left": {
        "type": "var",
        "data": "paused",
        "source": "paused"
      },
      "right": {
        "type": "var",
        "data": false,
        "source": "false"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "graph = []",
      "left": {
        "type": "var",
        "data": "graph",
        "source": "graph"
      },
      "right": {
        "type": "arr",
        "data": [],
        "source": "[]"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "network_usage = []",
      "left": {
        "type": "var",
        "data": "network_usage",
        "source": "network_usage"
      },
      "right": {
        "type": "arr",
        "data": [],
        "source": "[]"
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"tab\" \"name\" ("
    },
    {
      "type": "str",
      "data": "\"tab\"",
      "source": "\"tab\""
    },
    {
      "type": "str",
      "data": "\"name\"",
      "source": "\"name\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if name == current_tab \"c seco\" else \"c prim\""
          },
          {
            "type": "cmp",
            "data": "==",
            "source": "==",
            "left": {
              "type": "var",
              "data": "name",
              "source": "name"
            },
            "right": {
              "type": "var",
              "data": "current_tab",
              "source": "current_tab"
            }
          },
          {
            "type": "str",
            "data": "\"c seco\"",
            "source": "\"c seco\""
          },
          {
            "type": "var",
            "data": "else",
            "source": "else"
          },
          {
            "type": "str",
            "data": "\"c prim\"",
            "source": "\"c prim\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square tab_w 25 10 1"
          },
          {
            "type": "var",
            "data": "tab_w",
            "source": "tab_w"
          },
          {
            "type": "num",
            "data": 25,
            "source": "25"
          },
          {
            "type": "num",
            "data": 10,
            "source": "10"
          },
          {
            "type": "num",
            "data": 1,
            "source": "1"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if onclick \"current_tab = name\""
          },
          {
            "type": "var",
            "data": "onclick",
            "source": "onclick"
          },
          {
            "type": "str",
            "data": "\"current_tab = name\"",
            "source": "\"current_tab = name\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x tab_w / -2 + 5"
          },
          {
            "type": "opr",
            "data": "+",
            "source": "+",
            "left": {
              "type": "opr",
              "data": "/",
              "source": "/",
              "left": {
                "type": "var",
                "data": "tab_w",
                "source": "tab_w"
              },
              "right": {
                "type": "num",
                "data": -2,
                "source": "-2"
              }
            },
            "right": {
              "type": "num",
              "data": 5,
              "source": "5"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text name 8 : c#txtc"
          },
          {
            "type": "var",
            "data": "name",
            "source": "name"
          },
          {
            "type": "num",
            "data": 8,
            "source": "8"
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc",
                "source": "txtc"
              }
            ],
            "source": "c#txtc"
          }
        ]
      ],
      "source": "(\n  if name == current_tab \"c seco\" else \"c prim\"\n  square tab_w 25 10 1\n  if onclick \"current_tab = name\"\n  change_x tab_w / -2 + 5\n  text name 8 : c#txtc\n)"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "def arrSum(arr) (\n  local out = 0\n  for i arr.len (\n    out += arr.[i]\n  )\n  return out\n)",
      "left": {
        "type": "var",
        "data": "arrSum",
        "source": "def"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": "arr"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "local out = 0",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this",
                        "source": "this"
                      },
                      {
                        "type": "var",
                        "data": "out",
                        "source": "out"
                      }
                    ],
                    "source": "this.out"
                  },
                  "right": {
                    "type": "num",
                    "data": 0,
                    "source": "0"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for i arr.len ("
                },
                {
                  "type": "str",
                  "data": "i",
                  "source": "i"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "arr",
                      "source": "arr"
                    },
                    {
                      "type": "var",
                      "data": "len",
                      "source": "len"
                    }
                  ],
                  "source": "arr.len"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "+=",
                        "source": "out += arr.[i]",
                        "left": {
                          "type": "var",
                          "data": "out",
                          "source": "out"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "arr",
                              "source": "arr"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "i",
                                  "source": "i"
                                }
                              ],
                              "source": "[i]"
                            }
                          ],
                          "source": "arr.[i]"
                        }
                      }
                    ]
                  ],
                  "source": "(\n    out += arr.[i]\n  )"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return out"
                },
                {
                  "type": "var",
                  "data": "out",
                  "source": "out"
                }
              ]
            ],
            "source": "(\n  local out = 0\n  for i arr.len (\n    out += arr.[i]\n  )\n  return out\n)"
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "def getWindowsData() (\n  windows_list @= Windows()\n  \n  windows_names @= windows_list.getKeys(\"name\")\n  windows_drawtimes @= windows_list.getKeys(\"render\")\n  windows_ids @= windows_list.getKeys(\"id\")\n  windows_draw_main @= windows_drawtimes.map(v -> (v.[1]))\n  \n  local vals = []\n  for i windows_list.len (\n    vals.append({\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    })\n   )\n   \n   vals @= vals.sortBy(\"time\").reverse()\n   \n   windows_names @= vals.getKeys(\"name\")\n   windows_ids @= vals.getKeys(\"id\")\n   windows_drawtimes @= vals.getKeys(\"draw\")\n   windows_draw_main @= vals.getKeys(\"time\")\n)",
      "left": {
        "type": "var",
        "data": "getWindowsData",
        "source": "def"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": ""
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_list @= Windows()",
                  "left": {
                    "type": "var",
                    "data": "windows_list",
                    "source": "windows_list"
                  },
                  "right": {
                    "type": "fnc",
                    "data": "Windows",
                    "parameters": [],
                    "source": "Windows()"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_names @= windows_list.getKeys(\"name\")",
                  "left": {
                    "type": "var",
                    "data": "windows_names",
                    "source": "windows_names"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_list",
                        "source": "windows_list"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"name\"",
                            "source": "\"name\""
                          }
                        ],
                        "source": "getKeys(\"name\")"
                      }
                    ],
                    "source": "windows_list.getKeys(\"name\")"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_drawtimes @= windows_list.getKeys(\"render\")",
                  "left": {
                    "type": "var",
                    "data": "windows_drawtimes",
                    "source": "windows_drawtimes"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_list",
                        "source": "windows_list"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"render\"",
                            "source": "\"render\""
                          }
                        ],
                        "source": "getKeys(\"render\")"
                      }
                    ],
                    "source": "windows_list.getKeys(\"render\")"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_ids @= windows_list.getKeys(\"id\")",
                  "left": {
                    "type": "var",
                    "data": "windows_ids",
                    "source": "windows_ids"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_list",
                        "source": "windows_list"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"id\"",
                            "source": "\"id\""
                          }
                        ],
                        "source": "getKeys(\"id\")"
                      }
                    ],
                    "source": "windows_list.getKeys(\"id\")"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_draw_main @= windows_drawtimes.map(v -> (v.[1]))",
                  "left": {
                    "type": "var",
                    "data": "windows_draw_main",
                    "source": "windows_draw_main"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_drawtimes",
                        "source": "windows_drawtimes"
                      },
                      {
                        "type": "mtv",
                        "data": "map",
                        "parameters": [
                          {
                            "type": "fnc",
                            "data": "function",
                            "parameters": [
                              {
                                "type": "str",
                                "data": ""
                              },
                              {
                                "type": "blk",
                                "data": [
                                  [
                                    {
                                      "type": "cmd",
                                      "data": "return",
                                      "source": "return (v.[1])"
                                    },
                                    {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "v",
                                          "source": "v"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "num",
                                              "data": 1,
                                              "source": "1"
                                            }
                                          ],
                                          "source": "[1]"
                                        }
                                      ],
                                      "source": "(v.[1])"
                                    }
                                  ]
                                ],
                                "source": "(\nreturn (v.[1])\n)"
                              }
                            ]
                          }
                        ],
                        "source": "map(v -> (v.[1]))"
                      }
                    ],
                    "source": "windows_drawtimes.map(v -> (v.[1]))"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "local vals = []",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this",
                        "source": "this"
                      },
                      {
                        "type": "var",
                        "data": "vals",
                        "source": "vals"
                      }
                    ],
                    "source": "this.vals"
                  },
                  "right": {
                    "type": "arr",
                    "data": [],
                    "source": "[]"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for i windows_list.len ("
                },
                {
                  "type": "str",
                  "data": "i",
                  "source": "i"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "windows_list",
                      "source": "windows_list"
                    },
                    {
                      "type": "var",
                      "data": "len",
                      "source": "len"
                    }
                  ],
                  "source": "windows_list.len"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "source": "vals.append({\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    })",
                        "left": {
                          "type": "var",
                          "data": "vals",
                          "source": "vals"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "vals",
                              "source": "vals"
                            },
                            {
                              "type": "mtv",
                              "data": "append",
                              "parameters": [
                                {
                                  "type": "obj",
                                  "data": {
                                    "name": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "windows_names",
                                          "source": "windows_names"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "i",
                                              "source": "i"
                                            }
                                          ],
                                          "source": "[i]"
                                        }
                                      ],
                                      "source": "windows_names.[i]"
                                    },
                                    "time": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "windows_draw_main",
                                          "source": "windows_draw_main"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "i",
                                              "source": "i"
                                            }
                                          ],
                                          "source": "[i]"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "toNum",
                                          "parameters": [],
                                          "source": "toNum()"
                                        }
                                      ],
                                      "source": "windows_draw_main.[i].toNum()"
                                    },
                                    "id": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "windows_ids",
                                          "source": "windows_ids"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "i",
                                              "source": "i"
                                            }
                                          ],
                                          "source": "[i]"
                                        }
                                      ],
                                      "source": "windows_ids.[i]"
                                    },
                                    "draw": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "windows_drawtimes",
                                          "source": "windows_drawtimes"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "i",
                                              "source": "i"
                                            }
                                          ],
                                          "source": "[i]"
                                        }
                                      ],
                                      "source": "windows_drawtimes.[i]"
                                    }
                                  },
                                  "source": "{\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    }"
                                }
                              ],
                              "source": "append({\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    })"
                            }
                          ],
                          "source": "vals.append({\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    })"
                        }
                      }
                    ]
                  ],
                  "source": "(\n    vals.append({\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    })\n   )"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "vals @= vals.sortBy(\"time\").reverse()",
                  "left": {
                    "type": "var",
                    "data": "vals",
                    "source": "vals"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "vals",
                        "source": "vals"
                      },
                      {
                        "type": "mtv",
                        "data": "sortBy",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"time\"",
                            "source": "\"time\""
                          }
                        ],
                        "source": "sortBy(\"time\")"
                      },
                      {
                        "type": "mtv",
                        "data": "reverse",
                        "parameters": [],
                        "source": "reverse()"
                      }
                    ],
                    "source": "vals.sortBy(\"time\").reverse()"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_names @= vals.getKeys(\"name\")",
                  "left": {
                    "type": "var",
                    "data": "windows_names",
                    "source": "windows_names"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "vals",
                        "source": "vals"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"name\"",
                            "source": "\"name\""
                          }
                        ],
                        "source": "getKeys(\"name\")"
                      }
                    ],
                    "source": "vals.getKeys(\"name\")"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_ids @= vals.getKeys(\"id\")",
                  "left": {
                    "type": "var",
                    "data": "windows_ids",
                    "source": "windows_ids"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "vals",
                        "source": "vals"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"id\"",
                            "source": "\"id\""
                          }
                        ],
                        "source": "getKeys(\"id\")"
                      }
                    ],
                    "source": "vals.getKeys(\"id\")"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_drawtimes @= vals.getKeys(\"draw\")",
                  "left": {
                    "type": "var",
                    "data": "windows_drawtimes",
                    "source": "windows_drawtimes"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "vals",
                        "source": "vals"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"draw\"",
                            "source": "\"draw\""
                          }
                        ],
                        "source": "getKeys(\"draw\")"
                      }
                    ],
                    "source": "vals.getKeys(\"draw\")"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "source": "windows_draw_main @= vals.getKeys(\"time\")",
                  "left": {
                    "type": "var",
                    "data": "windows_draw_main",
                    "source": "windows_draw_main"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "vals",
                        "source": "vals"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"time\"",
                            "source": "\"time\""
                          }
                        ],
                        "source": "getKeys(\"time\")"
                      }
                    ],
                    "source": "vals.getKeys(\"time\")"
                  }
                }
              ]
            ],
            "source": "(\n  windows_list @= Windows()\n  \n  windows_names @= windows_list.getKeys(\"name\")\n  windows_drawtimes @= windows_list.getKeys(\"render\")\n  windows_ids @= windows_list.getKeys(\"id\")\n  windows_draw_main @= windows_drawtimes.map(v -> (v.[1]))\n  \n  local vals = []\n  for i windows_list.len (\n    vals.append({\n      name: windows_names.[i],\n      time: windows_draw_main.[i].toNum(),\n      id: windows_ids.[i],\n      draw: windows_drawtimes.[i]\n    })\n   )\n   \n   vals @= vals.sortBy(\"time\").reverse()\n   \n   windows_names @= vals.getKeys(\"name\")\n   windows_ids @= vals.getKeys(\"id\")\n   windows_drawtimes @= vals.getKeys(\"draw\")\n   windows_draw_main @= vals.getKeys(\"time\")\n)"
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "created_time = timer",
      "left": {
        "type": "var",
        "data": "created_time",
        "source": "created_time"
      },
      "right": {
        "type": "var",
        "data": "timer",
        "source": "timer"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "last_timer = timer",
      "left": {
        "type": "var",
        "data": "last_timer",
        "source": "last_timer"
      },
      "right": {
        "type": "var",
        "data": "timer",
        "source": "timer"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "next_update = 0.5",
      "left": {
        "type": "var",
        "data": "next_update",
        "source": "next_update"
      },
      "right": {
        "type": "num",
        "data": 0.5,
        "source": "0.5"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "high = 0",
      "left": {
        "type": "var",
        "data": "high",
        "source": "high"
      },
      "right": {
        "type": "num",
        "data": 0,
        "source": "0"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "low = 250",
      "left": {
        "type": "var",
        "data": "low",
        "source": "low"
      },
      "right": {
        "type": "num",
        "data": 250,
        "source": "250"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "graph = 1000.newArray()",
      "left": {
        "type": "var",
        "data": "graph",
        "source": "graph"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "num",
            "data": 1000,
            "source": "1000"
          },
          {
            "type": "mtv",
            "data": "newArray",
            "parameters": [],
            "source": "newArray()"
          }
        ],
        "source": "1000.newArray()"
      }
    }
  ],
  [
    {
      "type": "fnc",
      "data": "getWindowsData",
      "parameters": [],
      "source": "getWindowsData()"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "terminal",
      "source": "terminal \"disk\""
    },
    {
      "type": "str",
      "data": "\"disk\"",
      "source": "\"disk\""
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "disk_info = terminal_output",
      "left": {
        "type": "var",
        "data": "disk_info",
        "source": "disk_info"
      },
      "right": {
        "type": "var",
        "data": "terminal_output",
        "source": "terminal_output"
      }
    }
  ],
  [
    {
      "type": "unk",
      "data": "mainloop:",
      "source": "mainloop:"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "load_theme",
      "source": "load_theme"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc -2 2 -20 -20"
    },
    {
      "type": "num",
      "data": -2,
      "source": "-2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "square",
      "source": "square 25 25 10 : c#prim"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    },
    {
      "type": "mod",
      "data": [
        "c",
        {
          "type": "var",
          "data": "prim",
          "source": "prim"
        }
      ],
      "source": "c#prim"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if clicked \"window stop\""
    },
    {
      "type": "var",
      "data": "clicked",
      "source": "clicked"
    },
    {
      "type": "str",
      "data": "\"window stop\"",
      "source": "\"window stop\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "square",
      "source": "square 25 25 10 : chx#-40"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    },
    {
      "type": "mod",
      "data": [
        "chx",
        {
          "type": "num",
          "data": -40,
          "source": "-40"
        }
      ],
      "source": "chx#-40"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if clicked \"window minimise.str\""
    },
    {
      "type": "var",
      "data": "clicked",
      "source": "clicked"
    },
    {
      "type": "str",
      "data": "\"window minimise.str\"",
      "source": "\"window minimise.str\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "icon",
      "source": "icon \"down\" 0.7 : c#txtc"
    },
    {
      "type": "str",
      "data": "\"down\"",
      "source": "\"down\""
    },
    {
      "type": "num",
      "data": 0.7,
      "source": "0.7"
    },
    {
      "type": "mod",
      "data": [
        "c",
        {
          "type": "var",
          "data": "txtc",
          "source": "txtc"
        }
      ],
      "source": "c#txtc"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "icon",
      "source": "icon \"close\" 0.7 : chx#40"
    },
    {
      "type": "str",
      "data": "\"close\"",
      "source": "\"close\""
    },
    {
      "type": "num",
      "data": 0.7,
      "source": "0.7"
    },
    {
      "type": "mod",
      "data": [
        "chx",
        {
          "type": "num",
          "data": 40,
          "source": "40"
        }
      ],
      "source": "chx#40"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if clicked \"window stop\""
    },
    {
      "type": "var",
      "data": "clicked",
      "source": "clicked"
    },
    {
      "type": "str",
      "data": "\"window stop\"",
      "source": "\"window stop\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if current_tab == \"no_perms\" ("
    },
    {
      "type": "cmp",
      "data": "==",
      "source": "==",
      "left": {
        "type": "var",
        "data": "current_tab",
        "source": "current_tab"
      },
      "right": {
        "type": "str",
        "data": "\"no_perms\"",
        "source": "\"no_perms\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if window.permissions.contains(\"windows\") ("
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "window",
                "source": "window"
              },
              {
                "type": "var",
                "data": "permissions",
                "source": "permissions"
              },
              {
                "type": "mtv",
                "data": "contains",
                "parameters": [
                  {
                    "type": "str",
                    "data": "\"windows\"",
                    "source": "\"windows\""
                  }
                ],
                "source": "contains(\"windows\")"
              }
            ],
            "source": "window.permissions.contains(\"windows\")"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "current_tab = \"Render Info\"",
                  "left": {
                    "type": "var",
                    "data": "current_tab",
                    "source": "current_tab"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"Render Info\"",
                    "source": "\"Render Info\""
                  }
                }
              ]
            ],
            "source": "(\n    current_tab = \"Render Info\"\n  )"
          },
          {
            "type": "var",
            "data": "else",
            "source": "else"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if current_tab == \"no_perms\" ("
                },
                {
                  "type": "cmp",
                  "data": "==",
                  "source": "==",
                  "left": {
                    "type": "var",
                    "data": "current_tab",
                    "source": "current_tab"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"no_perms\"",
                    "source": "\"no_perms\""
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 20 -20"
                      },
                      {
                        "type": "num",
                        "data": 2,
                        "source": "2"
                      },
                      {
                        "type": "num",
                        "data": 2,
                        "source": "2"
                      },
                      {
                        "type": "num",
                        "data": 20,
                        "source": "20"
                      },
                      {
                        "type": "num",
                        "data": -20,
                        "source": "-20"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text \"This Application requires window permissions to function properly\" 10 : c#fff"
                      },
                      {
                        "type": "str",
                        "data": "\"This Application requires window permissions to function properly\"",
                        "source": "\"This Application requires window permissions to function properly\""
                      },
                      {
                        "type": "num",
                        "data": 10,
                        "source": "10"
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "fff",
                            "source": "fff"
                          }
                        ],
                        "source": "c#fff"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "exit",
                        "source": "exit"
                      }
                    ]
                  ],
                  "source": "(\n      loc 2 2 20 -20\n      text \"This Application requires window permissions to function properly\" 10 : c#fff\n      exit\n    )"
                }
              ]
            ],
            "source": "(\n    if current_tab == \"no_perms\" (\n      loc 2 2 20 -20\n      text \"This Application requires window permissions to function properly\" 10 : c#fff\n      exit\n    )\n  )"
          }
        ]
      ],
      "source": "(\n  if window.permissions.contains(\"windows\") (\n    current_tab = \"Render Info\"\n  ) else (\n    if current_tab == \"no_perms\" (\n      loc 2 2 20 -20\n      text \"This Application requires window permissions to function properly\" 10 : c#fff\n      exit\n    )\n  )\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if activity_info ("
    },
    {
      "type": "var",
      "data": "activity_info",
      "source": "activity_info"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 20 -20"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 20,
            "source": "20"
          },
          {
            "type": "num",
            "data": -20,
            "source": "-20"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text name 10 : c#txtc"
          },
          {
            "type": "var",
            "data": "name",
            "source": "name"
          },
          {
            "type": "num",
            "data": 10,
            "source": "10"
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc",
                "source": "txtc"
              }
            ],
            "source": "c#txtc"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 20 -50"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 20,
            "source": "20"
          },
          {
            "type": "num",
            "data": -50,
            "source": "-50"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text dt.round() + \"fps\" 15"
          },
          {
            "type": "opr",
            "data": "+",
            "source": "+",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "dt",
                  "source": "dt"
                },
                {
                  "type": "mtv",
                  "data": "round",
                  "parameters": [],
                  "source": "round()"
                }
              ],
              "source": "dt.round()"
            },
            "right": {
              "type": "str",
              "data": "\"fps\"",
              "source": "\"fps\""
            }
          },
          {
            "type": "num",
            "data": 15,
            "source": "15"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if timer - created_time > 1 ("
          },
          {
            "type": "cmp",
            "data": ">",
            "source": ">",
            "left": {
              "type": "opr",
              "data": "-",
              "source": "-",
              "left": {
                "type": "var",
                "data": "timer",
                "source": "timer"
              },
              "right": {
                "type": "var",
                "data": "created_time",
                "source": "created_time"
              }
            },
            "right": {
              "type": "num",
              "data": 1,
              "source": "1"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 90 -100"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 90,
                  "source": "90"
                },
                {
                  "type": "num",
                  "data": -100,
                  "source": "-100"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 140 25 10 : c#prim hover_c#seco"
                },
                {
                  "type": "num",
                  "data": 140,
                  "source": "140"
                },
                {
                  "type": "num",
                  "data": 25,
                  "source": "25"
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim",
                      "source": "prim"
                    }
                  ],
                  "source": "c#prim"
                },
                {
                  "type": "mod",
                  "data": [
                    "hover_c",
                    {
                      "type": "var",
                      "data": "seco",
                      "source": "seco"
                    }
                  ],
                  "source": "hover_c#seco"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if clicked ("
                },
                {
                  "type": "var",
                  "data": "clicked",
                  "source": "clicked"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "terminal",
                        "source": "terminal \"kill\" + page"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "source": "+",
                        "left": {
                          "type": "str",
                          "data": "\"kill\"",
                          "source": "\"kill\""
                        },
                        "right": {
                          "type": "var",
                          "data": "page",
                          "source": "page"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "window",
                        "source": "window \"stop\""
                      },
                      {
                        "type": "str",
                        "data": "\"stop\"",
                        "source": "\"stop\""
                      }
                    ]
                  ],
                  "source": "(\n      terminal \"kill\" + page\n      window \"stop\"\n    )"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"close\" 0.7 : c#txtc chx#-50"
                },
                {
                  "type": "str",
                  "data": "\"close\"",
                  "source": "\"close\""
                },
                {
                  "type": "num",
                  "data": 0.7,
                  "source": "0.7"
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc",
                      "source": "txtc"
                    }
                  ],
                  "source": "c#txtc"
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": -50,
                      "source": "-50"
                    }
                  ],
                  "source": "chx#-50"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Force Quit\" 9 : chx#20"
                },
                {
                  "type": "str",
                  "data": "\"Force Quit\"",
                  "source": "\"Force Quit\""
                },
                {
                  "type": "num",
                  "data": 9,
                  "source": "9"
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 20,
                      "source": "20"
                    }
                  ],
                  "source": "chx#20"
                }
              ]
            ],
            "source": "(\n    loc 2 2 90 -100\n    square 140 25 10 : c#prim hover_c#seco\n    if clicked (\n      terminal \"kill\" + page\n      window \"stop\"\n    )\n    icon \"close\" 0.7 : c#txtc chx#-50\n    \n    text \"Force Quit\" 9 : chx#20\n  )"
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "wwm = window_width / 30",
            "left": {
              "type": "var",
              "data": "wwm",
              "source": "wwm"
            },
            "right": {
              "type": "opr",
              "data": "/",
              "source": "/",
              "left": {
                "type": "var",
                "data": "window_width",
                "source": "window_width"
              },
              "right": {
                "type": "num",
                "data": 30,
                "source": "30"
              }
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "whm = window_height / 100",
            "left": {
              "type": "var",
              "data": "whm",
              "source": "whm"
            },
            "right": {
              "type": "opr",
              "data": "/",
              "source": "/",
              "left": {
                "type": "var",
                "data": "window_height",
                "source": "window_height"
              },
              "right": {
                "type": "num",
                "data": 100,
                "source": "100"
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if timer - last_timer > 0.05 ("
          },
          {
            "type": "cmp",
            "data": ">",
            "source": ">",
            "left": {
              "type": "opr",
              "data": "-",
              "source": "-",
              "left": {
                "type": "var",
                "data": "timer",
                "source": "timer"
              },
              "right": {
                "type": "var",
                "data": "last_timer",
                "source": "last_timer"
              }
            },
            "right": {
              "type": "num",
              "data": 0.05,
              "source": "0.05"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "last_timer = timer",
                  "left": {
                    "type": "var",
                    "data": "last_timer",
                    "source": "last_timer"
                  },
                  "right": {
                    "type": "var",
                    "data": "timer",
                    "source": "timer"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "dt = delta_time",
                  "left": {
                    "type": "var",
                    "data": "dt",
                    "source": "dt"
                  },
                  "right": {
                    "type": "var",
                    "data": "delta_time",
                    "source": "delta_time"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "windows_list = Windows()",
                  "left": {
                    "type": "var",
                    "data": "windows_list",
                    "source": "windows_list"
                  },
                  "right": {
                    "type": "fnc",
                    "data": "Windows",
                    "parameters": [],
                    "source": "Windows()"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "current = windows_list.getKeys(\"id\").index(page)",
                  "left": {
                    "type": "var",
                    "data": "current",
                    "source": "current"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_list",
                        "source": "windows_list"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"id\"",
                            "source": "\"id\""
                          }
                        ],
                        "source": "getKeys(\"id\")"
                      },
                      {
                        "type": "mtv",
                        "data": "index",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "page",
                            "source": "page"
                          }
                        ],
                        "source": "index(page)"
                      }
                    ],
                    "source": "windows_list.getKeys(\"id\").index(page)"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "drawtimes = windows_list.[current].render.JsonParse()",
                  "left": {
                    "type": "var",
                    "data": "drawtimes",
                    "source": "drawtimes"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_list",
                        "source": "windows_list"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "current",
                            "source": "current"
                          }
                        ],
                        "source": "[current]"
                      },
                      {
                        "type": "var",
                        "data": "render",
                        "source": "render"
                      },
                      {
                        "type": "mtv",
                        "data": "JsonParse",
                        "parameters": [],
                        "source": "JsonParse()"
                      }
                    ],
                    "source": "windows_list.[current].render.JsonParse()"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "name = windows_list.[current].name",
                  "left": {
                    "type": "var",
                    "data": "name",
                    "source": "name"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_list",
                        "source": "windows_list"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "current",
                            "source": "current"
                          }
                        ],
                        "source": "[current]"
                      },
                      {
                        "type": "var",
                        "data": "name",
                        "source": "name"
                      }
                    ],
                    "source": "windows_list.[current].name"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "dt = (1000 / (drawtimes.[1] + 0.01)).clamp(1,1000)",
                  "left": {
                    "type": "var",
                    "data": "dt",
                    "source": "dt"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "opr",
                        "data": "/",
                        "source": "(1000 / (drawtimes.[1] + 0.01))",
                        "left": {
                          "type": "num",
                          "data": 1000,
                          "source": "1000"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "source": "(drawtimes.[1] + 0.01)",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "drawtimes",
                                "source": "drawtimes"
                              },
                              {
                                "type": "mtv",
                                "data": "item",
                                "parameters": [
                                  {
                                    "type": "num",
                                    "data": 1,
                                    "source": "1"
                                  }
                                ],
                                "source": "[1]"
                              }
                            ],
                            "source": "drawtimes.[1]"
                          },
                          "right": {
                            "type": "num",
                            "data": 0.01,
                            "source": "0.01"
                          }
                        }
                      },
                      {
                        "type": "mtv",
                        "data": "clamp",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1,
                            "source": "1"
                          },
                          {
                            "type": "num",
                            "data": 1000,
                            "source": "1000"
                          }
                        ],
                        "source": "clamp(1,1000)"
                      }
                    ],
                    "source": "(1000 / (drawtimes.[1] + 0.01)).clamp(1,1000)"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "pr = drawtimes.[2]",
                  "left": {
                    "type": "var",
                    "data": "pr",
                    "source": "pr"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "drawtimes",
                        "source": "drawtimes"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 2,
                            "source": "2"
                          }
                        ],
                        "source": "[2]"
                      }
                    ],
                    "source": "drawtimes.[2]"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=??",
                  "source": "graph.append(dt / 1000)",
                  "left": {
                    "type": "var",
                    "data": "graph",
                    "source": "graph"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "graph",
                        "source": "graph"
                      },
                      {
                        "type": "mtv",
                        "data": "append",
                        "parameters": [
                          {
                            "type": "opr",
                            "data": "/",
                            "source": "/",
                            "left": {
                              "type": "var",
                              "data": "dt",
                              "source": "dt"
                            },
                            "right": {
                              "type": "num",
                              "data": 1000,
                              "source": "1000"
                            }
                          }
                        ],
                        "source": "append(dt / 1000)"
                      }
                    ],
                    "source": "graph.append(dt / 1000)"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=??",
                  "source": "graph.delete(1)",
                  "left": {
                    "type": "var",
                    "data": "graph",
                    "source": "graph"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "graph",
                        "source": "graph"
                      },
                      {
                        "type": "mtv",
                        "data": "delete",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1,
                            "source": "1"
                          }
                        ],
                        "source": "delete(1)"
                      }
                    ],
                    "source": "graph.delete(1)"
                  }
                }
              ]
            ],
            "source": "(\n    last_timer = timer\n    dt = delta_time\n    windows_list = Windows()\n    current = windows_list.getKeys(\"id\").index(page)\n    drawtimes = windows_list.[current].render.JsonParse()\n    name = windows_list.[current].name\n    dt = (1000 / (drawtimes.[1] + 0.01)).clamp(1,1000)\n    pr = drawtimes.[2]\n    graph.append(dt / 1000)\n    graph.delete(1)\n  )"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "c",
            "source": "c txtc"
          },
          {
            "type": "var",
            "data": "txtc",
            "source": "txtc"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 20 -150"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 20,
            "source": "20"
          },
          {
            "type": "num",
            "data": -150,
            "source": "-150"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "each",
            "source": "each i pr ("
          },
          {
            "type": "str",
            "data": "i",
            "source": "i"
          },
          {
            "type": "var",
            "data": "pr",
            "source": "pr"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x window.left + 20"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "source": "+",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "window",
                        "source": "window"
                      },
                      {
                        "type": "var",
                        "data": "left",
                        "source": "left"
                      }
                    ],
                    "source": "window.left"
                  },
                  "right": {
                    "type": "num",
                    "data": 20,
                    "source": "20"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text i 10"
                },
                {
                  "type": "var",
                  "data": "i",
                  "source": "i"
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -20"
                },
                {
                  "type": "num",
                  "data": -20,
                  "source": "-20"
                }
              ]
            ],
            "source": "(\n    set_x window.left + 20\n    text i 10\n    change_y -20\n  )"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto 150 -50"
          },
          {
            "type": "num",
            "data": 150,
            "source": "150"
          },
          {
            "type": "num",
            "data": -50,
            "source": "-50"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "graph",
            "source": "graph window_width - 300 window_height - 100 graph"
          },
          {
            "type": "opr",
            "data": "-",
            "source": "-",
            "left": {
              "type": "var",
              "data": "window_width",
              "source": "window_width"
            },
            "right": {
              "type": "num",
              "data": 300,
              "source": "300"
            }
          },
          {
            "type": "opr",
            "data": "-",
            "source": "-",
            "left": {
              "type": "var",
              "data": "window_height",
              "source": "window_height"
            },
            "right": {
              "type": "num",
              "data": 100,
              "source": "100"
            }
          },
          {
            "type": "var",
            "data": "graph",
            "source": "graph"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "exit",
            "source": "exit"
          }
        ]
      ],
      "source": "(\n  loc 2 2 20 -20\n  text name 10 : c#txtc\n  loc 2 2 20 -50\n  text dt.round() + \"fps\" 15\n  if timer - created_time > 1 (\n    loc 2 2 90 -100\n    square 140 25 10 : c#prim hover_c#seco\n    if clicked (\n      terminal \"kill\" + page\n      window \"stop\"\n    )\n    icon \"close\" 0.7 : c#txtc chx#-50\n    \n    text \"Force Quit\" 9 : chx#20\n  )\n  \n  wwm = window_width / 30\n  whm = window_height / 100\n  if timer - last_timer > 0.05 (\n    last_timer = timer\n    dt = delta_time\n    windows_list = Windows()\n    current = windows_list.getKeys(\"id\").index(page)\n    drawtimes = windows_list.[current].render.JsonParse()\n    name = windows_list.[current].name\n    dt = (1000 / (drawtimes.[1] + 0.01)).clamp(1,1000)\n    pr = drawtimes.[2]\n    graph.append(dt / 1000)\n    graph.delete(1)\n  )\n  c txtc\n  loc 2 2 20 -150\n  each i pr (\n    set_x window.left + 20\n    text i 10\n    change_y -20\n  )\n  goto 150 -50\n  graph window_width - 300 window_height - 100 graph\n  exit\n)"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "wwm = window_width - 50 / 100",
      "left": {
        "type": "var",
        "data": "wwm",
        "source": "wwm"
      },
      "right": {
        "type": "opr",
        "data": "/",
        "source": "/",
        "left": {
          "type": "opr",
          "data": "-",
          "source": "-",
          "left": {
            "type": "var",
            "data": "window_width",
            "source": "window_width"
          },
          "right": {
            "type": "num",
            "data": 50,
            "source": "50"
          }
        },
        "right": {
          "type": "num",
          "data": 100,
          "source": "100"
        }
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "whm = window_height / 300",
      "left": {
        "type": "var",
        "data": "whm",
        "source": "whm"
      },
      "right": {
        "type": "opr",
        "data": "/",
        "source": "/",
        "left": {
          "type": "var",
          "data": "window_height",
          "source": "window_height"
        },
        "right": {
          "type": "num",
          "data": 300,
          "source": "300"
        }
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if paused.not() ("
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "paused",
          "source": "paused"
        },
        {
          "type": "mtv",
          "data": "not",
          "parameters": [],
          "source": "not()"
        }
      ],
      "source": "paused.not()"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "usage = (fps / fps_limit).clamp(0,1)",
            "left": {
              "type": "var",
              "data": "usage",
              "source": "usage"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "opr",
                  "data": "/",
                  "source": "(fps / fps_limit)",
                  "left": {
                    "type": "var",
                    "data": "fps",
                    "source": "fps"
                  },
                  "right": {
                    "type": "var",
                    "data": "fps_limit",
                    "source": "fps_limit"
                  }
                },
                {
                  "type": "mtv",
                  "data": "clamp",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 0,
                      "source": "0"
                    },
                    {
                      "type": "num",
                      "data": 1,
                      "source": "1"
                    }
                  ],
                  "source": "clamp(0,1)"
                }
              ],
              "source": "(fps / fps_limit).clamp(0,1)"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=??",
            "source": "graph.append(usage)",
            "left": {
              "type": "var",
              "data": "graph",
              "source": "graph"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "graph",
                  "source": "graph"
                },
                {
                  "type": "mtv",
                  "data": "append",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "usage",
                      "source": "usage"
                    }
                  ],
                  "source": "append(usage)"
                }
              ],
              "source": "graph.append(usage)"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if graph.len > 1000 ("
          },
          {
            "type": "cmp",
            "data": ">",
            "source": ">",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "graph",
                  "source": "graph"
                },
                {
                  "type": "var",
                  "data": "len",
                  "source": "len"
                }
              ],
              "source": "graph.len"
            },
            "right": {
              "type": "num",
              "data": 1000,
              "source": "1000"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=??",
                  "source": "graph.delete(1)",
                  "left": {
                    "type": "var",
                    "data": "graph",
                    "source": "graph"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "graph",
                        "source": "graph"
                      },
                      {
                        "type": "mtv",
                        "data": "delete",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1,
                            "source": "1"
                          }
                        ],
                        "source": "delete(1)"
                      }
                    ],
                    "source": "graph.delete(1)"
                  }
                }
              ]
            ],
            "source": "(\n    graph.delete(1)\n  )"
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "frames = fps.round()",
            "left": {
              "type": "var",
              "data": "frames",
              "source": "frames"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "fps",
                  "source": "fps"
                },
                {
                  "type": "mtv",
                  "data": "round",
                  "parameters": [],
                  "source": "round()"
                }
              ],
              "source": "fps.round()"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if high < frames \"high = frames\""
          },
          {
            "type": "cmp",
            "data": "<",
            "source": "<",
            "left": {
              "type": "var",
              "data": "high",
              "source": "high"
            },
            "right": {
              "type": "var",
              "data": "frames",
              "source": "frames"
            }
          },
          {
            "type": "str",
            "data": "\"high = frames\"",
            "source": "\"high = frames\""
          }
        ],
        [
          {
            "type": "asi",
            "data": "*=",
            "source": "low *= 1.002",
            "left": {
              "type": "var",
              "data": "low",
              "source": "low"
            },
            "right": {
              "type": "num",
              "data": 1.002,
              "source": "1.002"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if low > frames \"low = frames\""
          },
          {
            "type": "cmp",
            "data": ">",
            "source": ">",
            "left": {
              "type": "var",
              "data": "low",
              "source": "low"
            },
            "right": {
              "type": "var",
              "data": "frames",
              "source": "frames"
            }
          },
          {
            "type": "str",
            "data": "\"low = frames\"",
            "source": "\"low = frames\""
          }
        ]
      ],
      "source": "(\n  // only add to the fps usage graph when not paused\n  // fixes: https://discord.com/channels/1147362734300725298/1336340461555552319\n  usage = (fps / fps_limit).clamp(0,1)\n  graph.append(usage)\n  if graph.len > 1000 (\n    graph.delete(1)\n  )\n  frames = fps.round()\n  if high < frames \"high = frames\"\n  low *= 1.002\n  if low > frames \"low = frames\"\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 23 - (frames.len * 5) -20"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "opr",
      "data": "-",
      "source": "-",
      "left": {
        "type": "num",
        "data": 23,
        "source": "23"
      },
      "right": {
        "type": "opr",
        "data": "*",
        "source": "(frames.len * 5)",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "frames",
              "source": "frames"
            },
            {
              "type": "var",
              "data": "len",
              "source": "len"
            }
          ],
          "source": "frames.len"
        },
        "right": {
          "type": "num",
          "data": 5,
          "source": "5"
        }
      }
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text frames 10 : c#txtc"
    },
    {
      "type": "var",
      "data": "frames",
      "source": "frames"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    },
    {
      "type": "mod",
      "data": [
        "c",
        {
          "type": "var",
          "data": "txtc",
          "source": "txtc"
        }
      ],
      "source": "c#txtc"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 13.5 -40"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 13.5,
      "source": "13.5"
    },
    {
      "type": "num",
      "data": -40,
      "source": "-40"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text \"fps\" 7"
    },
    {
      "type": "str",
      "data": "\"fps\"",
      "source": "\"fps\""
    },
    {
      "type": "num",
      "data": 7,
      "source": "7"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 23 - (high.len * 5) -70"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "opr",
      "data": "-",
      "source": "-",
      "left": {
        "type": "num",
        "data": 23,
        "source": "23"
      },
      "right": {
        "type": "opr",
        "data": "*",
        "source": "(high.len * 5)",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "high",
              "source": "high"
            },
            {
              "type": "var",
              "data": "len",
              "source": "len"
            }
          ],
          "source": "high.len"
        },
        "right": {
          "type": "num",
          "data": 5,
          "source": "5"
        }
      }
    },
    {
      "type": "num",
      "data": -70,
      "source": "-70"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text high 10"
    },
    {
      "type": "var",
      "data": "high",
      "source": "high"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 12 -90"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 12,
      "source": "12"
    },
    {
      "type": "num",
      "data": -90,
      "source": "-90"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text \"high\" 7"
    },
    {
      "type": "str",
      "data": "\"high\"",
      "source": "\"high\""
    },
    {
      "type": "num",
      "data": 7,
      "source": "7"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 23 - (low.round().len * 5) -120"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "opr",
      "data": "-",
      "source": "-",
      "left": {
        "type": "num",
        "data": 23,
        "source": "23"
      },
      "right": {
        "type": "opr",
        "data": "*",
        "source": "(low.round().len * 5)",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "low",
              "source": "low"
            },
            {
              "type": "mtv",
              "data": "round",
              "parameters": [],
              "source": "round()"
            },
            {
              "type": "var",
              "data": "len",
              "source": "len"
            }
          ],
          "source": "low.round().len"
        },
        "right": {
          "type": "num",
          "data": 5,
          "source": "5"
        }
      }
    },
    {
      "type": "num",
      "data": -120,
      "source": "-120"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text low.round() 10"
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "low",
          "source": "low"
        },
        {
          "type": "mtv",
          "data": "round",
          "parameters": [],
          "source": "round()"
        }
      ],
      "source": "low.round()"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 13.5 -140"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 13.5,
      "source": "13.5"
    },
    {
      "type": "num",
      "data": -140,
      "source": "-140"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text \"low\" 7"
    },
    {
      "type": "str",
      "data": "\"low\"",
      "source": "\"low\""
    },
    {
      "type": "num",
      "data": 7,
      "source": "7"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 23 - (delta.len * 5) -170"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "opr",
      "data": "-",
      "source": "-",
      "left": {
        "type": "num",
        "data": 23,
        "source": "23"
      },
      "right": {
        "type": "opr",
        "data": "*",
        "source": "(delta.len * 5)",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "delta",
              "source": "delta"
            },
            {
              "type": "var",
              "data": "len",
              "source": "len"
            }
          ],
          "source": "delta.len"
        },
        "right": {
          "type": "num",
          "data": 5,
          "source": "5"
        }
      }
    },
    {
      "type": "num",
      "data": -170,
      "source": "-170"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text delta 10"
    },
    {
      "type": "var",
      "data": "delta",
      "source": "delta"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 13.5 -190"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 13.5,
      "source": "13.5"
    },
    {
      "type": "num",
      "data": -190,
      "source": "-190"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text \"cpu\" 7"
    },
    {
      "type": "str",
      "data": "\"cpu\"",
      "source": "\"cpu\""
    },
    {
      "type": "num",
      "data": 7,
      "source": "7"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if memory ("
    },
    {
      "type": "var",
      "data": "memory",
      "source": "memory"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "ram_use = (roturLink.memory.percent ?? \"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\".eval()).round() ++ \"%\"",
            "left": {
              "type": "var",
              "data": "ram_use",
              "source": "ram_use"
            },
            "right": {
              "type": "opr",
              "data": "++",
              "source": "++",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "opr",
                    "data": "??",
                    "source": "(roturLink.memory.percent ?? \"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\".eval())",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "roturLink",
                          "source": "roturLink"
                        },
                        {
                          "type": "var",
                          "data": "memory",
                          "source": "memory"
                        },
                        {
                          "type": "var",
                          "data": "percent",
                          "source": "percent"
                        }
                      ],
                      "source": "roturLink.memory.percent"
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "str",
                          "data": "\"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\"",
                          "source": "\"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\""
                        },
                        {
                          "type": "mtv",
                          "data": "eval",
                          "parameters": [],
                          "source": "eval()"
                        }
                      ],
                      "source": "\"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\".eval()"
                    }
                  },
                  {
                    "type": "mtv",
                    "data": "round",
                    "parameters": [],
                    "source": "round()"
                  }
                ],
                "source": "(roturLink.memory.percent ?? \"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\".eval()).round()"
              },
              "right": {
                "type": "str",
                "data": "\"%\"",
                "source": "\"%\""
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 23 - (ram_use.len * 5) -220"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "opr",
            "data": "-",
            "source": "-",
            "left": {
              "type": "num",
              "data": 23,
              "source": "23"
            },
            "right": {
              "type": "opr",
              "data": "*",
              "source": "(ram_use.len * 5)",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "ram_use",
                    "source": "ram_use"
                  },
                  {
                    "type": "var",
                    "data": "len",
                    "source": "len"
                  }
                ],
                "source": "ram_use.len"
              },
              "right": {
                "type": "num",
                "data": 5,
                "source": "5"
              }
            }
          },
          {
            "type": "num",
            "data": -220,
            "source": "-220"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text ram_use 10"
          },
          {
            "type": "var",
            "data": "ram_use",
            "source": "ram_use"
          },
          {
            "type": "num",
            "data": 10,
            "source": "10"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 13.5 -240"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 13.5,
            "source": "13.5"
          },
          {
            "type": "num",
            "data": -240,
            "source": "-240"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text \"ram\" 7"
          },
          {
            "type": "str",
            "data": "\"ram\"",
            "source": "\"ram\""
          },
          {
            "type": "num",
            "data": 7,
            "source": "7"
          }
        ]
      ],
      "source": "(\n  ram_use = (roturLink.memory.percent ?? \"Math.round(performance.memory.totalJSHeapSize/performance.memory.jsHeapSizeLimit*100)\".eval()).round() ++ \"%\"\n  loc 2 2 23 - (ram_use.len * 5) -220\n  text ram_use 10\n  loc 2 2 13.5 -240\n  text \"ram\" 7\n)"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "tab_w = 100",
      "left": {
        "type": "var",
        "data": "tab_w",
        "source": "tab_w"
      },
      "right": {
        "type": "num",
        "data": 100,
        "source": "100"
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 110 -20"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 110,
      "source": "110"
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "tab",
      "source": "tab \"Render Info\""
    },
    {
      "type": "str",
      "data": "\"Render Info\"",
      "source": "\"Render Info\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 225 -20"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 225,
      "source": "225"
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "tab",
      "source": "tab \"Performance\""
    },
    {
      "type": "str",
      "data": "\"Performance\"",
      "source": "\"Performance\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 340 -20"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 340,
      "source": "340"
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "tab",
      "source": "tab \"Network\""
    },
    {
      "type": "str",
      "data": "\"Network\"",
      "source": "\"Network\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 455 -20"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": 455,
      "source": "455"
    },
    {
      "type": "num",
      "data": -20,
      "source": "-20"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "tab",
      "source": "tab \"Disk\""
    },
    {
      "type": "str",
      "data": "\"Disk\"",
      "source": "\"Disk\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 -2 25 25"
    },
    {
      "type": "num",
      "data": 2,
      "source": "2"
    },
    {
      "type": "num",
      "data": -2,
      "source": "-2"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if paused \"c global_accent\" else \"c prim\""
    },
    {
      "type": "var",
      "data": "paused",
      "source": "paused"
    },
    {
      "type": "str",
      "data": "\"c global_accent\"",
      "source": "\"c global_accent\""
    },
    {
      "type": "var",
      "data": "else",
      "source": "else"
    },
    {
      "type": "str",
      "data": "\"c prim\"",
      "source": "\"c prim\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "square",
      "source": "square 25 25 10 : tooltip#Pause"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 25,
      "source": "25"
    },
    {
      "type": "num",
      "data": 10,
      "source": "10"
    },
    {
      "type": "mod",
      "data": [
        "tooltip",
        {
          "type": "var",
          "data": "Pause",
          "source": "Pause"
        }
      ],
      "source": "tooltip#Pause"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if onclick ("
    },
    {
      "type": "var",
      "data": "onclick",
      "source": "onclick"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=??",
            "source": "paused.not()",
            "left": {
              "type": "var",
              "data": "paused",
              "source": "paused"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "paused",
                  "source": "paused"
                },
                {
                  "type": "mtv",
                  "data": "not",
                  "parameters": [],
                  "source": "not()"
                }
              ],
              "source": "paused.not()"
            }
          }
        ]
      ],
      "source": "(\n  paused.not()\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "icon",
      "source": "icon \"w 3 line 5 10 -5 10 cont -10 5 cont -10 -5 cont -5 -10 cont 5 -10 cont 10 -5 cont 10 5 cont 5 10\" 0.8 : c#txtc"
    },
    {
      "type": "str",
      "data": "\"w 3 line 5 10 -5 10 cont -10 5 cont -10 -5 cont -5 -10 cont 5 -10 cont 10 -5 cont 10 5 cont 5 10\"",
      "source": "\"w 3 line 5 10 -5 10 cont -10 5 cont -10 -5 cont -5 -10 cont 5 -10 cont 10 -5 cont 10 5 cont 5 10\""
    },
    {
      "type": "num",
      "data": 0.8,
      "source": "0.8"
    },
    {
      "type": "mod",
      "data": [
        "c",
        {
          "type": "var",
          "data": "txtc",
          "source": "txtc"
        }
      ],
      "source": "c#txtc"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if timer - last_timer > next_update and paused.not() ("
    },
    {
      "type": "log",
      "data": "and",
      "source": "and",
      "left": {
        "type": "cmp",
        "data": ">",
        "source": ">",
        "left": {
          "type": "opr",
          "data": "-",
          "source": "-",
          "left": {
            "type": "var",
            "data": "timer",
            "source": "timer"
          },
          "right": {
            "type": "var",
            "data": "last_timer",
            "source": "last_timer"
          }
        },
        "right": {
          "type": "var",
          "data": "next_update",
          "source": "next_update"
        }
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "paused",
            "source": "paused"
          },
          {
            "type": "mtv",
            "data": "not",
            "parameters": [],
            "source": "not()"
          }
        ],
        "source": "paused.not()"
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "last_timer = timer",
            "left": {
              "type": "var",
              "data": "last_timer",
              "source": "last_timer"
            },
            "right": {
              "type": "var",
              "data": "timer",
              "source": "timer"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "dt = delta_time",
            "left": {
              "type": "var",
              "data": "dt",
              "source": "dt"
            },
            "right": {
              "type": "var",
              "data": "delta_time",
              "source": "delta_time"
            }
          }
        ],
        [
          {
            "type": "fnc",
            "data": "getWindowsData",
            "parameters": [],
            "source": "getWindowsData()"
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "cpu_percent = (roturLink.cpu.percent ?? (arrSum(windows_draw_main) / (1000 / fps_limit) * 100)).round().clamp(1,100)",
            "left": {
              "type": "var",
              "data": "cpu_percent",
              "source": "cpu_percent"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "opr",
                  "data": "??",
                  "source": "(roturLink.cpu.percent ?? (arrSum(windows_draw_main) / (1000 / fps_limit) * 100))",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "roturLink",
                        "source": "roturLink"
                      },
                      {
                        "type": "var",
                        "data": "cpu",
                        "source": "cpu"
                      },
                      {
                        "type": "var",
                        "data": "percent",
                        "source": "percent"
                      }
                    ],
                    "source": "roturLink.cpu.percent"
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "source": "(arrSum(windows_draw_main) / (1000 / fps_limit) * 100)",
                    "left": {
                      "type": "opr",
                      "data": "/",
                      "source": "/",
                      "left": {
                        "type": "fnc",
                        "data": "arrSum",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "windows_draw_main",
                            "source": "windows_draw_main"
                          }
                        ],
                        "source": "arrSum(windows_draw_main)"
                      },
                      "right": {
                        "type": "opr",
                        "data": "/",
                        "source": "(1000 / fps_limit)",
                        "left": {
                          "type": "num",
                          "data": 1000,
                          "source": "1000"
                        },
                        "right": {
                          "type": "var",
                          "data": "fps_limit",
                          "source": "fps_limit"
                        }
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 100,
                      "source": "100"
                    }
                  }
                },
                {
                  "type": "mtv",
                  "data": "round",
                  "parameters": [],
                  "source": "round()"
                },
                {
                  "type": "mtv",
                  "data": "clamp",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 1,
                      "source": "1"
                    },
                    {
                      "type": "num",
                      "data": 100,
                      "source": "100"
                    }
                  ],
                  "source": "clamp(1,100)"
                }
              ],
              "source": "(roturLink.cpu.percent ?? (arrSum(windows_draw_main) / (1000 / fps_limit) * 100)).round().clamp(1,100)"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "delta = cpu_percent ++ \"%\"",
            "left": {
              "type": "var",
              "data": "delta",
              "source": "delta"
            },
            "right": {
              "type": "opr",
              "data": "++",
              "source": "++",
              "left": {
                "type": "var",
                "data": "cpu_percent",
                "source": "cpu_percent"
              },
              "right": {
                "type": "str",
                "data": "\"%\"",
                "source": "\"%\""
              }
            }
          }
        ]
      ],
      "source": "(\n  last_timer = timer\n  dt = delta_time\n  getWindowsData()\n  cpu_percent = (roturLink.cpu.percent ?? (arrSum(windows_draw_main) / (1000 / fps_limit) * 100)).round().clamp(1,100)\n  delta = cpu_percent ++ \"%\"\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if current_tab == \"Performance\" ("
    },
    {
      "type": "cmp",
      "data": "==",
      "source": "==",
      "left": {
        "type": "var",
        "data": "current_tab",
        "source": "current_tab"
      },
      "right": {
        "type": "str",
        "data": "\"Performance\"",
        "source": "\"Performance\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "minimised_text = \"Fps\"",
            "left": {
              "type": "var",
              "data": "minimised_text",
              "source": "minimised_text"
            },
            "right": {
              "type": "str",
              "data": "\"Fps\"",
              "source": "\"Fps\""
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "window",
            "source": "window \"responsive\" True"
          },
          {
            "type": "str",
            "data": "\"responsive\"",
            "source": "\"responsive\""
          },
          {
            "type": "var",
            "data": "True",
            "source": "True"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto 25 -25"
          },
          {
            "type": "num",
            "data": 25,
            "source": "25"
          },
          {
            "type": "num",
            "data": -25,
            "source": "-25"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "graph",
            "source": "graph window_width - 50 frame_height - 50 graph"
          },
          {
            "type": "opr",
            "data": "-",
            "source": "-",
            "left": {
              "type": "var",
              "data": "window_width",
              "source": "window_width"
            },
            "right": {
              "type": "num",
              "data": 50,
              "source": "50"
            }
          },
          {
            "type": "opr",
            "data": "-",
            "source": "-",
            "left": {
              "type": "var",
              "data": "frame_height",
              "source": "frame_height"
            },
            "right": {
              "type": "num",
              "data": 50,
              "source": "50"
            }
          },
          {
            "type": "var",
            "data": "graph",
            "source": "graph"
          }
        ]
      ],
      "source": "(\n  minimised_text = \"Fps\"\n  window \"responsive\" True\n  goto 25 -25\n  graph window_width - 50 frame_height - 50 graph\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if current_tab == \"Network\" ("
    },
    {
      "type": "cmp",
      "data": "==",
      "source": "==",
      "left": {
        "type": "var",
        "data": "current_tab",
        "source": "current_tab"
      },
      "right": {
        "type": "str",
        "data": "\"Network\"",
        "source": "\"Network\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "info = [\n    \"connected   |   \" ++ network.connected,\n    \"server      |   \" ++ network.server,\n    \"username    |   \" ++ network.username,\n    \"\",\n    \"- Websocket\",\n    \"upload      |   \" ++ formatFileSize(network.upload),\n    \"download    |   \" ++ formatFileSize(network.download),\n  ]",
            "left": {
              "type": "var",
              "data": "info",
              "source": "info"
            },
            "right": {
              "type": "arr",
              "data": [
                {
                  "type": "opr",
                  "data": "++",
                  "source": "++",
                  "left": {
                    "type": "str",
                    "data": "\"connected   |   \"",
                    "source": "\"connected   |   \""
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "network",
                        "source": "network"
                      },
                      {
                        "type": "var",
                        "data": "connected",
                        "source": "connected"
                      }
                    ],
                    "source": "network.connected"
                  }
                },
                {
                  "type": "opr",
                  "data": "++",
                  "source": "++",
                  "left": {
                    "type": "str",
                    "data": "\"server      |   \"",
                    "source": "\"server      |   \""
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "network",
                        "source": "network"
                      },
                      {
                        "type": "var",
                        "data": "server",
                        "source": "server"
                      }
                    ],
                    "source": "network.server"
                  }
                },
                {
                  "type": "opr",
                  "data": "++",
                  "source": "++",
                  "left": {
                    "type": "str",
                    "data": "\"username    |   \"",
                    "source": "\"username    |   \""
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "network",
                        "source": "network"
                      },
                      {
                        "type": "var",
                        "data": "username",
                        "source": "username"
                      }
                    ],
                    "source": "network.username"
                  }
                },
                {
                  "type": "str",
                  "data": "\"\"",
                  "source": "\"\""
                },
                {
                  "type": "str",
                  "data": "\"- Websocket\"",
                  "source": "\"- Websocket\""
                },
                {
                  "type": "opr",
                  "data": "++",
                  "source": "++",
                  "left": {
                    "type": "str",
                    "data": "\"upload      |   \"",
                    "source": "\"upload      |   \""
                  },
                  "right": {
                    "type": "fnc",
                    "data": "formatFileSize",
                    "parameters": [
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "network",
                            "source": "network"
                          },
                          {
                            "type": "var",
                            "data": "upload",
                            "source": "upload"
                          }
                        ],
                        "source": "network.upload"
                      }
                    ],
                    "source": "formatFileSize(network.upload)"
                  }
                },
                {
                  "type": "opr",
                  "data": "++",
                  "source": "++",
                  "left": {
                    "type": "str",
                    "data": "\"download    |   \"",
                    "source": "\"download    |   \""
                  },
                  "right": {
                    "type": "fnc",
                    "data": "formatFileSize",
                    "parameters": [
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "network",
                            "source": "network"
                          },
                          {
                            "type": "var",
                            "data": "download",
                            "source": "download"
                          }
                        ],
                        "source": "network.download"
                      }
                    ],
                    "source": "formatFileSize(network.download)"
                  }
                },
                {
                  "type": "num",
                  "data": 0,
                  "source": ""
                }
              ],
              "source": "[\n    \"connected   |   \" ++ network.connected,\n    \"server      |   \" ++ network.server,\n    \"username    |   \" ++ network.username,\n    \"\",\n    \"- Websocket\",\n    \"upload      |   \" ++ formatFileSize(network.upload),\n    \"download    |   \" ++ formatFileSize(network.download),\n  ]"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if roturLink.enabled ("
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "roturLink",
                "source": "roturLink"
              },
              {
                "type": "var",
                "data": "enabled",
                "source": "enabled"
              }
            ],
            "source": "roturLink.enabled"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "net = roturLink.network",
                  "left": {
                    "type": "var",
                    "data": "net",
                    "source": "net"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "roturLink",
                        "source": "roturLink"
                      },
                      {
                        "type": "var",
                        "data": "network",
                        "source": "network"
                      }
                    ],
                    "source": "roturLink.network"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "++=",
                  "source": "info ++= [\n      \"\",\n      \"- Packets\",\n      \"received    |   \" ++ net.packets_received,\n      \"sent        |   \" ++ net.packets_sent,\n      \"\",\n      \"- Data\",\n      \"received    |   \" ++ formatFileSize(net.received),\n      \"sent        |   \" ++ formatFileSize(net.sent)\n    ]",
                  "left": {
                    "type": "var",
                    "data": "info",
                    "source": "info"
                  },
                  "right": {
                    "type": "arr",
                    "data": [
                      {
                        "type": "str",
                        "data": "\"\"",
                        "source": "\"\""
                      },
                      {
                        "type": "str",
                        "data": "\"- Packets\"",
                        "source": "\"- Packets\""
                      },
                      {
                        "type": "opr",
                        "data": "++",
                        "source": "++",
                        "left": {
                          "type": "str",
                          "data": "\"received    |   \"",
                          "source": "\"received    |   \""
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "net",
                              "source": "net"
                            },
                            {
                              "type": "var",
                              "data": "packets_received",
                              "source": "packets_received"
                            }
                          ],
                          "source": "net.packets_received"
                        }
                      },
                      {
                        "type": "opr",
                        "data": "++",
                        "source": "++",
                        "left": {
                          "type": "str",
                          "data": "\"sent        |   \"",
                          "source": "\"sent        |   \""
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "net",
                              "source": "net"
                            },
                            {
                              "type": "var",
                              "data": "packets_sent",
                              "source": "packets_sent"
                            }
                          ],
                          "source": "net.packets_sent"
                        }
                      },
                      {
                        "type": "str",
                        "data": "\"\"",
                        "source": "\"\""
                      },
                      {
                        "type": "str",
                        "data": "\"- Data\"",
                        "source": "\"- Data\""
                      },
                      {
                        "type": "opr",
                        "data": "++",
                        "source": "++",
                        "left": {
                          "type": "str",
                          "data": "\"received    |   \"",
                          "source": "\"received    |   \""
                        },
                        "right": {
                          "type": "fnc",
                          "data": "formatFileSize",
                          "parameters": [
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "net",
                                  "source": "net"
                                },
                                {
                                  "type": "var",
                                  "data": "received",
                                  "source": "received"
                                }
                              ],
                              "source": "net.received"
                            }
                          ],
                          "source": "formatFileSize(net.received)"
                        }
                      },
                      {
                        "type": "opr",
                        "data": "++",
                        "source": "++",
                        "left": {
                          "type": "str",
                          "data": "\"sent        |   \"",
                          "source": "\"sent        |   \""
                        },
                        "right": {
                          "type": "fnc",
                          "data": "formatFileSize",
                          "parameters": [
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "net",
                                  "source": "net"
                                },
                                {
                                  "type": "var",
                                  "data": "sent",
                                  "source": "sent"
                                }
                              ],
                              "source": "net.sent"
                            }
                          ],
                          "source": "formatFileSize(net.sent)"
                        }
                      }
                    ],
                    "source": "[\n      \"\",\n      \"- Packets\",\n      \"received    |   \" ++ net.packets_received,\n      \"sent        |   \" ++ net.packets_sent,\n      \"\",\n      \"- Data\",\n      \"received    |   \" ++ formatFileSize(net.received),\n      \"sent        |   \" ++ formatFileSize(net.sent)\n    ]"
                  }
                }
              ]
            ],
            "source": "(\n    net = roturLink.network\n    info ++= [\n      \"\",\n      \"- Packets\",\n      \"received    |   \" ++ net.packets_received,\n      \"sent        |   \" ++ net.packets_sent,\n      \"\",\n      \"- Data\",\n      \"received    |   \" ++ formatFileSize(net.received),\n      \"sent        |   \" ++ formatFileSize(net.sent)\n    ]\n  )"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 60 -60"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 60,
            "source": "60"
          },
          {
            "type": "num",
            "data": -60,
            "source": "-60"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text info.join(\"\\n\") 10 : c#txtc"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "info",
                "source": "info"
              },
              {
                "type": "mtv",
                "data": "join",
                "parameters": [
                  {
                    "type": "str",
                    "data": "\"\\n\"",
                    "source": "\"\\n\""
                  }
                ],
                "source": "join(\"\\n\")"
              }
            ],
            "source": "info.join(\"\\n\")"
          },
          {
            "type": "num",
            "data": 10,
            "source": "10"
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc",
                "source": "txtc"
              }
            ],
            "source": "c#txtc"
          }
        ]
      ],
      "source": "(\n  info = [\n    \"connected   |   \" ++ network.connected,\n    \"server      |   \" ++ network.server,\n    \"username    |   \" ++ network.username,\n    \"\",\n    \"- Websocket\",\n    \"upload      |   \" ++ formatFileSize(network.upload),\n    \"download    |   \" ++ formatFileSize(network.download),\n  ]\n  if roturLink.enabled (\n    net = roturLink.network\n    info ++= [\n      \"\",\n      \"- Packets\",\n      \"received    |   \" ++ net.packets_received,\n      \"sent        |   \" ++ net.packets_sent,\n      \"\",\n      \"- Data\",\n      \"received    |   \" ++ formatFileSize(net.received),\n      \"sent        |   \" ++ formatFileSize(net.sent)\n    ]\n  )\n  loc 2 2 60 -60\n  text info.join(\"\\n\") 10 : c#txtc\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if current_tab == \"Render Info\" ("
    },
    {
      "type": "cmp",
      "data": "==",
      "source": "==",
      "left": {
        "type": "var",
        "data": "current_tab",
        "source": "current_tab"
      },
      "right": {
        "type": "str",
        "data": "\"Render Info\"",
        "source": "\"Render Info\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "minimised_text = \"Info\"",
            "left": {
              "type": "var",
              "data": "minimised_text",
              "source": "minimised_text"
            },
            "right": {
              "type": "str",
              "data": "\"Info\"",
              "source": "\"Info\""
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "window",
            "source": "window \"responsive\" False"
          },
          {
            "type": "str",
            "data": "\"responsive\"",
            "source": "\"responsive\""
          },
          {
            "type": "var",
            "data": "False",
            "source": "False"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 50 -45"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 50,
            "source": "50"
          },
          {
            "type": "num",
            "data": -45,
            "source": "-45"
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "x = x_position",
            "left": {
              "type": "var",
              "data": "x",
              "source": "x"
            },
            "right": {
              "type": "var",
              "data": "x_position",
              "source": "x_position"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "y = y_position",
            "left": {
              "type": "var",
              "data": "y",
              "source": "y"
            },
            "right": {
              "type": "var",
              "data": "y_position",
              "source": "y_position"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc -2 -2 0 0"
          },
          {
            "type": "num",
            "data": -2,
            "source": "-2"
          },
          {
            "type": "num",
            "data": -2,
            "source": "-2"
          },
          {
            "type": "num",
            "data": 0,
            "source": "0"
          },
          {
            "type": "num",
            "data": 0,
            "source": "0"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "c",
            "source": "c prim"
          },
          {
            "type": "var",
            "data": "prim",
            "source": "prim"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "frame",
            "source": "frame x y x_position y_position windows_names.len * 40"
          },
          {
            "type": "var",
            "data": "x",
            "source": "x"
          },
          {
            "type": "var",
            "data": "y",
            "source": "y"
          },
          {
            "type": "var",
            "data": "x_position",
            "source": "x_position"
          },
          {
            "type": "var",
            "data": "y_position",
            "source": "y_position"
          },
          {
            "type": "opr",
            "data": "*",
            "source": "*",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "windows_names",
                  "source": "windows_names"
                },
                {
                  "type": "var",
                  "data": "len",
                  "source": "len"
                }
              ],
              "source": "windows_names.len"
            },
            "right": {
              "type": "num",
              "data": 40,
              "source": "40"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "y = scroll_y - 20",
            "left": {
              "type": "var",
              "data": "y",
              "source": "y"
            },
            "right": {
              "type": "opr",
              "data": "-",
              "source": "-",
              "left": {
                "type": "var",
                "data": "scroll_y",
                "source": "scroll_y"
              },
              "right": {
                "type": "num",
                "data": 20,
                "source": "20"
              }
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "tot = 0",
            "left": {
              "type": "var",
              "data": "tot",
              "source": "tot"
            },
            "right": {
              "type": "num",
              "data": 0,
              "source": "0"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "source": "w = frame_width - 20",
            "left": {
              "type": "var",
              "data": "w",
              "source": "w"
            },
            "right": {
              "type": "opr",
              "data": "-",
              "source": "-",
              "left": {
                "type": "var",
                "data": "frame_width",
                "source": "frame_width"
              },
              "right": {
                "type": "num",
                "data": 20,
                "source": "20"
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "for",
            "source": "for count windows_names.len ("
          },
          {
            "type": "str",
            "data": "count",
            "source": "count"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "windows_names",
                "source": "windows_names"
              },
              {
                "type": "var",
                "data": "len",
                "source": "len"
              }
            ],
            "source": "windows_names.len"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 999 2 0 y"
                },
                {
                  "type": "num",
                  "data": 999,
                  "source": "999"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 0,
                  "source": "0"
                },
                {
                  "type": "var",
                  "data": "y",
                  "source": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 25 10 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w",
                  "source": "w"
                },
                {
                  "type": "num",
                  "data": 25,
                  "source": "25"
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim",
                      "source": "prim"
                    }
                  ],
                  "source": "c#prim"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_touching ("
                },
                {
                  "type": "var",
                  "data": "mouse_touching",
                  "source": "mouse_touching"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 25 10 : c#seco"
                      },
                      {
                        "type": "var",
                        "data": "w",
                        "source": "w"
                      },
                      {
                        "type": "num",
                        "data": 25,
                        "source": "25"
                      },
                      {
                        "type": "num",
                        "data": 10,
                        "source": "10"
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco",
                            "source": "seco"
                          }
                        ],
                        "source": "c#seco"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if onclick ("
                      },
                      {
                        "type": "var",
                        "data": "onclick",
                        "source": "onclick"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "window",
                              "source": "window \"add\" window.file.uuid windows_ids.[count]"
                            },
                            {
                              "type": "str",
                              "data": "\"add\"",
                              "source": "\"add\""
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "window",
                                  "source": "window"
                                },
                                {
                                  "type": "var",
                                  "data": "file",
                                  "source": "file"
                                },
                                {
                                  "type": "var",
                                  "data": "uuid",
                                  "source": "uuid"
                                }
                              ],
                              "source": "window.file.uuid"
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "windows_ids",
                                  "source": "windows_ids"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "var",
                                      "data": "count",
                                      "source": "count"
                                    }
                                  ],
                                  "source": "[count]"
                                }
                              ],
                              "source": "windows_ids.[count]"
                            }
                          ]
                        ],
                        "source": "(\n        window \"add\" window.file.uuid windows_ids.[count]\n      )"
                      }
                    ]
                  ],
                  "source": "(\n      square w 25 10 : c#seco\n      if onclick (\n        window \"add\" window.file.uuid windows_ids.[count]\n      )\n    )"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "rightclick",
                  "source": "rightclick \"window\" windows_names.[count]"
                },
                {
                  "type": "str",
                  "data": "\"window\"",
                  "source": "\"window\""
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "windows_names",
                      "source": "windows_names"
                    },
                    {
                      "type": "mtv",
                      "data": "item",
                      "parameters": [
                        {
                          "type": "var",
                          "data": "count",
                          "source": "count"
                        }
                      ],
                      "source": "[count]"
                    }
                  ],
                  "source": "windows_names.[count]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 15 y"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 15,
                  "source": "15"
                },
                {
                  "type": "var",
                  "data": "y",
                  "source": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text windows_names.[count] 7 : c#txtc"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "windows_names",
                      "source": "windows_names"
                    },
                    {
                      "type": "mtv",
                      "data": "item",
                      "parameters": [
                        {
                          "type": "var",
                          "data": "count",
                          "source": "count"
                        }
                      ],
                      "source": "[count]"
                    }
                  ],
                  "source": "windows_names.[count]"
                },
                {
                  "type": "num",
                  "data": 7,
                  "source": "7"
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc",
                      "source": "txtc"
                    }
                  ],
                  "source": "c#txtc"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc -2 2 -15 y"
                },
                {
                  "type": "num",
                  "data": -2,
                  "source": "-2"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": -15,
                  "source": "-15"
                },
                {
                  "type": "var",
                  "data": "y",
                  "source": "y"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "d = windows_drawtimes.[count].[1]",
                  "left": {
                    "type": "var",
                    "data": "d",
                    "source": "d"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "windows_drawtimes",
                        "source": "windows_drawtimes"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "count",
                            "source": "count"
                          }
                        ],
                        "source": "[count]"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1,
                            "source": "1"
                          }
                        ],
                        "source": "[1]"
                      }
                    ],
                    "source": "windows_drawtimes.[count].[1]"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "+=",
                  "source": "tot += d",
                  "left": {
                    "type": "var",
                    "data": "tot",
                    "source": "tot"
                  },
                  "right": {
                    "type": "var",
                    "data": "d",
                    "source": "d"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "rigtext",
                  "source": "rigtext d.toStr() 7"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "d",
                      "source": "d"
                    },
                    {
                      "type": "mtv",
                      "data": "toStr",
                      "parameters": [],
                      "source": "toStr()"
                    }
                  ],
                  "source": "d.toStr()"
                },
                {
                  "type": "num",
                  "data": 7,
                  "source": "7"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "source": "y -= 40",
                  "left": {
                    "type": "var",
                    "data": "y",
                    "source": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 40,
                    "source": "40"
                  }
                }
              ]
            ],
            "source": "(\n    loc 999 2 0 y\n    square w 25 10 : c#prim\n    if mouse_touching (\n      square w 25 10 : c#seco\n      if onclick (\n        window \"add\" window.file.uuid windows_ids.[count]\n      )\n    )\n    rightclick \"window\" windows_names.[count]\n    loc 2 2 15 y\n    text windows_names.[count] 7 : c#txtc\n    loc -2 2 -15 y\n    d = windows_drawtimes.[count].[1]\n    tot += d\n    rigtext d.toStr() 7\n    y -= 40\n  )"
          }
        ]
      ],
      "source": "(\n  minimised_text = \"Info\"\n  window \"responsive\" False\n  loc 2 2 50 -45\n  x = x_position\n  y = y_position\n  loc -2 -2 0 0\n  c prim\n  frame x y x_position y_position windows_names.len * 40\n  y = scroll_y - 20\n  tot = 0\n  w = frame_width - 20\n  for count windows_names.len (\n    loc 999 2 0 y\n    square w 25 10 : c#prim\n    if mouse_touching (\n      square w 25 10 : c#seco\n      if onclick (\n        window \"add\" window.file.uuid windows_ids.[count]\n      )\n    )\n    rightclick \"window\" windows_names.[count]\n    loc 2 2 15 y\n    text windows_names.[count] 7 : c#txtc\n    loc -2 2 -15 y\n    d = windows_drawtimes.[count].[1]\n    tot += d\n    rigtext d.toStr() 7\n    y -= 40\n  )\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if current_tab == \"Disk\" ("
    },
    {
      "type": "cmp",
      "data": "==",
      "source": "==",
      "left": {
        "type": "var",
        "data": "current_tab",
        "source": "current_tab"
      },
      "right": {
        "type": "str",
        "data": "\"Disk\"",
        "source": "\"Disk\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 60 -60"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 2,
            "source": "2"
          },
          {
            "type": "num",
            "data": 60,
            "source": "60"
          },
          {
            "type": "num",
            "data": -60,
            "source": "-60"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text \"- Rotur Cloud\\n\" 10 : c#txtc"
          },
          {
            "type": "str",
            "data": "\"- Rotur Cloud\\n\"",
            "source": "\"- Rotur Cloud\\n\""
          },
          {
            "type": "num",
            "data": 10,
            "source": "10"
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc",
                "source": "txtc"
              }
            ],
            "source": "c#txtc"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text disk_info.join(\"\\n\") 10"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "disk_info",
                "source": "disk_info"
              },
              {
                "type": "mtv",
                "data": "join",
                "parameters": [
                  {
                    "type": "str",
                    "data": "\"\\n\"",
                    "source": "\"\\n\""
                  }
                ],
                "source": "join(\"\\n\")"
              }
            ],
            "source": "disk_info.join(\"\\n\")"
          },
          {
            "type": "num",
            "data": 10,
            "source": "10"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if roturLink.enabled ("
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "roturLink",
                "source": "roturLink"
              },
              {
                "type": "var",
                "data": "enabled",
                "source": "enabled"
              }
            ],
            "source": "roturLink.enabled"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "local disk = roturLink.disk",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this",
                        "source": "this"
                      },
                      {
                        "type": "var",
                        "data": "disk",
                        "source": "disk"
                      }
                    ],
                    "source": "this.disk"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "roturLink",
                        "source": "roturLink"
                      },
                      {
                        "type": "var",
                        "data": "disk",
                        "source": "disk"
                      }
                    ],
                    "source": "roturLink.disk"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 60 -200"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 2,
                  "source": "2"
                },
                {
                  "type": "num",
                  "data": 60,
                  "source": "60"
                },
                {
                  "type": "num",
                  "data": -200,
                  "source": "-200"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"- Hardware Disk\\n\" 10"
                },
                {
                  "type": "str",
                  "data": "\"- Hardware Disk\\n\"",
                  "source": "\"- Hardware Disk\\n\""
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "++",
                  "left": {
                    "type": "var",
                    "data": "text",
                    "source": "text"
                  },
                  "source": "text \"Free   |   \" ++ formatFileSize(disk.free) ++ \"\\n\" 10"
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "++",
                  "left": {
                    "type": "var",
                    "data": "text",
                    "source": "text"
                  },
                  "source": "text \"Used   |   \" ++ formatFileSize(disk.used) ++ \"\\n\" 10"
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "++",
                  "left": {
                    "type": "var",
                    "data": "text",
                    "source": "text"
                  },
                  "source": "text \"Size   |   \" ++ formatFileSize(disk.total) ++ \"\\n\" 10"
                },
                {
                  "type": "num",
                  "data": 10,
                  "source": "10"
                }
              ]
            ],
            "source": "(\n    local disk = roturLink.disk\n    loc 2 2 60 -200\n    text \"- Hardware Disk\\n\" 10\n    text \"Free   |   \" ++ formatFileSize(disk.free) ++ \"\\n\" 10\n    text \"Used   |   \" ++ formatFileSize(disk.used) ++ \"\\n\" 10\n    text \"Size   |   \" ++ formatFileSize(disk.total) ++ \"\\n\" 10\n  )"
          }
        ]
      ],
      "source": "(\n  loc 2 2 60 -60\n  text \"- Rotur Cloud\\n\" 10 : c#txtc\n  text disk_info.join(\"\\n\") 10\n  \n  if roturLink.enabled (\n    local disk = roturLink.disk\n    loc 2 2 60 -200\n    text \"- Hardware Disk\\n\" 10\n    text \"Free   |   \" ++ formatFileSize(disk.free) ++ \"\\n\" 10\n    text \"Used   |   \" ++ formatFileSize(disk.used) ++ \"\\n\" 10\n    text \"Size   |   \" ++ formatFileSize(disk.total) ++ \"\\n\" 10\n  )\n)"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if mouse_down.not \"can = true\""
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "mouse_down",
          "source": "mouse_down"
        },
        {
          "type": "var",
          "data": "not",
          "source": "not"
        }
      ],
      "source": "mouse_down.not"
    },
    {
      "type": "str",
      "data": "\"can = true\"",
      "source": "\"can = true\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "frame",
      "source": "frame \"clear\""
    },
    {
      "type": "str",
      "data": "\"clear\"",
      "source": "\"clear\""
    }
  ]
]