[
  [
    {
      "type": "cmd",
      "data": "import",
      "source": "import as \"glass\" from \"packages\""
    },
    {
      "type": "var",
      "data": "as"
    },
    {
      "type": "str",
      "data": "\"glass\""
    },
    {
      "type": "var",
      "data": "from"
    },
    {
      "type": "str",
      "data": "\"packages\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "import",
      "source": "import \"window_tools\""
    },
    {
      "type": "str",
      "data": "\"window_tools\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "load_theme",
      "source": "load_theme"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"save admin\""
    },
    {
      "type": "str",
      "data": "\"request\""
    },
    {
      "type": "str",
      "data": "\"save admin\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"javascript\""
    },
    {
      "type": "str",
      "data": "\"request\""
    },
    {
      "type": "str",
      "data": "\"javascript\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"terminal\""
    },
    {
      "type": "str",
      "data": "\"request\""
    },
    {
      "type": "str",
      "data": "\"terminal\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"file admin\""
    },
    {
      "type": "str",
      "data": "\"request\""
    },
    {
      "type": "str",
      "data": "\"file admin\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"account\""
    },
    {
      "type": "str",
      "data": "\"request\""
    },
    {
      "type": "str",
      "data": "\"account\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"kernel\""
    },
    {
      "type": "str",
      "data": "\"request\""
    },
    {
      "type": "str",
      "data": "\"kernel\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"setting_toggle\" \"txt, w, state, callback\" (\n  local x = x_position\n  square w 30 10 : c#prim\n  change_x w / -2 + 10\n  text txt 10 : c#txtc\n  set_x x + (w / 2 - 15)\n  square 30 30 5 : c#seco\n  if onclick (\n    set_x x\n    return callback()\n  )\n  if state (\n    icon \"tick\" 0.8 : c#txtc\n  )\n  set_x x\n)"
    },
    {
      "type": "str",
      "data": "\"setting_toggle\""
    },
    {
      "type": "str",
      "data": "\"txt, w, state, callback\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "x"
                }
              ]
            },
            "right": {
              "type": "var",
              "data": "x_position"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square w 30 10 : c#prim"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x w / -2 + 10"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "/",
              "left": {
                "type": "var",
                "data": "w"
              },
              "right": {
                "type": "num",
                "data": -2
              }
            },
            "right": {
              "type": "num",
              "data": 10
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text txt 10 : c#txtc"
          },
          {
            "type": "var",
            "data": "txt"
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x x + (w / 2 - 15)"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "var",
              "data": "x"
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "opr",
                "data": "/",
                "left": {
                  "type": "var",
                  "data": "w"
                },
                "right": {
                  "type": "num",
                  "data": 2
                }
              },
              "right": {
                "type": "num",
                "data": 15
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 30 30 5 : c#seco"
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 5
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "seco"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if onclick (\n    set_x x\n    return callback()\n  )"
          },
          {
            "type": "var",
            "data": "onclick"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x x"
                },
                {
                  "type": "var",
                  "data": "x"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return callback()"
                },
                {
                  "type": "fnc",
                  "data": "callback",
                  "parameters": []
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if state (\n    icon \"tick\" 0.8 : c#txtc\n  )"
          },
          {
            "type": "var",
            "data": "state"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"tick\" 0.8 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"tick\""
                },
                {
                  "type": "num",
                  "data": 0.8
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x x"
          },
          {
            "type": "var",
            "data": "x"
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"setting_do\" \"txt, w, callback, inp\" (\n  local x = x_position\n  square w 30 10 : c#prim\n  local cl = onclick\n  change_x w / -2 + 5\n  text txt 10 : c#txtc\n  set_x x\n  if cl (\n   void callback(inp ?? \"\")\n  )\n)"
    },
    {
      "type": "str",
      "data": "\"setting_do\""
    },
    {
      "type": "str",
      "data": "\"txt, w, callback, inp\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "x"
                }
              ]
            },
            "right": {
              "type": "var",
              "data": "x_position"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square w 30 10 : c#prim"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "cl"
                }
              ]
            },
            "right": {
              "type": "var",
              "data": "onclick"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x w / -2 + 5"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "/",
              "left": {
                "type": "var",
                "data": "w"
              },
              "right": {
                "type": "num",
                "data": -2
              }
            },
            "right": {
              "type": "num",
              "data": 5
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text txt 10 : c#txtc"
          },
          {
            "type": "var",
            "data": "txt"
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x x"
          },
          {
            "type": "var",
            "data": "x"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if cl (\n   void callback(inp ?? \"\")\n  )"
          },
          {
            "type": "var",
            "data": "cl"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "void",
                  "source": "void callback(inp ?? \"\")"
                },
                {
                  "type": "fnc",
                  "data": "callback",
                  "parameters": [
                    {
                      "type": "opr",
                      "data": "??",
                      "left": {
                        "type": "var",
                        "data": "inp"
                      },
                      "right": {
                        "type": "str",
                        "data": "\"\""
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"setting_input\" \"id, default_txt, w, callback\" (\n  square w 30 10 : c#prim\n  if inputs.[id] == null (\n    inputs.[id] = default_txt\n  )\n  if \"enter\".onKeyDown() (\n    return callback(inputs.[id])\n  )\n  input w - 10 25 id null 10\n)"
    },
    {
      "type": "str",
      "data": "\"setting_input\""
    },
    {
      "type": "str",
      "data": "\"id, default_txt, w, callback\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square w 30 10 : c#prim"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if inputs.[id] == null (\n    inputs.[id] = default_txt\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "inputs"
                },
                {
                  "type": "mtv",
                  "data": "item",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "id"
                    }
                  ]
                }
              ]
            },
            "right": {
              "type": "var",
              "data": "null"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "inputs"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "id"
                          }
                        ]
                      }
                    ]
                  },
                  "right": {
                    "type": "var",
                    "data": "default_txt"
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if \"enter\".onKeyDown() (\n    return callback(inputs.[id])\n  )"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "str",
                "data": "\"enter\""
              },
              {
                "type": "mtv",
                "data": "onKeyDown",
                "parameters": []
              }
            ]
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return callback(inputs.[id])"
                },
                {
                  "type": "fnc",
                  "data": "callback",
                  "parameters": [
                    {
                      "type": "asi",
                      "data": "=??",
                      "left": {
                        "type": "var",
                        "data": "inputs"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "inputs"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "id"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "input",
            "source": "input w - 10 25 id null 10"
          },
          {
            "type": "opr",
            "data": "-",
            "left": {
              "type": "var",
              "data": "w"
            },
            "right": {
              "type": "num",
              "data": 10
            }
          },
          {
            "type": "num",
            "data": 25
          },
          {
            "type": "var",
            "data": "id"
          },
          {
            "type": "var",
            "data": "null"
          },
          {
            "type": "num",
            "data": 10
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"appopt\" \"optname,opticn,icnsize\" (\n  loc 999 2 0 y\n  square frame_width - 25 30 10 1 : c#prim\n  loc 2 2 30 y\n  icon opticn icnsize.destr : c#txtc\n  change_x 25\n  text optname 8\n)"
    },
    {
      "type": "str",
      "data": "\"appopt\""
    },
    {
      "type": "str",
      "data": "\"optname,opticn,icnsize\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 999 2 0 y"
          },
          {
            "type": "num",
            "data": 999
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "var",
            "data": "y"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square frame_width - 25 30 10 1 : c#prim"
          },
          {
            "type": "opr",
            "data": "-",
            "left": {
              "type": "var",
              "data": "frame_width"
            },
            "right": {
              "type": "num",
              "data": 25
            }
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "num",
            "data": 1
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 30 y"
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "var",
            "data": "y"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "icon",
            "source": "icon opticn icnsize.destr : c#txtc"
          },
          {
            "type": "var",
            "data": "opticn"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "icnsize"
              },
              {
                "type": "var",
                "data": "destr"
              }
            ]
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x 25"
          },
          {
            "type": "num",
            "data": 25
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text optname 8"
          },
          {
            "type": "var",
            "data": "optname"
          },
          {
            "type": "num",
            "data": 8
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"DrawCategory\" \"setting,icn_code\" (\n  temp = x_position\n  change_x 80\n  if category == setting (\n    square 190 30 15 : c#seco\n    square 190 30 10 : c#prim\n  ) else (\n    square 190 30 15 0 1\n  )\n  if onclick (\n    category = setting\n    subcategory = \"none\"\n  )\n  icon icn_code 0.8 : c#txtc chx#-80\n  change_x 25\n  text setting 10\n  goto temp y_position - 50\n)"
    },
    {
      "type": "str",
      "data": "\"DrawCategory\""
    },
    {
      "type": "str",
      "data": "\"setting,icn_code\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "temp"
            },
            "right": {
              "type": "var",
              "data": "x_position"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x 80"
          },
          {
            "type": "num",
            "data": 80
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if category == setting (\n    square 190 30 15 : c#seco\n    square 190 30 10 : c#prim\n  ) else (\n    square 190 30 15 0 1\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "category"
            },
            "right": {
              "type": "var",
              "data": "setting"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 190 30 15 : c#seco"
                },
                {
                  "type": "num",
                  "data": 190
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 190 30 10 : c#prim"
                },
                {
                  "type": "num",
                  "data": 190
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ]
            ]
          },
          {
            "type": "var",
            "data": "else"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 190 30 15 0 1"
                },
                {
                  "type": "num",
                  "data": 190
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "num",
                  "data": 1
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if onclick (\n    category = setting\n    subcategory = \"none\"\n  )"
          },
          {
            "type": "var",
            "data": "onclick"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "category"
                  },
                  "right": {
                    "type": "var",
                    "data": "setting"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "subcategory"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"none\""
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "icon",
            "source": "icon icn_code 0.8 : c#txtc chx#-80"
          },
          {
            "type": "var",
            "data": "icn_code"
          },
          {
            "type": "num",
            "data": 0.8
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          },
          {
            "type": "mod",
            "data": [
              "chx",
              {
                "type": "num",
                "data": -80
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x 25"
          },
          {
            "type": "num",
            "data": 25
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text setting 10"
          },
          {
            "type": "var",
            "data": "setting"
          },
          {
            "type": "num",
            "data": 10
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto temp y_position - 50"
          },
          {
            "type": "var",
            "data": "temp"
          },
          {
            "type": "opr",
            "data": "-",
            "left": {
              "type": "var",
              "data": "y_position"
            },
            "right": {
              "type": "num",
              "data": 50
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"option\" \"name,icn_code\" (\n  loc 999 2 0 y\n  local w = frame.width - 100\n  square w 30 10 0 1\n  if mouse_touching (\n    square w 30 15 : c#seco\n    square w 30 10 : c#prim\n    if onclick (\n      gotosubcategory = name\n    )\n  ) else (\n    square w 30 15 1 : c#prim\n  )\n  change_x w / -2 + 20\n  icn_code ??= name\n  icon icn_code 0.8 : c#txtc\n  text name 10 : chx#30\n  y -= 50\n  page_len += 50\n)"
    },
    {
      "type": "str",
      "data": "\"option\""
    },
    {
      "type": "str",
      "data": "\"name,icn_code\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 999 2 0 y"
          },
          {
            "type": "num",
            "data": 999
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "var",
            "data": "y"
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 100
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square w 30 10 0 1"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 1
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if mouse_touching (\n    square w 30 15 : c#seco\n    square w 30 10 : c#prim\n    if onclick (\n      gotosubcategory = name\n    )\n  ) else (\n    square w 30 15 1 : c#prim\n  )"
          },
          {
            "type": "var",
            "data": "mouse_touching"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#seco"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 10 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n      gotosubcategory = name\n    )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "gotosubcategory"
                        },
                        "right": {
                          "type": "var",
                          "data": "name"
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "type": "var",
            "data": "else"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 1 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "num",
                  "data": 1
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x w / -2 + 20"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "/",
              "left": {
                "type": "var",
                "data": "w"
              },
              "right": {
                "type": "num",
                "data": -2
              }
            },
            "right": {
              "type": "num",
              "data": 20
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "??=",
            "left": {
              "type": "var",
              "data": "icn_code"
            },
            "right": {
              "type": "var",
              "data": "name"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "icon",
            "source": "icon icn_code 0.8 : c#txtc"
          },
          {
            "type": "var",
            "data": "icn_code"
          },
          {
            "type": "num",
            "data": 0.8
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text name 10 : chx#30"
          },
          {
            "type": "var",
            "data": "name"
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "chx",
              {
                "type": "num",
                "data": 30
              }
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "-=",
            "left": {
              "type": "var",
              "data": "y"
            },
            "right": {
              "type": "num",
              "data": 50
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "+=",
            "left": {
              "type": "var",
              "data": "page_len"
            },
            "right": {
              "type": "num",
              "data": 50
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"system\" (\n  local w = frame.width - 25\n  switch subcategory (\n    case \"none\"\n      option \"About\" \"info\"\n      option \"Display\" \"w 3 square 0 3 10 7 w 3 line 0 -7 0 -10 line -6 -10 6 -10\"\n      option \"Media\" \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\"\n      option \"Boot Applications\" \"w 2.5 cutcircle 0 0 10 18 130 line 0 4 0 10\"\n      option \"Storage\" \"w 3 line -10 10 5 10 cont 10 5 cont 10 -10 cont -10 -10 cont -10 10 line -4 5 2 5 w 8 line 0 -2 0 -2\"\n      option \"Keybinds\" \"w 2.5 line -3 7 -3 -7 line -7 3 7 3 line -7 -3 7 -3 line 3 7 3 -7 w 2.2 cutcircle -7 7 4 -4.5 135 cutcircle 7 7 4 4.5 135 cutcircle 7 -7 4 13.5 135 cutcircle -7 -7 4 -13.5 135\"\n      option \"Time\" \"alarm-clock\"\n      option \"Gamepads\" \"controller\"\n      break\n    case \"About\"\n      info\n      break\n    case \"Display\"\n      loc 2 2 10 -20 + scroll_y\n      text \"Origin Resolution: \" ++ screensize_x ++ \"x\" ++ screensize_y 10 : c#txtc\n      \n      goto 0 window.top - 100 + scroll_y\n      if roturlink.enabled (\n        local before_brightness = slider_brightness\n        centext \"Brightness\" 10 : c#txtc\n        slider w 20 \"brightness\" : c#prim chy#-30\n        if round(before_brightness * 100) != round(slider_brightness * 100) (\n          roturlink.send({\n            \"cmd\":\"brightness_set\",\n            \"val\":round(slider_brightness * 100)\n          })\n        )\n        change_y -50\n      )\n      \n      terminal \"system display get invert\"\n      c #txtc\n      setting_toggle \"Invert Colours\" w data === 100 def(val) -> (\n        terminal \"system display get invert\"\n        inp = 100 - data\n        terminal \"system display set invert\" + inp.toStr()\n      )\n      terminal \"flags nightmode get\"\n      change_y -45 : c#txtc\n      setting_toggle \"Night Mode\" w data def(val) -> (\n        terminal \"flags nightmode get\"\n        terminal \"flags nightmode set\" + (data == false)\n      )\n      break\n    case \"Media\"\n      if media == \"\" (\n        terminal \"get access camera\"\n        data2 = data\n        terminal \"get access microphone\"\n        if [data, data2].contains(\"granted\") (\n          terminal \"get mediadevices\"\n          media = data.JsonParse()\n          keys = media.getKeys()\n          types = media.getValues().getKeys(\"type\")\n        ) else (\n          media = \"Please Grant Origin Microphone And Camera Permissions\"\n        )\n      )\n      loc 2 2 10 -40 + scroll_y\n      text \"System Volume\" + round(slider_volume * 100) ++ \"%\" 10 : c#txtc\n      loc 999 2 0 -90 + scroll_y\n      terminal \"system sound get volume\"\n      slider_volume = data / 100\n      slider w 40 \"volume\" 15 : c#prim\n      terminal \"system sound set volume\" + ( slider_volume * 100 )\n      c txtc\n      loc 2 2 10 -160 + scroll_y\n      if media.istype(\"object\") (\n        text \"Media Devices\" 10\n        for i keys.len (\n          y = i + 2.5 * -60 + scroll_y\n          loc 999 2 0 y\n          w = frame.width - 25\n          square w 40 15 : c#prim\n          if mouse_touching (\n            square w 40 15 : c#seco\n            square w 40 10 : c#prim\n          )\n          cur = keys.[i]\n          loc 2 2 30 y\n          square 30 30 10 : c#seco\n          c txtc\n          type = types.[i]\n          if type == \"audiooutput\" or type == \"audioboth\" (\n            icon \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\" 0.7\n          )\n          if type == \"audioinput\" (\n            icon \"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\" 0.7\n          )\n          if type == \"videoinput\" (\n            icon \"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\" 0.7\n          )\n          text cur 9 : chx#30\n        )\n        page_len = keys.len + 3 * 60\n      ) else (\n        text media 10\n        page_len = 100\n      )\n      break\n    case \"Boot Applications\"\n      boot_apps = user.onboot\n      if new_transmit (\n        file \"open\" transmit_data\n        f = file.[3] ++ \"/\" ++ file.[2] ++ file.[1]\n        void boot_apps.append(f)\n        network \"update\" \"onboot\" boot_apps\n        new_transmit = false\n      )\n      w = frame.width - 25\n      y = -30 + scroll_y\n      loc 9999 2 0 y\n      square w 30 15 : c#prim\n      loc 2 2 30 y\n      icon \"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\" 0.6 : c#txtc\n      if onclick (\n        boot_apps = [\n          \"origin/(a) system/system apps/originWM.osl\",\n          \"origin/(a) system/system apps/Desktop.osl\",\n          \"origin/(a) system/docks/Dock.osl\",\n          \"origin/(a) system/system apps/Quick_Settings.osl\"\n        ]\n        network \"update\" \"onboot\" boot_apps\n      )\n      text \"Reset Boot To Default\" 9 : chx#20\n      loc 2 2 20 -70 + scroll_y\n      text \"Drop File Here\" 9 : c#txtc\n      if file_dropped != 0 (\n        local dat = open(file_dropped, [\"location\",\"name\",\"type\"])\n        void boot_apps.append(dat.[1] ++ \"/\" ++ dat.[2] ++ dat.[3])\n       \n        network \"update\" \"onboot\" boot_apps\n        file_dropped = 0\n      )\n      loc 9999 2 0 y - 50\n      square w 30 15 : c#prim\n      if onclick (\n        file \"pick\" \"osl\"\n        can = false\n      )\n      loc 2 2 30 y - 50\n      icon \"upload\" 0.7 : c#txtc\n      text \"Click here or drop an osl file to add it to your boot\" 9 : chx#20\n\n      for count boot_apps.len (\n        y = count + 1.5 * -60 + scroll_y\n        loc 999 2 0 y\n        square w 40 15 : c#prim\n        loc 2 2 15 y\n        text boot_apps.[count] 9 : c#txtc\n        loc -2 2 -33 y\n        square 30 30 10 0 1\n        if mouse_touching (\n          square 30 30 10 : c#prim\n          if onclick (\n            boot_apps.delete(count)\n            network \"update\" \"onboot\" boot_apps\n          )\n        )\n        icon \"bin\" 0.8 : c#txtc\n      )\n      page_len = boot_apps.len + 2 * 60\n      break\n    case \"Storage\"\n      y = -160 + 75 + scroll_y\n      loc 2 2 80 y\n      image pfp 100 100\n      text \"(Network)\" + username 15 : chx#80 chy#20 c#txtc\n      change_x 20\n      square 120 20 10 : c#prim chx#100\n      if mouse_touching (\n        cursor \"pointer\"\n        if onclick (\n          http \"newtab\" \"https://patreon.com/mistium\"\n        )\n      )\n      image \"https://origin.mistium.com/OSL%20Programs/assets/Settings/originOS%20patreon%20badge.png\" null 25\n      \n      loc 2 2 160 y\n      text formatFileSize(user.used_size) ++ \"/\" ++ formatFileSize(user.max_size) 10 : c#txtc\n      loc 999 2 125 / 2 y - 35\n      c prim\n      bar frame_width - 200 20 10 user.used_size / user.max_size seco\n      page_len = 460\n  \n      if total_files == 0 (\n        loop 100 (\n          file \"open\" current.[1] \"onlyaccess\"\n          dat = fileGet(4).toStr()\n          file = dat.len + \"bytes\"\n          file = \" \" * (15 - file.len) + file + \"-\" + fileGet(2)\n          file.append(fileGet(1))\n          files.append(file)\n          current.delete(1)\n          if fileGet(1) == \".folder\" (\n            current ++= fileGet(4)\n          )\n          total_files = files.len\n          file_data = files.sort().reverse().trim(1,20)\n        )\n\n        goto frame.left + 30 frame.top + scroll_y - 200\n        direction (timer * 100).sin() * 360\n        icon \"w 2 cutcircle 0 0 10 0 90\" 1 : c#txtc\n        direction 90\n        text files.len + \"Files Processed\" 10 : chx#30\n      ) else (\n        loc 2 2 20 -200 + scroll_y\n        text \"Biggest Files\" 9 : c#txtc\n        for i file_data.len (\n          loc 2 2 20 i * -30 - 200 + scroll_y\n          text file_data.[i] 9\n        )\n        page_len = file_data.len * 30 + 200\n      )\n      break\n    case \"Keybinds\"\n      \n      break\n    case \"Time\"\n      goto 0 frame.top - 40 + scroll_y\n      centext timestamp.timestamp(\"convert-time\") ++ \".\" ++ timestamp.toStr().right(3) 20 : c#txtc\n      change_y -50\n      centext \"Your originOS time is offset by\" 10\n      change_y -40\n      centext time.offset ++ \"ms\" 20\n      change_y -40\n      centext \"to make it more accurate\" 10\n\n      change_y -50\n      setting_toggle \"Show Seconds\" w user.timeformat.show_seconds def() -> (\n        local current_format = user.timeformat\n        current_format.show_seconds = current_format.show_seconds.not()\n        network \"update\" \"timeformat\" current_format\n      )\n\n      change_y -50\n      setting_toggle \"Use 24 hour time\" w user.timeformat.hours == \"24h\" def() -> (\n        local current_format = user.timeformat\n        current_format.hours = current_format.hours == \"24h\" ? \"12h\" \"24h\"\n        network \"update\" \"timeformat\" current_format\n      )\n      break\n    case \"Gamepads\"\n      local gamepads = getGamepads()\n      \n      loc 2 2 10 -20 + scroll_y\n      text \"Total: \" ++ gamepads.len ++ \"/4\" 10 : c#txtc\n      \n      y = y_position + 70\n      for i gamepads.len (\n        y -= 170\n        local cur @= gamepads.[i]\n        goto 0 y\n        square w 150 10 : c#prim\n        set_x frame.left + 20 : chy#60\n        text cur.id 10 : c#txtc\n        goto frame.left + 30 y + 20\n        for j cur.axes.len (\n          local x = x_position\n          square 0 0 30 : c#seco\n          change cur.axes.[j].x * 10 cur.axes.[j].y * 10\n          square 0 0 5 : c#txtc\n          goto x + 40 y + 20\n        )\n        goto frame.left + 30 y - 20\n        for j cur.buttons.len (\n          local x = x_position\n          if cur.buttons.[j].[\"pressed\"] (\n            square 0 0 34 : c#txtc\n          )\n          square 0 0 30 : c#seco\n          centext j 10 : c#txtc\n          change_x 40\n          if x_position > frame.right - 20 (\n            set_x frame.left + 30 : chy#-40\n          )\n        )\n      )\n      break\n  )\n  clicked = false\n)"
    },
    {
      "type": "str",
      "data": "\"system\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 25
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "switch",
            "source": "switch subcategory (\n    case \"none\"\n      option \"About\" \"info\"\n      option \"Display\" \"w 3 square 0 3 10 7 w 3 line 0 -7 0 -10 line -6 -10 6 -10\"\n      option \"Media\" \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\"\n      option \"Boot Applications\" \"w 2.5 cutcircle 0 0 10 18 130 line 0 4 0 10\"\n      option \"Storage\" \"w 3 line -10 10 5 10 cont 10 5 cont 10 -10 cont -10 -10 cont -10 10 line -4 5 2 5 w 8 line 0 -2 0 -2\"\n      option \"Keybinds\" \"w 2.5 line -3 7 -3 -7 line -7 3 7 3 line -7 -3 7 -3 line 3 7 3 -7 w 2.2 cutcircle -7 7 4 -4.5 135 cutcircle 7 7 4 4.5 135 cutcircle 7 -7 4 13.5 135 cutcircle -7 -7 4 -13.5 135\"\n      option \"Time\" \"alarm-clock\"\n      option \"Gamepads\" \"controller\"\n      break\n    case \"About\"\n      info\n      break\n    case \"Display\"\n      loc 2 2 10 -20 + scroll_y\n      text \"Origin Resolution: \" ++ screensize_x ++ \"x\" ++ screensize_y 10 : c#txtc\n      \n      goto 0 window.top - 100 + scroll_y\n      if roturlink.enabled (\n        local before_brightness = slider_brightness\n        centext \"Brightness\" 10 : c#txtc\n        slider w 20 \"brightness\" : c#prim chy#-30\n        if round(before_brightness * 100) != round(slider_brightness * 100) (\n          roturlink.send({\n            \"cmd\":\"brightness_set\",\n            \"val\":round(slider_brightness * 100)\n          })\n        )\n        change_y -50\n      )\n      \n      terminal \"system display get invert\"\n      c #txtc\n      setting_toggle \"Invert Colours\" w data === 100 def(val) -> (\n        terminal \"system display get invert\"\n        inp = 100 - data\n        terminal \"system display set invert\" + inp.toStr()\n      )\n      terminal \"flags nightmode get\"\n      change_y -45 : c#txtc\n      setting_toggle \"Night Mode\" w data def(val) -> (\n        terminal \"flags nightmode get\"\n        terminal \"flags nightmode set\" + (data == false)\n      )\n      break\n    case \"Media\"\n      if media == \"\" (\n        terminal \"get access camera\"\n        data2 = data\n        terminal \"get access microphone\"\n        if [data, data2].contains(\"granted\") (\n          terminal \"get mediadevices\"\n          media = data.JsonParse()\n          keys = media.getKeys()\n          types = media.getValues().getKeys(\"type\")\n        ) else (\n          media = \"Please Grant Origin Microphone And Camera Permissions\"\n        )\n      )\n      loc 2 2 10 -40 + scroll_y\n      text \"System Volume\" + round(slider_volume * 100) ++ \"%\" 10 : c#txtc\n      loc 999 2 0 -90 + scroll_y\n      terminal \"system sound get volume\"\n      slider_volume = data / 100\n      slider w 40 \"volume\" 15 : c#prim\n      terminal \"system sound set volume\" + ( slider_volume * 100 )\n      c txtc\n      loc 2 2 10 -160 + scroll_y\n      if media.istype(\"object\") (\n        text \"Media Devices\" 10\n        for i keys.len (\n          y = i + 2.5 * -60 + scroll_y\n          loc 999 2 0 y\n          w = frame.width - 25\n          square w 40 15 : c#prim\n          if mouse_touching (\n            square w 40 15 : c#seco\n            square w 40 10 : c#prim\n          )\n          cur = keys.[i]\n          loc 2 2 30 y\n          square 30 30 10 : c#seco\n          c txtc\n          type = types.[i]\n          if type == \"audiooutput\" or type == \"audioboth\" (\n            icon \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\" 0.7\n          )\n          if type == \"audioinput\" (\n            icon \"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\" 0.7\n          )\n          if type == \"videoinput\" (\n            icon \"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\" 0.7\n          )\n          text cur 9 : chx#30\n        )\n        page_len = keys.len + 3 * 60\n      ) else (\n        text media 10\n        page_len = 100\n      )\n      break\n    case \"Boot Applications\"\n      boot_apps = user.onboot\n      if new_transmit (\n        file \"open\" transmit_data\n        f = file.[3] ++ \"/\" ++ file.[2] ++ file.[1]\n        void boot_apps.append(f)\n        network \"update\" \"onboot\" boot_apps\n        new_transmit = false\n      )\n      w = frame.width - 25\n      y = -30 + scroll_y\n      loc 9999 2 0 y\n      square w 30 15 : c#prim\n      loc 2 2 30 y\n      icon \"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\" 0.6 : c#txtc\n      if onclick (\n        boot_apps = [\n          \"origin/(a) system/system apps/originWM.osl\",\n          \"origin/(a) system/system apps/Desktop.osl\",\n          \"origin/(a) system/docks/Dock.osl\",\n          \"origin/(a) system/system apps/Quick_Settings.osl\"\n        ]\n        network \"update\" \"onboot\" boot_apps\n      )\n      text \"Reset Boot To Default\" 9 : chx#20\n      loc 2 2 20 -70 + scroll_y\n      text \"Drop File Here\" 9 : c#txtc\n      if file_dropped != 0 (\n        local dat = open(file_dropped, [\"location\",\"name\",\"type\"])\n        void boot_apps.append(dat.[1] ++ \"/\" ++ dat.[2] ++ dat.[3])\n       \n        network \"update\" \"onboot\" boot_apps\n        file_dropped = 0\n      )\n      loc 9999 2 0 y - 50\n      square w 30 15 : c#prim\n      if onclick (\n        file \"pick\" \"osl\"\n        can = false\n      )\n      loc 2 2 30 y - 50\n      icon \"upload\" 0.7 : c#txtc\n      text \"Click here or drop an osl file to add it to your boot\" 9 : chx#20\n\n      for count boot_apps.len (\n        y = count + 1.5 * -60 + scroll_y\n        loc 999 2 0 y\n        square w 40 15 : c#prim\n        loc 2 2 15 y\n        text boot_apps.[count] 9 : c#txtc\n        loc -2 2 -33 y\n        square 30 30 10 0 1\n        if mouse_touching (\n          square 30 30 10 : c#prim\n          if onclick (\n            boot_apps.delete(count)\n            network \"update\" \"onboot\" boot_apps\n          )\n        )\n        icon \"bin\" 0.8 : c#txtc\n      )\n      page_len = boot_apps.len + 2 * 60\n      break\n    case \"Storage\"\n      y = -160 + 75 + scroll_y\n      loc 2 2 80 y\n      image pfp 100 100\n      text \"(Network)\" + username 15 : chx#80 chy#20 c#txtc\n      change_x 20\n      square 120 20 10 : c#prim chx#100\n      if mouse_touching (\n        cursor \"pointer\"\n        if onclick (\n          http \"newtab\" \"https://patreon.com/mistium\"\n        )\n      )\n      image \"https://origin.mistium.com/OSL%20Programs/assets/Settings/originOS%20patreon%20badge.png\" null 25\n      \n      loc 2 2 160 y\n      text formatFileSize(user.used_size) ++ \"/\" ++ formatFileSize(user.max_size) 10 : c#txtc\n      loc 999 2 125 / 2 y - 35\n      c prim\n      bar frame_width - 200 20 10 user.used_size / user.max_size seco\n      page_len = 460\n  \n      if total_files == 0 (\n        loop 100 (\n          file \"open\" current.[1] \"onlyaccess\"\n          dat = fileGet(4).toStr()\n          file = dat.len + \"bytes\"\n          file = \" \" * (15 - file.len) + file + \"-\" + fileGet(2)\n          file.append(fileGet(1))\n          files.append(file)\n          current.delete(1)\n          if fileGet(1) == \".folder\" (\n            current ++= fileGet(4)\n          )\n          total_files = files.len\n          file_data = files.sort().reverse().trim(1,20)\n        )\n\n        goto frame.left + 30 frame.top + scroll_y - 200\n        direction (timer * 100).sin() * 360\n        icon \"w 2 cutcircle 0 0 10 0 90\" 1 : c#txtc\n        direction 90\n        text files.len + \"Files Processed\" 10 : chx#30\n      ) else (\n        loc 2 2 20 -200 + scroll_y\n        text \"Biggest Files\" 9 : c#txtc\n        for i file_data.len (\n          loc 2 2 20 i * -30 - 200 + scroll_y\n          text file_data.[i] 9\n        )\n        page_len = file_data.len * 30 + 200\n      )\n      break\n    case \"Keybinds\"\n      \n      break\n    case \"Time\"\n      goto 0 frame.top - 40 + scroll_y\n      centext timestamp.timestamp(\"convert-time\") ++ \".\" ++ timestamp.toStr().right(3) 20 : c#txtc\n      change_y -50\n      centext \"Your originOS time is offset by\" 10\n      change_y -40\n      centext time.offset ++ \"ms\" 20\n      change_y -40\n      centext \"to make it more accurate\" 10\n\n      change_y -50\n      setting_toggle \"Show Seconds\" w user.timeformat.show_seconds def() -> (\n        local current_format = user.timeformat\n        current_format.show_seconds = current_format.show_seconds.not()\n        network \"update\" \"timeformat\" current_format\n      )\n\n      change_y -50\n      setting_toggle \"Use 24 hour time\" w user.timeformat.hours == \"24h\" def() -> (\n        local current_format = user.timeformat\n        current_format.hours = current_format.hours == \"24h\" ? \"12h\" \"24h\"\n        network \"update\" \"timeformat\" current_format\n      )\n      break\n    case \"Gamepads\"\n      local gamepads = getGamepads()\n      \n      loc 2 2 10 -20 + scroll_y\n      text \"Total: \" ++ gamepads.len ++ \"/4\" 10 : c#txtc\n      \n      y = y_position + 70\n      for i gamepads.len (\n        y -= 170\n        local cur @= gamepads.[i]\n        goto 0 y\n        square w 150 10 : c#prim\n        set_x frame.left + 20 : chy#60\n        text cur.id 10 : c#txtc\n        goto frame.left + 30 y + 20\n        for j cur.axes.len (\n          local x = x_position\n          square 0 0 30 : c#seco\n          change cur.axes.[j].x * 10 cur.axes.[j].y * 10\n          square 0 0 5 : c#txtc\n          goto x + 40 y + 20\n        )\n        goto frame.left + 30 y - 20\n        for j cur.buttons.len (\n          local x = x_position\n          if cur.buttons.[j].[\"pressed\"] (\n            square 0 0 34 : c#txtc\n          )\n          square 0 0 30 : c#seco\n          centext j 10 : c#txtc\n          change_x 40\n          if x_position > frame.right - 20 (\n            set_x frame.left + 30 : chy#-40\n          )\n        )\n      )\n      break\n  )"
          },
          {
            "type": "var",
            "data": "subcategory"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"none\""
                },
                {
                  "type": "str",
                  "data": "\"none\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"About\" \"info\""
                },
                {
                  "type": "str",
                  "data": "\"About\""
                },
                {
                  "type": "str",
                  "data": "\"info\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Display\" \"w 3 square 0 3 10 7 w 3 line 0 -7 0 -10 line -6 -10 6 -10\""
                },
                {
                  "type": "str",
                  "data": "\"Display\""
                },
                {
                  "type": "str",
                  "data": "\"w 3 square 0 3 10 7 w 3 line 0 -7 0 -10 line -6 -10 6 -10\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Media\" \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\""
                },
                {
                  "type": "str",
                  "data": "\"Media\""
                },
                {
                  "type": "str",
                  "data": "\"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Boot Applications\" \"w 2.5 cutcircle 0 0 10 18 130 line 0 4 0 10\""
                },
                {
                  "type": "str",
                  "data": "\"Boot Applications\""
                },
                {
                  "type": "str",
                  "data": "\"w 2.5 cutcircle 0 0 10 18 130 line 0 4 0 10\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Storage\" \"w 3 line -10 10 5 10 cont 10 5 cont 10 -10 cont -10 -10 cont -10 10 line -4 5 2 5 w 8 line 0 -2 0 -2\""
                },
                {
                  "type": "str",
                  "data": "\"Storage\""
                },
                {
                  "type": "str",
                  "data": "\"w 3 line -10 10 5 10 cont 10 5 cont 10 -10 cont -10 -10 cont -10 10 line -4 5 2 5 w 8 line 0 -2 0 -2\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Keybinds\" \"w 2.5 line -3 7 -3 -7 line -7 3 7 3 line -7 -3 7 -3 line 3 7 3 -7 w 2.2 cutcircle -7 7 4 -4.5 135 cutcircle 7 7 4 4.5 135 cutcircle 7 -7 4 13.5 135 cutcircle -7 -7 4 -13.5 135\""
                },
                {
                  "type": "str",
                  "data": "\"Keybinds\""
                },
                {
                  "type": "str",
                  "data": "\"w 2.5 line -3 7 -3 -7 line -7 3 7 3 line -7 -3 7 -3 line 3 7 3 -7 w 2.2 cutcircle -7 7 4 -4.5 135 cutcircle 7 7 4 4.5 135 cutcircle 7 -7 4 13.5 135 cutcircle -7 -7 4 -13.5 135\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Time\" \"alarm-clock\""
                },
                {
                  "type": "str",
                  "data": "\"Time\""
                },
                {
                  "type": "str",
                  "data": "\"alarm-clock\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Gamepads\" \"controller\""
                },
                {
                  "type": "str",
                  "data": "\"Gamepads\""
                },
                {
                  "type": "str",
                  "data": "\"controller\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"About\""
                },
                {
                  "type": "str",
                  "data": "\"About\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "info",
                  "source": "info"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Display\""
                },
                {
                  "type": "str",
                  "data": "\"Display\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -20 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -20
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Origin Resolution: \" ++ screensize_x ++ \"x\" ++ screensize_y 10 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "opr",
                      "data": "++",
                      "left": {
                        "type": "str",
                        "data": "\"Origin Resolution: \""
                      },
                      "right": {
                        "type": "var",
                        "data": "screensize_x"
                      }
                    },
                    "right": {
                      "type": "str",
                      "data": "\"x\""
                    }
                  },
                  "right": {
                    "type": "var",
                    "data": "screensize_y"
                  }
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 window.top - 100 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "window"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 100
                    }
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if roturlink.enabled (\n        local before_brightness = slider_brightness\n        centext \"Brightness\" 10 : c#txtc\n        slider w 20 \"brightness\" : c#prim chy#-30\n        if round(before_brightness * 100) != round(slider_brightness * 100) (\n          roturlink.send({\n            \"cmd\":\"brightness_set\",\n            \"val\":round(slider_brightness * 100)\n          })\n        )\n        change_y -50\n      )"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "roturlink"
                    },
                    {
                      "type": "var",
                      "data": "enabled"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this"
                            },
                            {
                              "type": "var",
                              "data": "before_brightness"
                            }
                          ]
                        },
                        "right": {
                          "type": "var",
                          "data": "slider_brightness"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "centext",
                        "source": "centext \"Brightness\" 10 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"Brightness\""
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "slider",
                        "source": "slider w 20 \"brightness\" : c#prim chy#-30"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "str",
                        "data": "\"brightness\""
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chy",
                          {
                            "type": "num",
                            "data": -30
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if round(before_brightness * 100) != round(slider_brightness * 100) (\n          roturlink.send({\n            \"cmd\":\"brightness_set\",\n            \"val\":round(slider_brightness * 100)\n          })\n        )"
                      },
                      {
                        "type": "cmp",
                        "data": "!=",
                        "left": {
                          "type": "fnc",
                          "data": "round",
                          "parameters": [
                            {
                              "type": "opr",
                              "data": "*",
                              "left": {
                                "type": "var",
                                "data": "before_brightness"
                              },
                              "right": {
                                "type": "num",
                                "data": 100
                              }
                            }
                          ]
                        },
                        "right": {
                          "type": "fnc",
                          "data": "round",
                          "parameters": [
                            {
                              "type": "opr",
                              "data": "*",
                              "left": {
                                "type": "var",
                                "data": "slider_brightness"
                              },
                              "right": {
                                "type": "num",
                                "data": 100
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "left": {
                                "type": "var",
                                "data": "roturlink"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "roturlink"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "send",
                                    "parameters": [
                                      {
                                        "type": "obj",
                                        "data": {
                                          "cmd": {
                                            "type": "str",
                                            "data": "\"brightness_set\""
                                          },
                                          "val": {
                                            "type": "fnc",
                                            "data": "round",
                                            "parameters": [
                                              {
                                                "type": "opr",
                                                "data": "*",
                                                "left": {
                                                  "type": "var",
                                                  "data": "slider_brightness"
                                                },
                                                "right": {
                                                  "type": "num",
                                                  "data": 100
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_y",
                        "source": "change_y -50"
                      },
                      {
                        "type": "num",
                        "data": -50
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "terminal",
                  "source": "terminal \"system display get invert\""
                },
                {
                  "type": "str",
                  "data": "\"system display get invert\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c #txtc"
                },
                {
                  "type": "unk",
                  "data": "#txtc"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Invert Colours\" w data === 100 def(val) -> (\n        terminal \"system display get invert\"\n        inp = 100 - data\n        terminal \"system display set invert\" + inp.toStr()\n      )"
                },
                {
                  "type": "str",
                  "data": "\"Invert Colours\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "cmp",
                  "data": "===",
                  "left": {
                    "type": "var",
                    "data": "data"
                  },
                  "right": {
                    "type": "num",
                    "data": 100
                  }
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": "val"
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "cmd",
                            "data": "terminal",
                            "source": "terminal \"system display get invert\""
                          },
                          {
                            "type": "str",
                            "data": "\"system display get invert\""
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "var",
                              "data": "inp"
                            },
                            "right": {
                              "type": "opr",
                              "data": "-",
                              "left": {
                                "type": "num",
                                "data": 100
                              },
                              "right": {
                                "type": "var",
                                "data": "data"
                              }
                            }
                          }
                        ],
                        [
                          {
                            "type": "cmd",
                            "data": "terminal",
                            "source": "terminal \"system display set invert\" + inp.toStr()"
                          },
                          {
                            "type": "opr",
                            "data": "+",
                            "left": {
                              "type": "str",
                              "data": "\"system display set invert\""
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "inp"
                                },
                                {
                                  "type": "mtv",
                                  "data": "toStr",
                                  "parameters": []
                                }
                              ]
                            }
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "terminal",
                  "source": "terminal \"flags nightmode get\""
                },
                {
                  "type": "str",
                  "data": "\"flags nightmode get\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -45 : c#txtc"
                },
                {
                  "type": "num",
                  "data": -45
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Night Mode\" w data def(val) -> (\n        terminal \"flags nightmode get\"\n        terminal \"flags nightmode set\" + (data == false)\n      )"
                },
                {
                  "type": "str",
                  "data": "\"Night Mode\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "var",
                  "data": "data"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": "val"
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "cmd",
                            "data": "terminal",
                            "source": "terminal \"flags nightmode get\""
                          },
                          {
                            "type": "str",
                            "data": "\"flags nightmode get\""
                          }
                        ],
                        [
                          {
                            "type": "cmd",
                            "data": "terminal",
                            "source": "terminal \"flags nightmode set\" + (data == false)"
                          },
                          {
                            "type": "opr",
                            "data": "+",
                            "left": {
                              "type": "str",
                              "data": "\"flags nightmode set\""
                            },
                            "right": {
                              "type": "cmp",
                              "data": "==",
                              "left": {
                                "type": "var",
                                "data": "data"
                              },
                              "right": {
                                "type": "var",
                                "data": false
                              }
                            }
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Media\""
                },
                {
                  "type": "str",
                  "data": "\"Media\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if media == \"\" (\n        terminal \"get access camera\"\n        data2 = data\n        terminal \"get access microphone\"\n        if [data, data2].contains(\"granted\") (\n          terminal \"get mediadevices\"\n          media = data.JsonParse()\n          keys = media.getKeys()\n          types = media.getValues().getKeys(\"type\")\n        ) else (\n          media = \"Please Grant Origin Microphone And Camera Permissions\"\n        )\n      )"
                },
                {
                  "type": "cmp",
                  "data": "==",
                  "left": {
                    "type": "var",
                    "data": "media"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"\""
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "terminal",
                        "source": "terminal \"get access camera\""
                      },
                      {
                        "type": "str",
                        "data": "\"get access camera\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "data2"
                        },
                        "right": {
                          "type": "var",
                          "data": "data"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "terminal",
                        "source": "terminal \"get access microphone\""
                      },
                      {
                        "type": "str",
                        "data": "\"get access microphone\""
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if [data, data2].contains(\"granted\") (\n          terminal \"get mediadevices\"\n          media = data.JsonParse()\n          keys = media.getKeys()\n          types = media.getValues().getKeys(\"type\")\n        ) else (\n          media = \"Please Grant Origin Microphone And Camera Permissions\"\n        )"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "arr",
                            "data": [
                              {
                                "type": "var",
                                "data": "data"
                              },
                              {
                                "type": "var",
                                "data": "data2"
                              }
                            ]
                          },
                          {
                            "type": "mtv",
                            "data": "contains",
                            "parameters": [
                              {
                                "type": "str",
                                "data": "\"granted\""
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "terminal",
                              "source": "terminal \"get mediadevices\""
                            },
                            {
                              "type": "str",
                              "data": "\"get mediadevices\""
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "media"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "data"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "JsonParse",
                                    "parameters": []
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "keys"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "media"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "getKeys",
                                    "parameters": []
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "types"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "media"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "getValues",
                                    "parameters": []
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "getKeys",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "\"type\""
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        ]
                      },
                      {
                        "type": "var",
                        "data": "else"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "media"
                              },
                              "right": {
                                "type": "str",
                                "data": "\"Please Grant Origin Microphone And Camera Permissions\""
                              }
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -40 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -40
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"System Volume\" + round(slider_volume * 100) ++ \"%\" 10 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "str",
                      "data": "\"System Volume\""
                    },
                    "right": {
                      "type": "fnc",
                      "data": "round",
                      "parameters": [
                        {
                          "type": "opr",
                          "data": "*",
                          "left": {
                            "type": "var",
                            "data": "slider_volume"
                          },
                          "right": {
                            "type": "num",
                            "data": 100
                          }
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "str",
                    "data": "\"%\""
                  }
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 999 2 0 -90 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -90
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "terminal",
                  "source": "terminal \"system sound get volume\""
                },
                {
                  "type": "str",
                  "data": "\"system sound get volume\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "slider_volume"
                  },
                  "right": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "data"
                    },
                    "right": {
                      "type": "num",
                      "data": 100
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "slider",
                  "source": "slider w 40 \"volume\" 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 40
                },
                {
                  "type": "str",
                  "data": "\"volume\""
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "terminal",
                  "source": "terminal \"system sound set volume\" + ( slider_volume * 100 )"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "str",
                    "data": "\"system sound set volume\""
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "var",
                      "data": "slider_volume"
                    },
                    "right": {
                      "type": "num",
                      "data": 100
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c txtc"
                },
                {
                  "type": "var",
                  "data": "txtc"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -160 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -160
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if media.istype(\"object\") (\n        text \"Media Devices\" 10\n        for i keys.len (\n          y = i + 2.5 * -60 + scroll_y\n          loc 999 2 0 y\n          w = frame.width - 25\n          square w 40 15 : c#prim\n          if mouse_touching (\n            square w 40 15 : c#seco\n            square w 40 10 : c#prim\n          )\n          cur = keys.[i]\n          loc 2 2 30 y\n          square 30 30 10 : c#seco\n          c txtc\n          type = types.[i]\n          if type == \"audiooutput\" or type == \"audioboth\" (\n            icon \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\" 0.7\n          )\n          if type == \"audioinput\" (\n            icon \"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\" 0.7\n          )\n          if type == \"videoinput\" (\n            icon \"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\" 0.7\n          )\n          text cur 9 : chx#30\n        )\n        page_len = keys.len + 3 * 60\n      ) else (\n        text media 10\n        page_len = 100\n      )"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "media"
                    },
                    {
                      "type": "mtv",
                      "data": "istype",
                      "parameters": [
                        {
                          "type": "str",
                          "data": "\"object\""
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text \"Media Devices\" 10"
                      },
                      {
                        "type": "str",
                        "data": "\"Media Devices\""
                      },
                      {
                        "type": "num",
                        "data": 10
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "for",
                        "source": "for i keys.len (\n          y = i + 2.5 * -60 + scroll_y\n          loc 999 2 0 y\n          w = frame.width - 25\n          square w 40 15 : c#prim\n          if mouse_touching (\n            square w 40 15 : c#seco\n            square w 40 10 : c#prim\n          )\n          cur = keys.[i]\n          loc 2 2 30 y\n          square 30 30 10 : c#seco\n          c txtc\n          type = types.[i]\n          if type == \"audiooutput\" or type == \"audioboth\" (\n            icon \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\" 0.7\n          )\n          if type == \"audioinput\" (\n            icon \"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\" 0.7\n          )\n          if type == \"videoinput\" (\n            icon \"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\" 0.7\n          )\n          text cur 9 : chx#30\n        )"
                      },
                      {
                        "type": "var",
                        "data": "i"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "keys"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "y"
                              },
                              "right": {
                                "type": "opr",
                                "data": "+",
                                "left": {
                                  "type": "opr",
                                  "data": "*",
                                  "left": {
                                    "type": "opr",
                                    "data": "+",
                                    "left": {
                                      "type": "var",
                                      "data": "i"
                                    },
                                    "right": {
                                      "type": "num",
                                      "data": 2.5
                                    }
                                  },
                                  "right": {
                                    "type": "num",
                                    "data": -60
                                  }
                                },
                                "right": {
                                  "type": "var",
                                  "data": "scroll_y"
                                }
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "loc",
                              "source": "loc 999 2 0 y"
                            },
                            {
                              "type": "num",
                              "data": 999
                            },
                            {
                              "type": "num",
                              "data": 2
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "var",
                              "data": "y"
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "w"
                              },
                              "right": {
                                "type": "opr",
                                "data": "-",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "frame"
                                    },
                                    {
                                      "type": "var",
                                      "data": "width"
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "num",
                                  "data": 25
                                }
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 40 15 : c#prim"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if mouse_touching (\n            square w 40 15 : c#seco\n            square w 40 10 : c#prim\n          )"
                            },
                            {
                              "type": "var",
                              "data": "mouse_touching"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square w 40 15 : c#seco"
                                  },
                                  {
                                    "type": "var",
                                    "data": "w"
                                  },
                                  {
                                    "type": "num",
                                    "data": 40
                                  },
                                  {
                                    "type": "num",
                                    "data": 15
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "seco"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square w 40 10 : c#prim"
                                  },
                                  {
                                    "type": "var",
                                    "data": "w"
                                  },
                                  {
                                    "type": "num",
                                    "data": 40
                                  },
                                  {
                                    "type": "num",
                                    "data": 10
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "prim"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "cur"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "keys"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "i"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "loc",
                              "source": "loc 2 2 30 y"
                            },
                            {
                              "type": "num",
                              "data": 2
                            },
                            {
                              "type": "num",
                              "data": 2
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "var",
                              "data": "y"
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 30 30 10 : c#seco"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "c",
                              "source": "c txtc"
                            },
                            {
                              "type": "var",
                              "data": "txtc"
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "type"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "types"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "i"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if type == \"audiooutput\" or type == \"audioboth\" (\n            icon \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\" 0.7\n          )"
                            },
                            {
                              "type": "log",
                              "data": "or",
                              "left": {
                                "type": "cmp",
                                "data": "==",
                                "left": {
                                  "type": "var",
                                  "data": "type"
                                },
                                "right": {
                                  "type": "str",
                                  "data": "\"audiooutput\""
                                }
                              },
                              "right": {
                                "type": "cmp",
                                "data": "==",
                                "left": {
                                  "type": "var",
                                  "data": "type"
                                },
                                "right": {
                                  "type": "str",
                                  "data": "\"audioboth\""
                                }
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "icon",
                                    "source": "icon \"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\" 0.7"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80\""
                                  },
                                  {
                                    "type": "num",
                                    "data": 0.7
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if type == \"audioinput\" (\n            icon \"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\" 0.7\n          )"
                            },
                            {
                              "type": "cmp",
                              "data": "==",
                              "left": {
                                "type": "var",
                                "data": "type"
                              },
                              "right": {
                                "type": "str",
                                "data": "\"audioinput\""
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "icon",
                                    "source": "icon \"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\" 0.7"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8\""
                                  },
                                  {
                                    "type": "num",
                                    "data": 0.7
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if type == \"videoinput\" (\n            icon \"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\" 0.7\n          )"
                            },
                            {
                              "type": "cmp",
                              "data": "==",
                              "left": {
                                "type": "var",
                                "data": "type"
                              },
                              "right": {
                                "type": "str",
                                "data": "\"videoinput\""
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "icon",
                                    "source": "icon \"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\" 0.7"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0\""
                                  },
                                  {
                                    "type": "num",
                                    "data": 0.7
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "text",
                              "source": "text cur 9 : chx#30"
                            },
                            {
                              "type": "var",
                              "data": "cur"
                            },
                            {
                              "type": "num",
                              "data": 9
                            },
                            {
                              "type": "mod",
                              "data": [
                                "chx",
                                {
                                  "type": "num",
                                  "data": 30
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "page_len"
                        },
                        "right": {
                          "type": "opr",
                          "data": "*",
                          "left": {
                            "type": "opr",
                            "data": "+",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "keys"
                                },
                                {
                                  "type": "var",
                                  "data": "len"
                                }
                              ]
                            },
                            "right": {
                              "type": "num",
                              "data": 3
                            }
                          },
                          "right": {
                            "type": "num",
                            "data": 60
                          }
                        }
                      }
                    ]
                  ]
                },
                {
                  "type": "var",
                  "data": "else"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text media 10"
                      },
                      {
                        "type": "var",
                        "data": "media"
                      },
                      {
                        "type": "num",
                        "data": 10
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "page_len"
                        },
                        "right": {
                          "type": "num",
                          "data": 100
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Boot Applications\""
                },
                {
                  "type": "str",
                  "data": "\"Boot Applications\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "boot_apps"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "var",
                        "data": "onboot"
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if new_transmit (\n        file \"open\" transmit_data\n        f = file.[3] ++ \"/\" ++ file.[2] ++ file.[1]\n        void boot_apps.append(f)\n        network \"update\" \"onboot\" boot_apps\n        new_transmit = false\n      )"
                },
                {
                  "type": "var",
                  "data": "new_transmit"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"open\" transmit_data"
                      },
                      {
                        "type": "str",
                        "data": "\"open\""
                      },
                      {
                        "type": "var",
                        "data": "transmit_data"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "f"
                        },
                        "right": {
                          "type": "opr",
                          "data": "++",
                          "left": {
                            "type": "opr",
                            "data": "++",
                            "left": {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "file"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 3
                                      }
                                    ]
                                  }
                                ]
                              },
                              "right": {
                                "type": "str",
                                "data": "\"/\""
                              }
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "file"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "num",
                                      "data": 2
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          "right": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "file"
                              },
                              {
                                "type": "mtv",
                                "data": "item",
                                "parameters": [
                                  {
                                    "type": "num",
                                    "data": 1
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "void",
                        "source": "void boot_apps.append(f)"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "boot_apps"
                          },
                          {
                            "type": "mtv",
                            "data": "append",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "f"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"onboot\" boot_apps"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"onboot\""
                      },
                      {
                        "type": "var",
                        "data": "boot_apps"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "new_transmit"
                        },
                        "right": {
                          "type": "var",
                          "data": false
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "width"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 25
                    }
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "num",
                      "data": -30
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 0 y"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 30 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\" 0.6 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\""
                },
                {
                  "type": "num",
                  "data": 0.6
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n        boot_apps = [\n          \"origin/(a) system/system apps/originWM.osl\",\n          \"origin/(a) system/system apps/Desktop.osl\",\n          \"origin/(a) system/docks/Dock.osl\",\n          \"origin/(a) system/system apps/Quick_Settings.osl\"\n        ]\n        network \"update\" \"onboot\" boot_apps\n      )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "boot_apps"
                        },
                        "right": {
                          "type": "arr",
                          "data": [
                            {
                              "type": "str",
                              "data": "\"origin/(a) system/system apps/originWM.osl\""
                            },
                            {
                              "type": "str",
                              "data": "\"origin/(a) system/system apps/Desktop.osl\""
                            },
                            {
                              "type": "str",
                              "data": "\"origin/(a) system/docks/Dock.osl\""
                            },
                            {
                              "type": "str",
                              "data": "\"origin/(a) system/system apps/Quick_Settings.osl\""
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"onboot\" boot_apps"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"onboot\""
                      },
                      {
                        "type": "var",
                        "data": "boot_apps"
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Reset Boot To Default\" 9 : chx#20"
                },
                {
                  "type": "str",
                  "data": "\"Reset Boot To Default\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 20
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 20 -70 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -70
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Drop File Here\" 9 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Drop File Here\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if file_dropped != 0 (\n        local dat = open(file_dropped, [\"location\",\"name\",\"type\"])\n        void boot_apps.append(dat.[1] ++ \"/\" ++ dat.[2] ++ dat.[3])\n       \n        network \"update\" \"onboot\" boot_apps\n        file_dropped = 0\n      )"
                },
                {
                  "type": "cmp",
                  "data": "!=",
                  "left": {
                    "type": "var",
                    "data": "file_dropped"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this"
                            },
                            {
                              "type": "var",
                              "data": "dat"
                            }
                          ]
                        },
                        "right": {
                          "type": "fnc",
                          "data": "open",
                          "parameters": [
                            {
                              "type": "var",
                              "data": "file_dropped"
                            },
                            {
                              "type": "arr",
                              "data": [
                                {
                                  "type": "str",
                                  "data": "\"location\""
                                },
                                {
                                  "type": "str",
                                  "data": "\"name\""
                                },
                                {
                                  "type": "str",
                                  "data": "\"type\""
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "void",
                        "source": "void boot_apps.append(dat.[1] ++ \"/\" ++ dat.[2] ++ dat.[3])"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "boot_apps"
                          },
                          {
                            "type": "mtv",
                            "data": "append",
                            "parameters": [
                              {
                                "type": "opr",
                                "data": "++",
                                "left": {
                                  "type": "opr",
                                  "data": "++",
                                  "left": {
                                    "type": "opr",
                                    "data": "++",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "dat"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "num",
                                              "data": 1
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "right": {
                                      "type": "str",
                                      "data": "\"/\""
                                    }
                                  },
                                  "right": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "dat"
                                      },
                                      {
                                        "type": "mtv",
                                        "data": "item",
                                        "parameters": [
                                          {
                                            "type": "num",
                                            "data": 2
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "right": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "dat"
                                    },
                                    {
                                      "type": "mtv",
                                      "data": "item",
                                      "parameters": [
                                        {
                                          "type": "num",
                                          "data": 3
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"onboot\" boot_apps"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"onboot\""
                      },
                      {
                        "type": "var",
                        "data": "boot_apps"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "file_dropped"
                        },
                        "right": {
                          "type": "num",
                          "data": 0
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 0 y - 50"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n        file \"pick\" \"osl\"\n        can = false\n      )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"pick\" \"osl\""
                      },
                      {
                        "type": "str",
                        "data": "\"pick\""
                      },
                      {
                        "type": "str",
                        "data": "\"osl\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "can"
                        },
                        "right": {
                          "type": "var",
                          "data": false
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 30 y - 50"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"upload\" 0.7 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"upload\""
                },
                {
                  "type": "num",
                  "data": 0.7
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Click here or drop an osl file to add it to your boot\" 9 : chx#20"
                },
                {
                  "type": "str",
                  "data": "\"Click here or drop an osl file to add it to your boot\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 20
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for count boot_apps.len (\n        y = count + 1.5 * -60 + scroll_y\n        loc 999 2 0 y\n        square w 40 15 : c#prim\n        loc 2 2 15 y\n        text boot_apps.[count] 9 : c#txtc\n        loc -2 2 -33 y\n        square 30 30 10 0 1\n        if mouse_touching (\n          square 30 30 10 : c#prim\n          if onclick (\n            boot_apps.delete(count)\n            network \"update\" \"onboot\" boot_apps\n          )\n        )\n        icon \"bin\" 0.8 : c#txtc\n      )"
                },
                {
                  "type": "var",
                  "data": "count"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "boot_apps"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "var",
                                "data": "count"
                              },
                              "right": {
                                "type": "num",
                                "data": 1.5
                              }
                            },
                            "right": {
                              "type": "num",
                              "data": -60
                            }
                          },
                          "right": {
                            "type": "var",
                            "data": "scroll_y"
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 999 2 0 y"
                      },
                      {
                        "type": "num",
                        "data": 999
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 40 15 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 15 y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text boot_apps.[count] 9 : c#txtc"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "boot_apps"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "count"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc -2 2 -33 y"
                      },
                      {
                        "type": "num",
                        "data": -2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": -33
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 30 30 10 0 1"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "num",
                        "data": 1
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          square 30 30 10 : c#prim\n          if onclick (\n            boot_apps.delete(count)\n            network \"update\" \"onboot\" boot_apps\n          )\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 30 30 10 : c#prim"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n            boot_apps.delete(count)\n            network \"update\" \"onboot\" boot_apps\n          )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "=??",
                                    "left": {
                                      "type": "var",
                                      "data": "boot_apps"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "boot_apps"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "delete",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "count"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "network",
                                    "source": "network \"update\" \"onboot\" boot_apps"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"update\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"onboot\""
                                  },
                                  {
                                    "type": "var",
                                    "data": "boot_apps"
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"bin\" 0.8 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"bin\""
                      },
                      {
                        "type": "num",
                        "data": 0.8
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "opr",
                      "data": "+",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "boot_apps"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 2
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 60
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Storage\""
                },
                {
                  "type": "str",
                  "data": "\"Storage\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "num",
                      "data": -85
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 80 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 80
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "image",
                  "source": "image pfp 100 100"
                },
                {
                  "type": "var",
                  "data": "pfp"
                },
                {
                  "type": "num",
                  "data": 100
                },
                {
                  "type": "num",
                  "data": 100
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"(Network)\" + username 15 : chx#80 chy#20 c#txtc"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "str",
                    "data": "\"(Network)\""
                  },
                  "right": {
                    "type": "var",
                    "data": "username"
                  }
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 80
                    }
                  ]
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": 20
                    }
                  ]
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x 20"
                },
                {
                  "type": "num",
                  "data": 20
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 120 20 10 : c#prim chx#100"
                },
                {
                  "type": "num",
                  "data": 120
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 100
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_touching (\n        cursor \"pointer\"\n        if onclick (\n          http \"newtab\" \"https://patreon.com/mistium\"\n        )\n      )"
                },
                {
                  "type": "var",
                  "data": "mouse_touching"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "cursor",
                        "source": "cursor \"pointer\""
                      },
                      {
                        "type": "str",
                        "data": "\"pointer\""
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if onclick (\n          http \"newtab\" \"https://patreon.com/mistium\"\n        )"
                      },
                      {
                        "type": "var",
                        "data": "onclick"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "http",
                              "source": "http \"newtab\" \"https://patreon.com/mistium\""
                            },
                            {
                              "type": "str",
                              "data": "\"newtab\""
                            },
                            {
                              "type": "str",
                              "data": "\"https://patreon.com/mistium\""
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "image",
                  "source": "image \"https://origin.mistium.com/OSL%20Programs/assets/Settings/originOS%20patreon%20badge.png\" null 25"
                },
                {
                  "type": "str",
                  "data": "\"https://origin.mistium.com/OSL%20Programs/assets/Settings/originOS%20patreon%20badge.png\""
                },
                {
                  "type": "var",
                  "data": "null"
                },
                {
                  "type": "num",
                  "data": 25
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 160 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 160
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text formatFileSize(user.used_size) ++ \"/\" ++ formatFileSize(user.max_size) 10 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "fnc",
                      "data": "formatFileSize",
                      "parameters": [
                        {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "user"
                            },
                            {
                              "type": "var",
                              "data": "used_size"
                            }
                          ]
                        }
                      ]
                    },
                    "right": {
                      "type": "str",
                      "data": "\"/\""
                    }
                  },
                  "right": {
                    "type": "fnc",
                    "data": "formatFileSize",
                    "parameters": [
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "user"
                          },
                          {
                            "type": "var",
                            "data": "max_size"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 999 2 125 / 2 y - 35"
                },
                {
                  "type": "num",
                  "data": 999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 62.5
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 35
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c prim"
                },
                {
                  "type": "var",
                  "data": "prim"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "bar",
                  "source": "bar frame_width - 200 20 10 user.used_size / user.max_size seco"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "frame_width"
                  },
                  "right": {
                    "type": "num",
                    "data": 200
                  }
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "opr",
                  "data": "/",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "var",
                        "data": "used_size"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "var",
                        "data": "max_size"
                      }
                    ]
                  }
                },
                {
                  "type": "var",
                  "data": "seco"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": 460
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if total_files == 0 (\n        loop 100 (\n          file \"open\" current.[1] \"onlyaccess\"\n          dat = fileGet(4).toStr()\n          file = dat.len + \"bytes\"\n          file = \" \" * (15 - file.len) + file + \"-\" + fileGet(2)\n          file.append(fileGet(1))\n          files.append(file)\n          current.delete(1)\n          if fileGet(1) == \".folder\" (\n            current ++= fileGet(4)\n          )\n          total_files = files.len\n          file_data = files.sort().reverse().trim(1,20)\n        )\n\n        goto frame.left + 30 frame.top + scroll_y - 200\n        direction (timer * 100).sin() * 360\n        icon \"w 2 cutcircle 0 0 10 0 90\" 1 : c#txtc\n        direction 90\n        text files.len + \"Files Processed\" 10 : chx#30\n      ) else (\n        loc 2 2 20 -200 + scroll_y\n        text \"Biggest Files\" 9 : c#txtc\n        for i file_data.len (\n          loc 2 2 20 i * -30 - 200 + scroll_y\n          text file_data.[i] 9\n        )\n        page_len = file_data.len * 30 + 200\n      )"
                },
                {
                  "type": "cmp",
                  "data": "==",
                  "left": {
                    "type": "var",
                    "data": "total_files"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "loop",
                        "source": "loop 100 (\n          file \"open\" current.[1] \"onlyaccess\"\n          dat = fileGet(4).toStr()\n          file = dat.len + \"bytes\"\n          file = \" \" * (15 - file.len) + file + \"-\" + fileGet(2)\n          file.append(fileGet(1))\n          files.append(file)\n          current.delete(1)\n          if fileGet(1) == \".folder\" (\n            current ++= fileGet(4)\n          )\n          total_files = files.len\n          file_data = files.sort().reverse().trim(1,20)\n        )"
                      },
                      {
                        "type": "num",
                        "data": 100
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "file",
                              "source": "file \"open\" current.[1] \"onlyaccess\""
                            },
                            {
                              "type": "str",
                              "data": "\"open\""
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "current"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "num",
                                      "data": 1
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "str",
                              "data": "\"onlyaccess\""
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "dat"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "fnc",
                                    "data": "fileGet",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 4
                                      }
                                    ]
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "toStr",
                                    "parameters": []
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "file"
                              },
                              "right": {
                                "type": "opr",
                                "data": "+",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "dat"
                                    },
                                    {
                                      "type": "var",
                                      "data": "len"
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "str",
                                  "data": "\"bytes\""
                                }
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "file"
                              },
                              "right": {
                                "type": "opr",
                                "data": "+",
                                "left": {
                                  "type": "opr",
                                  "data": "+",
                                  "left": {
                                    "type": "opr",
                                    "data": "+",
                                    "left": {
                                      "type": "opr",
                                      "data": "*",
                                      "left": {
                                        "type": "str",
                                        "data": "\" \""
                                      },
                                      "right": {
                                        "type": "opr",
                                        "data": "-",
                                        "left": {
                                          "type": "num",
                                          "data": 15
                                        },
                                        "right": {
                                          "type": "mtd",
                                          "data": [
                                            {
                                              "type": "var",
                                              "data": "file"
                                            },
                                            {
                                              "type": "var",
                                              "data": "len"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "var",
                                      "data": "file"
                                    }
                                  },
                                  "right": {
                                    "type": "str",
                                    "data": "\"-\""
                                  }
                                },
                                "right": {
                                  "type": "fnc",
                                  "data": "fileGet",
                                  "parameters": [
                                    {
                                      "type": "num",
                                      "data": 2
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "left": {
                                "type": "var",
                                "data": "file"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "file"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "append",
                                    "parameters": [
                                      {
                                        "type": "fnc",
                                        "data": "fileGet",
                                        "parameters": [
                                          {
                                            "type": "num",
                                            "data": 1
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "left": {
                                "type": "var",
                                "data": "files"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "files"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "append",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "file"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "left": {
                                "type": "var",
                                "data": "current"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "current"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "delete",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 1
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if fileGet(1) == \".folder\" (\n            current ++= fileGet(4)\n          )"
                            },
                            {
                              "type": "cmp",
                              "data": "==",
                              "left": {
                                "type": "fnc",
                                "data": "fileGet",
                                "parameters": [
                                  {
                                    "type": "num",
                                    "data": 1
                                  }
                                ]
                              },
                              "right": {
                                "type": "str",
                                "data": "\".folder\""
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "++=",
                                    "left": {
                                      "type": "var",
                                      "data": "current"
                                    },
                                    "right": {
                                      "type": "fnc",
                                      "data": "fileGet",
                                      "parameters": [
                                        {
                                          "type": "num",
                                          "data": 4
                                        }
                                      ]
                                    }
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "total_files"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "files"
                                  },
                                  {
                                    "type": "var",
                                    "data": "len"
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "file_data"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "files"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "sort",
                                    "parameters": []
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "reverse",
                                    "parameters": []
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "trim",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 1
                                      },
                                      {
                                        "type": "num",
                                        "data": 20
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto frame.left + 30 frame.top + scroll_y - 200"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "frame"
                            },
                            {
                              "type": "var",
                              "data": "left"
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 30
                        }
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "frame"
                              },
                              {
                                "type": "var",
                                "data": "top"
                              }
                            ]
                          },
                          "right": {
                            "type": "var",
                            "data": "scroll_y"
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 200
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "direction",
                        "source": "direction (timer * 100).sin() * 360"
                      },
                      {
                        "type": "opr",
                        "data": "*",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "opr",
                              "data": "*",
                              "left": {
                                "type": "var",
                                "data": "timer"
                              },
                              "right": {
                                "type": "num",
                                "data": 100
                              }
                            },
                            {
                              "type": "mtv",
                              "data": "sin",
                              "parameters": []
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 360
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"w 2 cutcircle 0 0 10 0 90\" 1 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"w 2 cutcircle 0 0 10 0 90\""
                      },
                      {
                        "type": "num",
                        "data": 1
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "direction",
                        "source": "direction 90"
                      },
                      {
                        "type": "num",
                        "data": 90
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text files.len + \"Files Processed\" 10 : chx#30"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "files"
                            },
                            {
                              "type": "var",
                              "data": "len"
                            }
                          ]
                        },
                        "right": {
                          "type": "str",
                          "data": "\"Files Processed\""
                        }
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chx",
                          {
                            "type": "num",
                            "data": 30
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "type": "var",
                  "data": "else"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 20 -200 + scroll_y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "num",
                          "data": -200
                        },
                        "right": {
                          "type": "var",
                          "data": "scroll_y"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text \"Biggest Files\" 9 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"Biggest Files\""
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "for",
                        "source": "for i file_data.len (\n          loc 2 2 20 i * -30 - 200 + scroll_y\n          text file_data.[i] 9\n        )"
                      },
                      {
                        "type": "var",
                        "data": "i"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "file_data"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "loc",
                              "source": "loc 2 2 20 i * -30 - 200 + scroll_y"
                            },
                            {
                              "type": "num",
                              "data": 2
                            },
                            {
                              "type": "num",
                              "data": 2
                            },
                            {
                              "type": "num",
                              "data": 20
                            },
                            {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "opr",
                                "data": "-",
                                "left": {
                                  "type": "opr",
                                  "data": "*",
                                  "left": {
                                    "type": "var",
                                    "data": "i"
                                  },
                                  "right": {
                                    "type": "num",
                                    "data": -30
                                  }
                                },
                                "right": {
                                  "type": "num",
                                  "data": 200
                                }
                              },
                              "right": {
                                "type": "var",
                                "data": "scroll_y"
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "text",
                              "source": "text file_data.[i] 9"
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "file_data"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "var",
                                      "data": "i"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "num",
                              "data": 9
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "page_len"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "file_data"
                                },
                                {
                                  "type": "var",
                                  "data": "len"
                                }
                              ]
                            },
                            "right": {
                              "type": "num",
                              "data": 30
                            }
                          },
                          "right": {
                            "type": "num",
                            "data": 200
                          }
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Keybinds\""
                },
                {
                  "type": "str",
                  "data": "\"Keybinds\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Time\""
                },
                {
                  "type": "str",
                  "data": "\"Time\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 frame.top - 40 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 40
                    }
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext timestamp.timestamp(\"convert-time\") ++ \".\" ++ timestamp.toStr().right(3) 20 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "timestamp"
                        },
                        {
                          "type": "mtv",
                          "data": "timestamp",
                          "parameters": [
                            {
                              "type": "str",
                              "data": "\"convert-time\""
                            }
                          ]
                        }
                      ]
                    },
                    "right": {
                      "type": "str",
                      "data": "\".\""
                    }
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "timestamp"
                      },
                      {
                        "type": "mtv",
                        "data": "toStr",
                        "parameters": []
                      },
                      {
                        "type": "mtv",
                        "data": "right",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 3
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -50"
                },
                {
                  "type": "num",
                  "data": -50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext \"Your originOS time is offset by\" 10"
                },
                {
                  "type": "str",
                  "data": "\"Your originOS time is offset by\""
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -40"
                },
                {
                  "type": "num",
                  "data": -40
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext time.offset ++ \"ms\" 20"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "time"
                      },
                      {
                        "type": "var",
                        "data": "offset"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"ms\""
                  }
                },
                {
                  "type": "num",
                  "data": 20
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -40"
                },
                {
                  "type": "num",
                  "data": -40
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext \"to make it more accurate\" 10"
                },
                {
                  "type": "str",
                  "data": "\"to make it more accurate\""
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -50"
                },
                {
                  "type": "num",
                  "data": -50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Show Seconds\" w user.timeformat.show_seconds def() -> (\n        local current_format = user.timeformat\n        current_format.show_seconds = current_format.show_seconds.not()\n        network \"update\" \"timeformat\" current_format\n      )"
                },
                {
                  "type": "str",
                  "data": "\"Show Seconds\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "user"
                    },
                    {
                      "type": "var",
                      "data": "timeformat"
                    },
                    {
                      "type": "var",
                      "data": "show_seconds"
                    }
                  ]
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "this"
                                },
                                {
                                  "type": "var",
                                  "data": "current_format"
                                }
                              ]
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "user"
                                },
                                {
                                  "type": "var",
                                  "data": "timeformat"
                                }
                              ]
                            }
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "current_format"
                                },
                                {
                                  "type": "var",
                                  "data": "show_seconds"
                                }
                              ]
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "current_format"
                                },
                                {
                                  "type": "var",
                                  "data": "show_seconds"
                                },
                                {
                                  "type": "mtv",
                                  "data": "not",
                                  "parameters": []
                                }
                              ]
                            }
                          }
                        ],
                        [
                          {
                            "type": "cmd",
                            "data": "network",
                            "source": "network \"update\" \"timeformat\" current_format"
                          },
                          {
                            "type": "str",
                            "data": "\"update\""
                          },
                          {
                            "type": "str",
                            "data": "\"timeformat\""
                          },
                          {
                            "type": "var",
                            "data": "current_format"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -50"
                },
                {
                  "type": "num",
                  "data": -50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Use 24 hour time\" w user.timeformat.hours == \"24h\" def() -> (\n        local current_format = user.timeformat\n        current_format.hours = current_format.hours == \"24h\" ? \"12h\" \"24h\"\n        network \"update\" \"timeformat\" current_format\n      )"
                },
                {
                  "type": "str",
                  "data": "\"Use 24 hour time\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "cmp",
                  "data": "==",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "var",
                        "data": "timeformat"
                      },
                      {
                        "type": "var",
                        "data": "hours"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"24h\""
                  }
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "this"
                                },
                                {
                                  "type": "var",
                                  "data": "current_format"
                                }
                              ]
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "user"
                                },
                                {
                                  "type": "var",
                                  "data": "timeformat"
                                }
                              ]
                            }
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "current_format"
                                },
                                {
                                  "type": "var",
                                  "data": "hours"
                                }
                              ]
                            },
                            "right": {
                              "type": "qst",
                              "data": "?",
                              "left": {
                                "type": "cmp",
                                "data": "==",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "current_format"
                                    },
                                    {
                                      "type": "var",
                                      "data": "hours"
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "str",
                                  "data": "\"24h\""
                                }
                              },
                              "right": {
                                "type": "str",
                                "data": "\"12h\""
                              },
                              "right2": {
                                "type": "str",
                                "data": "\"24h\""
                              }
                            }
                          }
                        ],
                        [
                          {
                            "type": "cmd",
                            "data": "network",
                            "source": "network \"update\" \"timeformat\" current_format"
                          },
                          {
                            "type": "str",
                            "data": "\"update\""
                          },
                          {
                            "type": "str",
                            "data": "\"timeformat\""
                          },
                          {
                            "type": "var",
                            "data": "current_format"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Gamepads\""
                },
                {
                  "type": "str",
                  "data": "\"Gamepads\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "gamepads"
                      }
                    ]
                  },
                  "right": {
                    "type": "fnc",
                    "data": "getGamepads",
                    "parameters": []
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -20 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -20
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Total: \" ++ gamepads.len ++ \"/4\" 10 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "str",
                      "data": "\"Total: \""
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "gamepads"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "str",
                    "data": "\"/4\""
                  }
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "var",
                      "data": "y_position"
                    },
                    "right": {
                      "type": "num",
                      "data": 70
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for i gamepads.len (\n        y -= 170\n        local cur @= gamepads.[i]\n        goto 0 y\n        square w 150 10 : c#prim\n        set_x frame.left + 20 : chy#60\n        text cur.id 10 : c#txtc\n        goto frame.left + 30 y + 20\n        for j cur.axes.len (\n          local x = x_position\n          square 0 0 30 : c#seco\n          change cur.axes.[j].x * 10 cur.axes.[j].y * 10\n          square 0 0 5 : c#txtc\n          goto x + 40 y + 20\n        )\n        goto frame.left + 30 y - 20\n        for j cur.buttons.len (\n          local x = x_position\n          if cur.buttons.[j].[\"pressed\"] (\n            square 0 0 34 : c#txtc\n          )\n          square 0 0 30 : c#seco\n          centext j 10 : c#txtc\n          change_x 40\n          if x_position > frame.right - 20 (\n            set_x frame.left + 30 : chy#-40\n          )\n        )\n      )"
                },
                {
                  "type": "var",
                  "data": "i"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "gamepads"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "-=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "num",
                          "data": 170
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "@=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this"
                            },
                            {
                              "type": "var",
                              "data": "cur"
                            }
                          ]
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "gamepads"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "i"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto 0 y"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 150 10 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 150
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "set_x",
                        "source": "set_x frame.left + 20 : chy#60"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "frame"
                            },
                            {
                              "type": "var",
                              "data": "left"
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chy",
                          {
                            "type": "num",
                            "data": 60
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text cur.id 10 : c#txtc"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "cur"
                          },
                          {
                            "type": "var",
                            "data": "id"
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto frame.left + 30 y + 20"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "frame"
                            },
                            {
                              "type": "var",
                              "data": "left"
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 30
                        }
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "for",
                        "source": "for j cur.axes.len (\n          local x = x_position\n          square 0 0 30 : c#seco\n          change cur.axes.[j].x * 10 cur.axes.[j].y * 10\n          square 0 0 5 : c#txtc\n          goto x + 40 y + 20\n        )"
                      },
                      {
                        "type": "var",
                        "data": "j"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "cur"
                          },
                          {
                            "type": "var",
                            "data": "axes"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "this"
                                  },
                                  {
                                    "type": "var",
                                    "data": "x"
                                  }
                                ]
                              },
                              "right": {
                                "type": "var",
                                "data": "x_position"
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 0 0 30 : c#seco"
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "change",
                              "source": "change cur.axes.[j].x * 10 cur.axes.[j].y * 10"
                            },
                            {
                              "type": "opr",
                              "data": "*",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "cur"
                                  },
                                  {
                                    "type": "var",
                                    "data": "axes"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "j"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "var",
                                    "data": "x"
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 10
                              }
                            },
                            {
                              "type": "opr",
                              "data": "*",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "cur"
                                  },
                                  {
                                    "type": "var",
                                    "data": "axes"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "j"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "var",
                                    "data": "y"
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 10
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 0 0 5 : c#txtc"
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 5
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "goto",
                              "source": "goto x + 40 y + 20"
                            },
                            {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "var",
                                "data": "x"
                              },
                              "right": {
                                "type": "num",
                                "data": 40
                              }
                            },
                            {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "var",
                                "data": "y"
                              },
                              "right": {
                                "type": "num",
                                "data": 20
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto frame.left + 30 y - 20"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "frame"
                            },
                            {
                              "type": "var",
                              "data": "left"
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 30
                        }
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "for",
                        "source": "for j cur.buttons.len (\n          local x = x_position\n          if cur.buttons.[j].[\"pressed\"] (\n            square 0 0 34 : c#txtc\n          )\n          square 0 0 30 : c#seco\n          centext j 10 : c#txtc\n          change_x 40\n          if x_position > frame.right - 20 (\n            set_x frame.left + 30 : chy#-40\n          )\n        )"
                      },
                      {
                        "type": "var",
                        "data": "j"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "cur"
                          },
                          {
                            "type": "var",
                            "data": "buttons"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "this"
                                  },
                                  {
                                    "type": "var",
                                    "data": "x"
                                  }
                                ]
                              },
                              "right": {
                                "type": "var",
                                "data": "x_position"
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if cur.buttons.[j].[\"pressed\"] (\n            square 0 0 34 : c#txtc\n          )"
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "cur"
                                },
                                {
                                  "type": "var",
                                  "data": "buttons"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "var",
                                      "data": "j"
                                    }
                                  ]
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "str",
                                      "data": "\"pressed\""
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square 0 0 34 : c#txtc"
                                  },
                                  {
                                    "type": "num",
                                    "data": 0
                                  },
                                  {
                                    "type": "num",
                                    "data": 0
                                  },
                                  {
                                    "type": "num",
                                    "data": 34
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "txtc"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 0 0 30 : c#seco"
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "centext",
                              "source": "centext j 10 : c#txtc"
                            },
                            {
                              "type": "var",
                              "data": "j"
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "change_x",
                              "source": "change_x 40"
                            },
                            {
                              "type": "num",
                              "data": 40
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if x_position > frame.right - 20 (\n            set_x frame.left + 30 : chy#-40\n          )"
                            },
                            {
                              "type": "cmp",
                              "data": ">",
                              "left": {
                                "type": "var",
                                "data": "x_position"
                              },
                              "right": {
                                "type": "opr",
                                "data": "-",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "frame"
                                    },
                                    {
                                      "type": "var",
                                      "data": "right"
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "num",
                                  "data": 20
                                }
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "set_x",
                                    "source": "set_x frame.left + 30 : chy#-40"
                                  },
                                  {
                                    "type": "opr",
                                    "data": "+",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "frame"
                                        },
                                        {
                                          "type": "var",
                                          "data": "left"
                                        }
                                      ]
                                    },
                                    "right": {
                                      "type": "num",
                                      "data": 30
                                    }
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "chy",
                                      {
                                        "type": "num",
                                        "data": -40
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "clicked"
            },
            "right": {
              "type": "var",
              "data": false
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"network_page\" (\n  local w = frame.width - 25\n  if subcategory == \"Cors Proxy\" (\n    loc 2 2 20 -20\n    text \"Current Cors Proxy: \" ++ user.proxy ?? \"https://apps.mistium.com/cors?url=\" 10 : c#txtc\n    \n    set_x 0 : chy#-50\n    \n    setting_input \"proxy\" user.proxy ?? \"https://apps.mistium.com/cors?url=\" w def(value) -> (\n      if value.startsWith(\"https://\") (\n        network \"update\" \"proxy\" value\n      )\n    )\n    return\n  )\n  goto 0 window.top - 70 + scroll_y\n\n  icon \"network\" 4 : c#txtc\n  if network.connected (\n    local message = \"Connected\"\n  ) else (\n    icon \"w 2 line -10 -10 10 10\" 4\n    local message = \"No Connection\"\n  )\n  \n  change_y -60\n  centext message 10\n  \n  if roturlink.enabled (\n    change_y -100\n    setting_do \"Connected to \" ++ roturlink.wifi.ssid w () -> ()\n    change_y -50\n    setting_do \"Signal Strength: \" ++ roturlink.wifi.signal_strength w () -> ()\n    \n    change_y -70\n    local networks @= roturlink.wifi.scan.sortBy(\"signal_strength\").reverse()\n    \n    setting_do networks.len + (networks.len == 1 ? \"Network\" \"Networks\") w def() -> ()\n    change_y -10\n    \n    each cur networks (\n      set_x 0 : chy#-50\n      setting_do cur.ssid w (val) -> (\n        // implement network switching\n      ) cur\n      \n      set_x w / 2 - 20\n      connection = round(cur.signal_strength.clamp(0, 75) / 25)\n   \n      icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco\n      c txtc\n      icon [\n        \"\",\n        \"w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n      ].[connection + 1] 0.8\n    )\n    page_len = networks.len * 50 + 350\n  )\n  // option \"Cors Proxy\" \"network\"\n)"
    },
    {
      "type": "str",
      "data": "\"network_page\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 25
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"Cors Proxy\" (\n    loc 2 2 20 -20\n    text \"Current Cors Proxy: \" ++ user.proxy ?? \"https://apps.mistium.com/cors?url=\" 10 : c#txtc\n    \n    set_x 0 : chy#-50\n    \n    setting_input \"proxy\" user.proxy ?? \"https://apps.mistium.com/cors?url=\" w def(value) -> (\n      if value.startsWith(\"https://\") (\n        network \"update\" \"proxy\" value\n      )\n    )\n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"Cors Proxy\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 20 -20"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": -20
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Current Cors Proxy: \" ++ user.proxy ?? \"https://apps.mistium.com/cors?url=\" 10 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "??",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "str",
                      "data": "\"Current Cors Proxy: \""
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "user"
                        },
                        {
                          "type": "var",
                          "data": "proxy"
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "str",
                    "data": "\"https://apps.mistium.com/cors?url=\""
                  }
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x 0 : chy#-50"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -50
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_input",
                  "source": "setting_input \"proxy\" user.proxy ?? \"https://apps.mistium.com/cors?url=\" w def(value) -> (\n      if value.startsWith(\"https://\") (\n        network \"update\" \"proxy\" value\n      )\n    )"
                },
                {
                  "type": "str",
                  "data": "\"proxy\""
                },
                {
                  "type": "opr",
                  "data": "??",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "var",
                        "data": "proxy"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"https://apps.mistium.com/cors?url=\""
                  }
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": "value"
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "cmd",
                            "data": "if",
                            "source": "if value.startsWith(\"https://\") (\n        network \"update\" \"proxy\" value\n      )"
                          },
                          {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "value"
                              },
                              {
                                "type": "mtv",
                                "data": "startsWith",
                                "parameters": [
                                  {
                                    "type": "str",
                                    "data": "\"https://\""
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "blk",
                            "data": [
                              [
                                {
                                  "type": "cmd",
                                  "data": "network",
                                  "source": "network \"update\" \"proxy\" value"
                                },
                                {
                                  "type": "str",
                                  "data": "\"update\""
                                },
                                {
                                  "type": "str",
                                  "data": "\"proxy\""
                                },
                                {
                                  "type": "var",
                                  "data": "value"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto 0 window.top - 70 + scroll_y"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "window"
                  },
                  {
                    "type": "var",
                    "data": "top"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 70
              }
            },
            "right": {
              "type": "var",
              "data": "scroll_y"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "icon",
            "source": "icon \"network\" 4 : c#txtc"
          },
          {
            "type": "str",
            "data": "\"network\""
          },
          {
            "type": "num",
            "data": 4
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if network.connected (\n    local message = \"Connected\"\n  ) else (\n    icon \"w 2 line -10 -10 10 10\" 4\n    local message = \"No Connection\"\n  )"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "network"
              },
              {
                "type": "var",
                "data": "connected"
              }
            ]
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "message"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"Connected\""
                  }
                }
              ]
            ]
          },
          {
            "type": "var",
            "data": "else"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"w 2 line -10 -10 10 10\" 4"
                },
                {
                  "type": "str",
                  "data": "\"w 2 line -10 -10 10 10\""
                },
                {
                  "type": "num",
                  "data": 4
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "message"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"No Connection\""
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_y",
            "source": "change_y -60"
          },
          {
            "type": "num",
            "data": -60
          }
        ],
        [
          {
            "type": "cmd",
            "data": "centext",
            "source": "centext message 10"
          },
          {
            "type": "var",
            "data": "message"
          },
          {
            "type": "num",
            "data": 10
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if roturlink.enabled (\n    change_y -100\n    setting_do \"Connected to \" ++ roturlink.wifi.ssid w () -> ()\n    change_y -50\n    setting_do \"Signal Strength: \" ++ roturlink.wifi.signal_strength w () -> ()\n    \n    change_y -70\n    local networks @= roturlink.wifi.scan.sortBy(\"signal_strength\").reverse()\n    \n    setting_do networks.len + (networks.len == 1 ? \"Network\" \"Networks\") w def() -> ()\n    change_y -10\n    \n    each cur networks (\n      set_x 0 : chy#-50\n      setting_do cur.ssid w (val) -> (\n        // implement network switching\n      ) cur\n      \n      set_x w / 2 - 20\n      connection = round(cur.signal_strength.clamp(0, 75) / 25)\n   \n      icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco\n      c txtc\n      icon [\n        \"\",\n        \"w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n      ].[connection + 1] 0.8\n    )\n    page_len = networks.len * 50 + 350\n  )"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "roturlink"
              },
              {
                "type": "var",
                "data": "enabled"
              }
            ]
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -100"
                },
                {
                  "type": "num",
                  "data": -100
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_do",
                  "source": "setting_do \"Connected to \" ++ roturlink.wifi.ssid w () -> ()"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "str",
                    "data": "\"Connected to \""
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "roturlink"
                      },
                      {
                        "type": "var",
                        "data": "wifi"
                      },
                      {
                        "type": "var",
                        "data": "ssid"
                      }
                    ]
                  }
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "num",
                      "data": 0
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -50"
                },
                {
                  "type": "num",
                  "data": -50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_do",
                  "source": "setting_do \"Signal Strength: \" ++ roturlink.wifi.signal_strength w () -> ()"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "str",
                    "data": "\"Signal Strength: \""
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "roturlink"
                      },
                      {
                        "type": "var",
                        "data": "wifi"
                      },
                      {
                        "type": "var",
                        "data": "signal_strength"
                      }
                    ]
                  }
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "num",
                      "data": 0
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -70"
                },
                {
                  "type": "num",
                  "data": -70
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "@=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "networks"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "roturlink"
                      },
                      {
                        "type": "var",
                        "data": "wifi"
                      },
                      {
                        "type": "var",
                        "data": "scan"
                      },
                      {
                        "type": "mtv",
                        "data": "sortBy",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"signal_strength\""
                          }
                        ]
                      },
                      {
                        "type": "mtv",
                        "data": "reverse",
                        "parameters": []
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_do",
                  "source": "setting_do networks.len + (networks.len == 1 ? \"Network\" \"Networks\") w def() -> ()"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "networks"
                      },
                      {
                        "type": "var",
                        "data": "len"
                      }
                    ]
                  },
                  "right": {
                    "type": "qst",
                    "data": "?",
                    "left": {
                      "type": "cmp",
                      "data": "==",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "networks"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 1
                      }
                    },
                    "right": {
                      "type": "str",
                      "data": "\"Network\""
                    },
                    "right2": {
                      "type": "str",
                      "data": "\"Networks\""
                    }
                  }
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "num",
                      "data": 0
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -10"
                },
                {
                  "type": "num",
                  "data": -10
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "each",
                  "source": "each cur networks (\n      set_x 0 : chy#-50\n      setting_do cur.ssid w (val) -> (\n        // implement network switching\n      ) cur\n      \n      set_x w / 2 - 20\n      connection = round(cur.signal_strength.clamp(0, 75) / 25)\n   \n      icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco\n      c txtc\n      icon [\n        \"\",\n        \"w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n      ].[connection + 1] 0.8\n    )"
                },
                {
                  "type": "var",
                  "data": "cur"
                },
                {
                  "type": "var",
                  "data": "networks"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "set_x",
                        "source": "set_x 0 : chy#-50"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chy",
                          {
                            "type": "num",
                            "data": -50
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "setting_do",
                        "source": "setting_do cur.ssid w (val) -> (\n        // implement network switching\n      ) cur"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "cur"
                          },
                          {
                            "type": "var",
                            "data": "ssid"
                          }
                        ]
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "fnc",
                        "data": "function",
                        "parameters": [
                          {
                            "type": "str",
                            "data": ""
                          },
                          {
                            "type": "blk",
                            "data": []
                          }
                        ]
                      },
                      {
                        "type": "var",
                        "data": "cur"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "set_x",
                        "source": "set_x w / 2 - 20"
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": 2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "connection"
                        },
                        "right": {
                          "type": "fnc",
                          "data": "round",
                          "parameters": [
                            {
                              "type": "opr",
                              "data": "/",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "cur"
                                  },
                                  {
                                    "type": "var",
                                    "data": "signal_strength"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "clamp",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 0
                                      },
                                      {
                                        "type": "num",
                                        "data": 75
                                      }
                                    ]
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 25
                              }
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco"
                      },
                      {
                        "type": "str",
                        "data": "\"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\""
                      },
                      {
                        "type": "num",
                        "data": 0.8
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "c",
                        "source": "c txtc"
                      },
                      {
                        "type": "var",
                        "data": "txtc"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon [\n        \"\",\n        \"w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n        \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n      ].[connection + 1] 0.8"
                      },
                      {
                        "type": "arr",
                        "data": [
                          {
                            "type": "str",
                            "data": "\"\""
                          },
                          {
                            "type": "str",
                            "data": "\"w 4 dot 0 -6\""
                          },
                          {
                            "type": "str",
                            "data": "\"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\""
                          },
                          {
                            "type": "str",
                            "data": "\"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\""
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 0.8
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "networks"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 50
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 350
                    }
                  }
                }
              ]
            ]
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"colour_selector\" \"name, id\" (\n  loc 9999 2 0 y\n  local w = frame.width - 25\n  square w 30 15 : c#prim\n  if mouse_touching (\n    square w 30 15 : c#seco\n    square w 30 10 : c#prim\n  )\n  loc 2 2 15 y\n  text name ++ \":\" 10 : c#txtc\n  loc -2 2 -130 y\n  text theme_select.[id] 10\n  square 0 0 25 0 : chx#30\n  c theme_select.[id]\n  square 0 0 20 0\n  if onclick (\n    colourpicker \"setcol\" theme_select.[id]\n    colourpicker \"show\"\n    selected_col = id\n  )\n  if user.theme.[id] != theme_select.[id] (\n    change_x -120\n    square 20 20 10 0 1 : tooltip#\"Reset Colour\"\n    if mouse_touching (\n      square 20 20 15 : c#seco\n      square 20 20 10 : c#prim\n    )\n    icon \"reload\" 0.5 : c#txtc\n    if onclick (\n      theme_select.[id] = user.theme.[id]\n      colourpicker \"setcol\" theme_select.[id]\n      selected_col = id\n    )\n  )\n)"
    },
    {
      "type": "str",
      "data": "\"colour_selector\""
    },
    {
      "type": "str",
      "data": "\"name, id\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 9999 2 0 y"
          },
          {
            "type": "num",
            "data": 9999
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "var",
            "data": "y"
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 25
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square w 30 15 : c#prim"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 15
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if mouse_touching (\n    square w 30 15 : c#seco\n    square w 30 10 : c#prim\n  )"
          },
          {
            "type": "var",
            "data": "mouse_touching"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#seco"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 10 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 15 y"
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 15
          },
          {
            "type": "var",
            "data": "y"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text name ++ \":\" 10 : c#txtc"
          },
          {
            "type": "opr",
            "data": "++",
            "left": {
              "type": "var",
              "data": "name"
            },
            "right": {
              "type": "str",
              "data": "\":\""
            }
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc -2 2 -130 y"
          },
          {
            "type": "num",
            "data": -2
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": -130
          },
          {
            "type": "var",
            "data": "y"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text theme_select.[id] 10"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "theme_select"
              },
              {
                "type": "mtv",
                "data": "item",
                "parameters": [
                  {
                    "type": "var",
                    "data": "id"
                  }
                ]
              }
            ]
          },
          {
            "type": "num",
            "data": 10
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 0 0 25 0 : chx#30"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 25
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chx",
              {
                "type": "num",
                "data": 30
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "c",
            "source": "c theme_select.[id]"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "theme_select"
              },
              {
                "type": "mtv",
                "data": "item",
                "parameters": [
                  {
                    "type": "var",
                    "data": "id"
                  }
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 0 0 20 0"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 20
          },
          {
            "type": "num",
            "data": 0
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if onclick (\n    colourpicker \"setcol\" theme_select.[id]\n    colourpicker \"show\"\n    selected_col = id\n  )"
          },
          {
            "type": "var",
            "data": "onclick"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "colourpicker",
                  "source": "colourpicker \"setcol\" theme_select.[id]"
                },
                {
                  "type": "str",
                  "data": "\"setcol\""
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "theme_select"
                    },
                    {
                      "type": "mtv",
                      "data": "item",
                      "parameters": [
                        {
                          "type": "var",
                          "data": "id"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colourpicker",
                  "source": "colourpicker \"show\""
                },
                {
                  "type": "str",
                  "data": "\"show\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "selected_col"
                  },
                  "right": {
                    "type": "var",
                    "data": "id"
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if user.theme.[id] != theme_select.[id] (\n    change_x -120\n    square 20 20 10 0 1 : tooltip#\"Reset Colour\"\n    if mouse_touching (\n      square 20 20 15 : c#seco\n      square 20 20 10 : c#prim\n    )\n    icon \"reload\" 0.5 : c#txtc\n    if onclick (\n      theme_select.[id] = user.theme.[id]\n      colourpicker \"setcol\" theme_select.[id]\n      selected_col = id\n    )\n  )"
          },
          {
            "type": "cmp",
            "data": "!=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "user"
                },
                {
                  "type": "var",
                  "data": "theme"
                },
                {
                  "type": "mtv",
                  "data": "item",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "id"
                    }
                  ]
                }
              ]
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "theme_select"
                },
                {
                  "type": "mtv",
                  "data": "item",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "id"
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x -120"
                },
                {
                  "type": "num",
                  "data": -120
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 20 20 10 0 1 : tooltip#\"Reset Colour\""
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "num",
                  "data": 1
                },
                {
                  "type": "mod",
                  "data": [
                    "tooltip",
                    {
                      "type": "str",
                      "data": "\"Reset Colour\""
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_touching (\n      square 20 20 15 : c#seco\n      square 20 20 10 : c#prim\n    )"
                },
                {
                  "type": "var",
                  "data": "mouse_touching"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 20 20 15 : c#seco"
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 20 20 10 : c#prim"
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"reload\" 0.5 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"reload\""
                },
                {
                  "type": "num",
                  "data": 0.5
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n      theme_select.[id] = user.theme.[id]\n      colourpicker \"setcol\" theme_select.[id]\n      selected_col = id\n    )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "theme_select"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "id"
                                }
                              ]
                            }
                          ]
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "user"
                            },
                            {
                              "type": "var",
                              "data": "theme"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "id"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "colourpicker",
                        "source": "colourpicker \"setcol\" theme_select.[id]"
                      },
                      {
                        "type": "str",
                        "data": "\"setcol\""
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "theme_select"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "id"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "selected_col"
                        },
                        "right": {
                          "type": "var",
                          "data": "id"
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"appearance\" (\n  local w = frame.width - 25\n  switch subcategory (\n    case \"none\"\n      option \"Background\" \"w 3 square 0 0 10 10 line 5 -5 3 -3 cont 2 -4 line 1 -5 -2 -2 cont -5 -5 w 6 dot 3 4\"\n      option \"Dock\" \"w 6 line -7 -7 0 -7 line 7 -7 7 -7\"\n      option \"Windows\" \"maximise\"\n      option \"Colours\" \"w 3 cutcircle 0 -3 5 18 120 cont 0 8 cont 4.9 -1.5 line 4 -3 -4 -3 line 4 -5.5 -4 -5.5\"\n      option \"File Types\" \"w 4 line -8 10 3 10 cont 8 5 cont 8 -10 cont -8 -10 cont -8 10\"\n      option \"Mouse\" \"line -9 9 7 -1 cont -5 -6 cont -9 9 line 5.8 -10 -9 9 line 0 0 -5 -5\"\n      break\n    case \"Background\"\n      y = -30 + scroll_y\n      w = frame.width - 25\n      loc 9999 2 0 y\n      square w 30 15 : c#prim\n      if onclick (\n        current_wallpaper = clipboard.toStr()\n      )\n      loc 2 2 50 y\n      text \"Click To Add Wallpaper Url In Clipboard\" 10 : c#txtc\n      loc 2 2 25 y\n      icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc\n      if wallpapers.contains(current_wallpaper).not() (\n        if current_wallpaper.imageinfo(\"loaded\") (\n          wallpapers.insert(1,current_wallpaper.destr)\n          save \"wallpapers.json\" \"set\" wallpapers\n          current_wallpaper = \"\"\n        )\n        if current_wallpaper == clipboard.toStr() (\n          image current_wallpaper 0 0\n          text \"Trying\" 10 : c#txtc chx#20\n        )\n      )\n      wallpaper_data = \"Total:\" + wallpapers.len\n      loc -2 2 -15 - (wallpaper_data.len * 10) y\n      text wallpaper_data 10\n      y -= 152\n      loc 4 2 -2.5 y\n      w = frame.width / 2 - 30\n      square w 230 15 : c#prim\n      image \"wallpaper\" w 200 : chy#-10\n      y2 = y + 50\n      systemvars \"getvar\" \"SYSTEM // Background Mode\"\n      back_mode = data\n      \n      modes = [\"Fill\",\"Center\",\"Fit\",\"Stretch\"]\n      for i 4 (\n        loc -4 2 0 y2\n        cur = modes.[i]\n        square w 30 15 : c#prim\n        if mouse_touching or cur == back_mode (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n          if onclick (\n            terminal \"system wallpapermode\" + cur\n            network \"update\" \"wallpaper_mode\" cur\n          )\n        )\n        change_x w / -2 + 10\n        text cur 10 : c#txtc\n        y2 -= 50\n      )\n      loc 2 2 20 y + 105\n      text \"Current Wallpaper\" 10 : c#txtc\n      loc 9999 2 20 y + 105\n      text \"Wallpaper Mode\" 10\n      y -= 8\n      for count wallpapers.len (\n        if count % 2 == 1 (\n          y -= 230\n        )\n        if count % 2 == 1 \"loc 4 2 0 y\" else \"loc -4 2 0 y\"\n        square w 200 15 : c#prim\n        cur = wallpapers.[count]\n        image cur w 200\n        change_x -40\n        square 20 20 20 : c#prim\n        if mouse_touching (\n          if clicked.not() \"square 20 20 23\"\n          if onclick (\n            terminal \"system wallpaper\" + cur\n            network \"update\" \"wallpaper\" cur\n          )\n        )\n        icon \"tick\" 0.7 : c#txtc\n        change_x 80\n        square 20 20 20 : c#prim\n        if mouse_touching (\n          if !clicked \"square 20 20 23\"\n          if onclick (\n            wallpapers.delete(count)\n            save \"wallpapers.json\" \"set\" wallpapers\n          )\n        )\n        icon \"bin\" 0.7 : c#txtc\n      )\n      page_len = ceil(wallpapers.len / 2) * 230 + 310\n      break\n    case \"Dock\"\n      if new_transmit (\n        file \"open\" transmit_data \"onlyaccess\"\n        f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ fileGet(1)\n        segments.append(f)\n        network \"update\" \"origin_dock\" segments\n        new_transmit = false\n      )\n      w = frame.width - 25\n      y = -30 + scroll_y\n      loc 9999 2 0 y\n      square w 30 15 : c#prim\n      loc 2 2 30 y\n      icon \"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\" 0.6 : c#txtc\n      text \"Reset Dock To Default\" 9 : chx#20\n      if clicked (\n        segments = [\n          \"Origin/(A) System/Docks/Modules/main.ode\",\n          \"Origin/(A) System/Docks/Modules/applications.ode\",\n          \"Origin/(A) System/Docks/Modules/running.ode\",\n          \"Origin/(A) System/Docks/Modules/folders.ode\",\n          \"Origin/(A) System/Docks/Modules/time.ode\",\n          \"Origin/(A) System/Docks/Modules/battery.ode\"\n        ]\n        network \"update\" \"origin_dock\" segments\n      )\n      if file_dropped != 0 (\n        file \"open\" file_dropped \"onlyaccess\"\n        data = fileGet(1)\n        if data == \".ode\" (\n          f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ data\n          void segments.append(f)\n          network \"update\" \"origin_dock\" segments\n        )\n        file_dropped = 0\n      )\n      loc 9999 2 0 y - 50\n      square w 30 15 : c#prim\n      if onclick (\n        file \"pick\" \"ode\"\n        can = false\n      )\n      loc 2 2 30 y - 50\n      icon \"upload\" 0.7 : c#txtc\n      text \"Click here or drop an ode file to add it to your dock\" 9 : chx#20\n      for count segments.len (\n        y = count + 2 * -50 + scroll_y\n        loc 999 2 0 y\n        w = frame_width - 25\n        square w 30 15 : c#prim\n        if mouse_touching (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n        )\n        loc 2 2 15 y\n        text segments.[count] 9 : c#txtc\n        loc -2 2 -28 y\n        square 30 30 10 0 1\n        if mouse_touching (\n          square 30 30 15 : c#seco\n          square 30 30 10 : c#prim\n          if onclick (\n            segments.delete(count)\n            network \"update\" \"origin_dock\" segments\n          )\n        )\n        icon \"bin\" 0.8 : c#txtc\n        change_x -45\n        if count > 1 (\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count - 1,count)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"up\" 0.8 : c#txtc\n        )\n        if count < segments.len (\n          change_x -45\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count,count + 1)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"down\" 0.8 : c#txtc\n        )\n      )\n      page_len = segments.len + 2 * 60\n      break\n    case \"windows\"\n      goto 0 frame.top + scroll_y - 30\n      setting_toggle \"Show Window Outline\" w user.theme.show_outline != false def() -> (\n        local theme = user.theme\n        theme.show_outline = theme.show_outline == false\n        network \"update\" \"theme\" theme\n      )\n      break\n    case \"Colours\"\n      if typeof(theme_select) != \"object\" (\n        window_accent = global_accent\n        theme_select = user.theme\n      )\n  \n      y = -30 + scroll_y\n      colour_selector \"Accent Colour\" \"accent\"\n\n      y -= 70\n      colour_selector \"Window Background\" \"background\"\n      y -= 50\n      colour_selector \"Window Primary\" \"primary\"\n      y -= 50\n      colour_selector \"Window Secondary\" \"secondary\"\n      y -= 50\n      colour_selector \"Window Tertiary\" \"tertiary\"\n      y -= 50\n      colour_selector \"Window Text And Icons\" \"text\"\n  \n      switch selected_col (\n        case \"accent\"\n          window_accent = picker_colour\n          break\n        case \"background\"\n          window_colour = picker_colour\n          break\n        case \"primary\"\n          prim = picker_colour\n          break\n        case \"secondary\"\n          seco = picker_colour\n          break\n        case \"tertiary\"\n          tert = picker_colour\n          break\n        case \"text\"\n          txtc = picker_colour\n          break\n      )\n      if selected_col != \"\" (\n        theme_select.[selected_col] = picker_colour\n      )\n      \n      y -= 50\n      loc 9999 2 0 y\n      w = frame.width - 25\n      square w 30 15 : c#prim\n      if mouse_touching (\n        if onclick (\n          network \"update\" \"theme\" theme_select\n        )\n        square w 30 15 : c#seco\n        square w 30 10 : c#prim\n      )\n      loc 2 2 30 y\n      icon \"save\" 0.7 : c#txtc\n      text \"Save And Apply Theme\" 9 : chx#30\n      \n      y -= 80\n      each theme themes.getKeys() (\n        loc 9999 2 0 y\n        square w 30 15 : c#prim\n        if mouse_touching (\n          if onclick (\n            theme_select = themes.[theme]\n            selected_col = \"\"\n            \n            prim = theme_select.primary\n            seco = theme_select.secondary\n            tert = theme_select.tertiary\n            txtc = theme_select.text\n            window_colour = theme_select.background\n            window_accent = global_accent\n          )\n        )\n        loc 2 2 30 y\n        text theme 10 : c#txtc\n        y -= 50\n      )\n      \n      page_len = 380 + (themes.len * 50)      \n      break\n    case \"File Types\"\n      for count ftkeys.len (\n        y = count * -60 + scroll_y + 30\n        \n        loc 999 2 0 y\n        square frame.width - 20 40 10 : c#prim\n        if mouse_touching (\n          square frame.width - 20 40 10 : c#seco\n          square frame.width - 20 40 5 : c#prim\n        )\n        \n        loc 2 2 30 y\n        square 40 40 10 : c#seco\n        square 40 40 5 : c#prim\n        \n        ftv @= ftvalues.[count]\n        icon ftv.[1] 1 : c#txtc\n        text ftv.[2] + \"(\" ++ ftkeys.[count] ++ \")\" 9 : chx#35 : c#txtc\n      )\n      page_len = count * 60\n      break\n    case \"mouse\"\n      loc 2 2 10 -20\n      text \"Scroll Wheel Speed\" 12 : c#txtc\n      terminal \"get scrollspeed\"\n      data = data.toNum()\n      flipped = false\n      if data < 0 (\n        data *= -1\n        flipped = true\n      )\n      slider_scrollsp = data.clamp(1,10)\n      loc 2 2 10 -90\n      text \"Scrolling \" ++ (round(slider_scrollsp * 10) / 10) ++ \"x speed\" 9 : c#txtc\n      slider_scrollsp = slider_scrollsp - 1 / 9\n      loc 999 2 0 -60\n      slider w 25 \"scrollsp\" 10 : c#prim\n      slider_scrollsp = slider_scrollsp * 9 + 1\n      change_y -90\n      setting_toggle \"Invert Scroll Direction\" w flipped def() -> (\n        flipped = flipped.not()\n      )\n      if flipped (\n        slider_scrollsp *= -1\n      )\n      terminal \"system scrollspeed\" + slider_scrollsp\n      if slider_scrollsp != user.scrollspeed and mouse_down.not() (\n        network \"update\" \"scrollspeed\" slider_scrollsp\n      )\n      break\n  )\n  frame \"clear\"\n)"
    },
    {
      "type": "str",
      "data": "\"appearance\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 25
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "switch",
            "source": "switch subcategory (\n    case \"none\"\n      option \"Background\" \"w 3 square 0 0 10 10 line 5 -5 3 -3 cont 2 -4 line 1 -5 -2 -2 cont -5 -5 w 6 dot 3 4\"\n      option \"Dock\" \"w 6 line -7 -7 0 -7 line 7 -7 7 -7\"\n      option \"Windows\" \"maximise\"\n      option \"Colours\" \"w 3 cutcircle 0 -3 5 18 120 cont 0 8 cont 4.9 -1.5 line 4 -3 -4 -3 line 4 -5.5 -4 -5.5\"\n      option \"File Types\" \"w 4 line -8 10 3 10 cont 8 5 cont 8 -10 cont -8 -10 cont -8 10\"\n      option \"Mouse\" \"line -9 9 7 -1 cont -5 -6 cont -9 9 line 5.8 -10 -9 9 line 0 0 -5 -5\"\n      break\n    case \"Background\"\n      y = -30 + scroll_y\n      w = frame.width - 25\n      loc 9999 2 0 y\n      square w 30 15 : c#prim\n      if onclick (\n        current_wallpaper = clipboard.toStr()\n      )\n      loc 2 2 50 y\n      text \"Click To Add Wallpaper Url In Clipboard\" 10 : c#txtc\n      loc 2 2 25 y\n      icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc\n      if wallpapers.contains(current_wallpaper).not() (\n        if current_wallpaper.imageinfo(\"loaded\") (\n          wallpapers.insert(1,current_wallpaper.destr)\n          save \"wallpapers.json\" \"set\" wallpapers\n          current_wallpaper = \"\"\n        )\n        if current_wallpaper == clipboard.toStr() (\n          image current_wallpaper 0 0\n          text \"Trying\" 10 : c#txtc chx#20\n        )\n      )\n      wallpaper_data = \"Total:\" + wallpapers.len\n      loc -2 2 -15 - (wallpaper_data.len * 10) y\n      text wallpaper_data 10\n      y -= 152\n      loc 4 2 -2.5 y\n      w = frame.width / 2 - 30\n      square w 230 15 : c#prim\n      image \"wallpaper\" w 200 : chy#-10\n      y2 = y + 50\n      systemvars \"getvar\" \"SYSTEM // Background Mode\"\n      back_mode = data\n      \n      modes = [\"Fill\",\"Center\",\"Fit\",\"Stretch\"]\n      for i 4 (\n        loc -4 2 0 y2\n        cur = modes.[i]\n        square w 30 15 : c#prim\n        if mouse_touching or cur == back_mode (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n          if onclick (\n            terminal \"system wallpapermode\" + cur\n            network \"update\" \"wallpaper_mode\" cur\n          )\n        )\n        change_x w / -2 + 10\n        text cur 10 : c#txtc\n        y2 -= 50\n      )\n      loc 2 2 20 y + 105\n      text \"Current Wallpaper\" 10 : c#txtc\n      loc 9999 2 20 y + 105\n      text \"Wallpaper Mode\" 10\n      y -= 8\n      for count wallpapers.len (\n        if count % 2 == 1 (\n          y -= 230\n        )\n        if count % 2 == 1 \"loc 4 2 0 y\" else \"loc -4 2 0 y\"\n        square w 200 15 : c#prim\n        cur = wallpapers.[count]\n        image cur w 200\n        change_x -40\n        square 20 20 20 : c#prim\n        if mouse_touching (\n          if clicked.not() \"square 20 20 23\"\n          if onclick (\n            terminal \"system wallpaper\" + cur\n            network \"update\" \"wallpaper\" cur\n          )\n        )\n        icon \"tick\" 0.7 : c#txtc\n        change_x 80\n        square 20 20 20 : c#prim\n        if mouse_touching (\n          if !clicked \"square 20 20 23\"\n          if onclick (\n            wallpapers.delete(count)\n            save \"wallpapers.json\" \"set\" wallpapers\n          )\n        )\n        icon \"bin\" 0.7 : c#txtc\n      )\n      page_len = ceil(wallpapers.len / 2) * 230 + 310\n      break\n    case \"Dock\"\n      if new_transmit (\n        file \"open\" transmit_data \"onlyaccess\"\n        f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ fileGet(1)\n        segments.append(f)\n        network \"update\" \"origin_dock\" segments\n        new_transmit = false\n      )\n      w = frame.width - 25\n      y = -30 + scroll_y\n      loc 9999 2 0 y\n      square w 30 15 : c#prim\n      loc 2 2 30 y\n      icon \"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\" 0.6 : c#txtc\n      text \"Reset Dock To Default\" 9 : chx#20\n      if clicked (\n        segments = [\n          \"Origin/(A) System/Docks/Modules/main.ode\",\n          \"Origin/(A) System/Docks/Modules/applications.ode\",\n          \"Origin/(A) System/Docks/Modules/running.ode\",\n          \"Origin/(A) System/Docks/Modules/folders.ode\",\n          \"Origin/(A) System/Docks/Modules/time.ode\",\n          \"Origin/(A) System/Docks/Modules/battery.ode\"\n        ]\n        network \"update\" \"origin_dock\" segments\n      )\n      if file_dropped != 0 (\n        file \"open\" file_dropped \"onlyaccess\"\n        data = fileGet(1)\n        if data == \".ode\" (\n          f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ data\n          void segments.append(f)\n          network \"update\" \"origin_dock\" segments\n        )\n        file_dropped = 0\n      )\n      loc 9999 2 0 y - 50\n      square w 30 15 : c#prim\n      if onclick (\n        file \"pick\" \"ode\"\n        can = false\n      )\n      loc 2 2 30 y - 50\n      icon \"upload\" 0.7 : c#txtc\n      text \"Click here or drop an ode file to add it to your dock\" 9 : chx#20\n      for count segments.len (\n        y = count + 2 * -50 + scroll_y\n        loc 999 2 0 y\n        w = frame_width - 25\n        square w 30 15 : c#prim\n        if mouse_touching (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n        )\n        loc 2 2 15 y\n        text segments.[count] 9 : c#txtc\n        loc -2 2 -28 y\n        square 30 30 10 0 1\n        if mouse_touching (\n          square 30 30 15 : c#seco\n          square 30 30 10 : c#prim\n          if onclick (\n            segments.delete(count)\n            network \"update\" \"origin_dock\" segments\n          )\n        )\n        icon \"bin\" 0.8 : c#txtc\n        change_x -45\n        if count > 1 (\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count - 1,count)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"up\" 0.8 : c#txtc\n        )\n        if count < segments.len (\n          change_x -45\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count,count + 1)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"down\" 0.8 : c#txtc\n        )\n      )\n      page_len = segments.len + 2 * 60\n      break\n    case \"windows\"\n      goto 0 frame.top + scroll_y - 30\n      setting_toggle \"Show Window Outline\" w user.theme.show_outline != false def() -> (\n        local theme = user.theme\n        theme.show_outline = theme.show_outline == false\n        network \"update\" \"theme\" theme\n      )\n      break\n    case \"Colours\"\n      if typeof(theme_select) != \"object\" (\n        window_accent = global_accent\n        theme_select = user.theme\n      )\n  \n      y = -30 + scroll_y\n      colour_selector \"Accent Colour\" \"accent\"\n\n      y -= 70\n      colour_selector \"Window Background\" \"background\"\n      y -= 50\n      colour_selector \"Window Primary\" \"primary\"\n      y -= 50\n      colour_selector \"Window Secondary\" \"secondary\"\n      y -= 50\n      colour_selector \"Window Tertiary\" \"tertiary\"\n      y -= 50\n      colour_selector \"Window Text And Icons\" \"text\"\n  \n      switch selected_col (\n        case \"accent\"\n          window_accent = picker_colour\n          break\n        case \"background\"\n          window_colour = picker_colour\n          break\n        case \"primary\"\n          prim = picker_colour\n          break\n        case \"secondary\"\n          seco = picker_colour\n          break\n        case \"tertiary\"\n          tert = picker_colour\n          break\n        case \"text\"\n          txtc = picker_colour\n          break\n      )\n      if selected_col != \"\" (\n        theme_select.[selected_col] = picker_colour\n      )\n      \n      y -= 50\n      loc 9999 2 0 y\n      w = frame.width - 25\n      square w 30 15 : c#prim\n      if mouse_touching (\n        if onclick (\n          network \"update\" \"theme\" theme_select\n        )\n        square w 30 15 : c#seco\n        square w 30 10 : c#prim\n      )\n      loc 2 2 30 y\n      icon \"save\" 0.7 : c#txtc\n      text \"Save And Apply Theme\" 9 : chx#30\n      \n      y -= 80\n      each theme themes.getKeys() (\n        loc 9999 2 0 y\n        square w 30 15 : c#prim\n        if mouse_touching (\n          if onclick (\n            theme_select = themes.[theme]\n            selected_col = \"\"\n            \n            prim = theme_select.primary\n            seco = theme_select.secondary\n            tert = theme_select.tertiary\n            txtc = theme_select.text\n            window_colour = theme_select.background\n            window_accent = global_accent\n          )\n        )\n        loc 2 2 30 y\n        text theme 10 : c#txtc\n        y -= 50\n      )\n      \n      page_len = 380 + (themes.len * 50)      \n      break\n    case \"File Types\"\n      for count ftkeys.len (\n        y = count * -60 + scroll_y + 30\n        \n        loc 999 2 0 y\n        square frame.width - 20 40 10 : c#prim\n        if mouse_touching (\n          square frame.width - 20 40 10 : c#seco\n          square frame.width - 20 40 5 : c#prim\n        )\n        \n        loc 2 2 30 y\n        square 40 40 10 : c#seco\n        square 40 40 5 : c#prim\n        \n        ftv @= ftvalues.[count]\n        icon ftv.[1] 1 : c#txtc\n        text ftv.[2] + \"(\" ++ ftkeys.[count] ++ \")\" 9 : chx#35 : c#txtc\n      )\n      page_len = count * 60\n      break\n    case \"mouse\"\n      loc 2 2 10 -20\n      text \"Scroll Wheel Speed\" 12 : c#txtc\n      terminal \"get scrollspeed\"\n      data = data.toNum()\n      flipped = false\n      if data < 0 (\n        data *= -1\n        flipped = true\n      )\n      slider_scrollsp = data.clamp(1,10)\n      loc 2 2 10 -90\n      text \"Scrolling \" ++ (round(slider_scrollsp * 10) / 10) ++ \"x speed\" 9 : c#txtc\n      slider_scrollsp = slider_scrollsp - 1 / 9\n      loc 999 2 0 -60\n      slider w 25 \"scrollsp\" 10 : c#prim\n      slider_scrollsp = slider_scrollsp * 9 + 1\n      change_y -90\n      setting_toggle \"Invert Scroll Direction\" w flipped def() -> (\n        flipped = flipped.not()\n      )\n      if flipped (\n        slider_scrollsp *= -1\n      )\n      terminal \"system scrollspeed\" + slider_scrollsp\n      if slider_scrollsp != user.scrollspeed and mouse_down.not() (\n        network \"update\" \"scrollspeed\" slider_scrollsp\n      )\n      break\n  )"
          },
          {
            "type": "var",
            "data": "subcategory"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"none\""
                },
                {
                  "type": "str",
                  "data": "\"none\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Background\" \"w 3 square 0 0 10 10 line 5 -5 3 -3 cont 2 -4 line 1 -5 -2 -2 cont -5 -5 w 6 dot 3 4\""
                },
                {
                  "type": "str",
                  "data": "\"Background\""
                },
                {
                  "type": "str",
                  "data": "\"w 3 square 0 0 10 10 line 5 -5 3 -3 cont 2 -4 line 1 -5 -2 -2 cont -5 -5 w 6 dot 3 4\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Dock\" \"w 6 line -7 -7 0 -7 line 7 -7 7 -7\""
                },
                {
                  "type": "str",
                  "data": "\"Dock\""
                },
                {
                  "type": "str",
                  "data": "\"w 6 line -7 -7 0 -7 line 7 -7 7 -7\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Windows\" \"maximise\""
                },
                {
                  "type": "str",
                  "data": "\"Windows\""
                },
                {
                  "type": "str",
                  "data": "\"maximise\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Colours\" \"w 3 cutcircle 0 -3 5 18 120 cont 0 8 cont 4.9 -1.5 line 4 -3 -4 -3 line 4 -5.5 -4 -5.5\""
                },
                {
                  "type": "str",
                  "data": "\"Colours\""
                },
                {
                  "type": "str",
                  "data": "\"w 3 cutcircle 0 -3 5 18 120 cont 0 8 cont 4.9 -1.5 line 4 -3 -4 -3 line 4 -5.5 -4 -5.5\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"File Types\" \"w 4 line -8 10 3 10 cont 8 5 cont 8 -10 cont -8 -10 cont -8 10\""
                },
                {
                  "type": "str",
                  "data": "\"File Types\""
                },
                {
                  "type": "str",
                  "data": "\"w 4 line -8 10 3 10 cont 8 5 cont 8 -10 cont -8 -10 cont -8 10\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "option",
                  "source": "option \"Mouse\" \"line -9 9 7 -1 cont -5 -6 cont -9 9 line 5.8 -10 -9 9 line 0 0 -5 -5\""
                },
                {
                  "type": "str",
                  "data": "\"Mouse\""
                },
                {
                  "type": "str",
                  "data": "\"line -9 9 7 -1 cont -5 -6 cont -9 9 line 5.8 -10 -9 9 line 0 0 -5 -5\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Background\""
                },
                {
                  "type": "str",
                  "data": "\"Background\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "num",
                      "data": -30
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "width"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 25
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 0 y"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n        current_wallpaper = clipboard.toStr()\n      )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "current_wallpaper"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "clipboard"
                            },
                            {
                              "type": "mtv",
                              "data": "toStr",
                              "parameters": []
                            }
                          ]
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 50 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 50
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Click To Add Wallpaper Url In Clipboard\" 10 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Click To Add Wallpaper Url In Clipboard\""
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 25 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 25
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\""
                },
                {
                  "type": "num",
                  "data": 0.7
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if wallpapers.contains(current_wallpaper).not() (\n        if current_wallpaper.imageinfo(\"loaded\") (\n          wallpapers.insert(1,current_wallpaper.destr)\n          save \"wallpapers.json\" \"set\" wallpapers\n          current_wallpaper = \"\"\n        )\n        if current_wallpaper == clipboard.toStr() (\n          image current_wallpaper 0 0\n          text \"Trying\" 10 : c#txtc chx#20\n        )\n      )"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "wallpapers"
                    },
                    {
                      "type": "mtv",
                      "data": "contains",
                      "parameters": [
                        {
                          "type": "var",
                          "data": "current_wallpaper"
                        }
                      ]
                    },
                    {
                      "type": "mtv",
                      "data": "not",
                      "parameters": []
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if current_wallpaper.imageinfo(\"loaded\") (\n          wallpapers.insert(1,current_wallpaper.destr)\n          save \"wallpapers.json\" \"set\" wallpapers\n          current_wallpaper = \"\"\n        )"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "current_wallpaper"
                          },
                          {
                            "type": "mtv",
                            "data": "imageinfo",
                            "parameters": [
                              {
                                "type": "str",
                                "data": "\"loaded\""
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "left": {
                                "type": "var",
                                "data": "wallpapers"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "wallpapers"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "insert",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 1
                                      },
                                      {
                                        "type": "mtd",
                                        "data": [
                                          {
                                            "type": "var",
                                            "data": "current_wallpaper"
                                          },
                                          {
                                            "type": "var",
                                            "data": "destr"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "save",
                              "source": "save \"wallpapers.json\" \"set\" wallpapers"
                            },
                            {
                              "type": "str",
                              "data": "\"wallpapers.json\""
                            },
                            {
                              "type": "str",
                              "data": "\"set\""
                            },
                            {
                              "type": "var",
                              "data": "wallpapers"
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "current_wallpaper"
                              },
                              "right": {
                                "type": "str",
                                "data": "\"\""
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if current_wallpaper == clipboard.toStr() (\n          image current_wallpaper 0 0\n          text \"Trying\" 10 : c#txtc chx#20\n        )"
                      },
                      {
                        "type": "cmp",
                        "data": "==",
                        "left": {
                          "type": "var",
                          "data": "current_wallpaper"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "clipboard"
                            },
                            {
                              "type": "mtv",
                              "data": "toStr",
                              "parameters": []
                            }
                          ]
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "image",
                              "source": "image current_wallpaper 0 0"
                            },
                            {
                              "type": "var",
                              "data": "current_wallpaper"
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 0
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "text",
                              "source": "text \"Trying\" 10 : c#txtc chx#20"
                            },
                            {
                              "type": "str",
                              "data": "\"Trying\""
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            },
                            {
                              "type": "mod",
                              "data": [
                                "chx",
                                {
                                  "type": "num",
                                  "data": 20
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "wallpaper_data"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "str",
                      "data": "\"Total:\""
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "wallpapers"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc -2 2 -15 - (wallpaper_data.len * 10) y"
                },
                {
                  "type": "num",
                  "data": -2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "num",
                    "data": -15
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "wallpaper_data"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 10
                    }
                  }
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text wallpaper_data 10"
                },
                {
                  "type": "var",
                  "data": "wallpaper_data"
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 152
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 4 2 -2.5 y"
                },
                {
                  "type": "num",
                  "data": 4
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": -2.5
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "opr",
                      "data": "/",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "frame"
                          },
                          {
                            "type": "var",
                            "data": "width"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 2
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 30
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 230 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 230
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "image",
                  "source": "image \"wallpaper\" w 200 : chy#-10"
                },
                {
                  "type": "str",
                  "data": "\"wallpaper\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 200
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -10
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y2"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "var",
                      "data": "y"
                    },
                    "right": {
                      "type": "num",
                      "data": 50
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "systemvars",
                  "source": "systemvars \"getvar\" \"SYSTEM // Background Mode\""
                },
                {
                  "type": "str",
                  "data": "\"getvar\""
                },
                {
                  "type": "str",
                  "data": "\"SYSTEM // Background Mode\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "back_mode"
                  },
                  "right": {
                    "type": "var",
                    "data": "data"
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "modes"
                  },
                  "right": {
                    "type": "arr",
                    "data": [
                      {
                        "type": "str",
                        "data": "\"Fill\""
                      },
                      {
                        "type": "str",
                        "data": "\"Center\""
                      },
                      {
                        "type": "str",
                        "data": "\"Fit\""
                      },
                      {
                        "type": "str",
                        "data": "\"Stretch\""
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for i 4 (\n        loc -4 2 0 y2\n        cur = modes.[i]\n        square w 30 15 : c#prim\n        if mouse_touching or cur == back_mode (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n          if onclick (\n            terminal \"system wallpapermode\" + cur\n            network \"update\" \"wallpaper_mode\" cur\n          )\n        )\n        change_x w / -2 + 10\n        text cur 10 : c#txtc\n        y2 -= 50\n      )"
                },
                {
                  "type": "var",
                  "data": "i"
                },
                {
                  "type": "num",
                  "data": 4
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc -4 2 0 y2"
                      },
                      {
                        "type": "num",
                        "data": -4
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y2"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "cur"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "modes"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "i"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 30 15 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching or cur == back_mode (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n          if onclick (\n            terminal \"system wallpapermode\" + cur\n            network \"update\" \"wallpaper_mode\" cur\n          )\n        )"
                      },
                      {
                        "type": "log",
                        "data": "or",
                        "left": {
                          "type": "var",
                          "data": "mouse_touching"
                        },
                        "right": {
                          "type": "cmp",
                          "data": "==",
                          "left": {
                            "type": "var",
                            "data": "cur"
                          },
                          "right": {
                            "type": "var",
                            "data": "back_mode"
                          }
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 30 15 : c#seco"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 30 10 : c#prim"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n            terminal \"system wallpapermode\" + cur\n            network \"update\" \"wallpaper_mode\" cur\n          )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "terminal",
                                    "source": "terminal \"system wallpapermode\" + cur"
                                  },
                                  {
                                    "type": "opr",
                                    "data": "+",
                                    "left": {
                                      "type": "str",
                                      "data": "\"system wallpapermode\""
                                    },
                                    "right": {
                                      "type": "var",
                                      "data": "cur"
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "network",
                                    "source": "network \"update\" \"wallpaper_mode\" cur"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"update\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"wallpaper_mode\""
                                  },
                                  {
                                    "type": "var",
                                    "data": "cur"
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_x",
                        "source": "change_x w / -2 + 10"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": -2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 10
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text cur 10 : c#txtc"
                      },
                      {
                        "type": "var",
                        "data": "cur"
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "-=",
                        "left": {
                          "type": "var",
                          "data": "y2"
                        },
                        "right": {
                          "type": "num",
                          "data": 50
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 20 y + 105"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 105
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Current Wallpaper\" 10 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Current Wallpaper\""
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 20 y + 105"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 105
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Wallpaper Mode\" 10"
                },
                {
                  "type": "str",
                  "data": "\"Wallpaper Mode\""
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 8
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for count wallpapers.len (\n        if count % 2 == 1 (\n          y -= 230\n        )\n        if count % 2 == 1 \"loc 4 2 0 y\" else \"loc -4 2 0 y\"\n        square w 200 15 : c#prim\n        cur = wallpapers.[count]\n        image cur w 200\n        change_x -40\n        square 20 20 20 : c#prim\n        if mouse_touching (\n          if clicked.not() \"square 20 20 23\"\n          if onclick (\n            terminal \"system wallpaper\" + cur\n            network \"update\" \"wallpaper\" cur\n          )\n        )\n        icon \"tick\" 0.7 : c#txtc\n        change_x 80\n        square 20 20 20 : c#prim\n        if mouse_touching (\n          if !clicked \"square 20 20 23\"\n          if onclick (\n            wallpapers.delete(count)\n            save \"wallpapers.json\" \"set\" wallpapers\n          )\n        )\n        icon \"bin\" 0.7 : c#txtc\n      )"
                },
                {
                  "type": "var",
                  "data": "count"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "wallpapers"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if count % 2 == 1 (\n          y -= 230\n        )"
                      },
                      {
                        "type": "cmp",
                        "data": "==",
                        "left": {
                          "type": "opr",
                          "data": "%",
                          "left": {
                            "type": "var",
                            "data": "count"
                          },
                          "right": {
                            "type": "num",
                            "data": 2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 1
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "-=",
                              "left": {
                                "type": "var",
                                "data": "y"
                              },
                              "right": {
                                "type": "num",
                                "data": 230
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if count % 2 == 1 \"loc 4 2 0 y\" else \"loc -4 2 0 y\""
                      },
                      {
                        "type": "cmp",
                        "data": "==",
                        "left": {
                          "type": "opr",
                          "data": "%",
                          "left": {
                            "type": "var",
                            "data": "count"
                          },
                          "right": {
                            "type": "num",
                            "data": 2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 1
                        }
                      },
                      {
                        "type": "str",
                        "data": "\"loc 4 2 0 y\""
                      },
                      {
                        "type": "var",
                        "data": "else"
                      },
                      {
                        "type": "str",
                        "data": "\"loc -4 2 0 y\""
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 200 15 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 200
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "cur"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "wallpapers"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "count"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "image",
                        "source": "image cur w 200"
                      },
                      {
                        "type": "var",
                        "data": "cur"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 200
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_x",
                        "source": "change_x -40"
                      },
                      {
                        "type": "num",
                        "data": -40
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 20 20 20 : c#prim"
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          if clicked.not() \"square 20 20 23\"\n          if onclick (\n            terminal \"system wallpaper\" + cur\n            network \"update\" \"wallpaper\" cur\n          )\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if clicked.not() \"square 20 20 23\""
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "clicked"
                                },
                                {
                                  "type": "mtv",
                                  "data": "not",
                                  "parameters": []
                                }
                              ]
                            },
                            {
                              "type": "str",
                              "data": "\"square 20 20 23\""
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n            terminal \"system wallpaper\" + cur\n            network \"update\" \"wallpaper\" cur\n          )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "terminal",
                                    "source": "terminal \"system wallpaper\" + cur"
                                  },
                                  {
                                    "type": "opr",
                                    "data": "+",
                                    "left": {
                                      "type": "str",
                                      "data": "\"system wallpaper\""
                                    },
                                    "right": {
                                      "type": "var",
                                      "data": "cur"
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "network",
                                    "source": "network \"update\" \"wallpaper\" cur"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"update\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"wallpaper\""
                                  },
                                  {
                                    "type": "var",
                                    "data": "cur"
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"tick\" 0.7 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"tick\""
                      },
                      {
                        "type": "num",
                        "data": 0.7
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_x",
                        "source": "change_x 80"
                      },
                      {
                        "type": "num",
                        "data": 80
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 20 20 20 : c#prim"
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          if !clicked \"square 20 20 23\"\n          if onclick (\n            wallpapers.delete(count)\n            save \"wallpapers.json\" \"set\" wallpapers\n          )\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if !clicked \"square 20 20 23\""
                            },
                            {
                              "type": "var",
                              "data": "!clicked"
                            },
                            {
                              "type": "str",
                              "data": "\"square 20 20 23\""
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n            wallpapers.delete(count)\n            save \"wallpapers.json\" \"set\" wallpapers\n          )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "=??",
                                    "left": {
                                      "type": "var",
                                      "data": "wallpapers"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "wallpapers"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "delete",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "count"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "save",
                                    "source": "save \"wallpapers.json\" \"set\" wallpapers"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"wallpapers.json\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"set\""
                                  },
                                  {
                                    "type": "var",
                                    "data": "wallpapers"
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"bin\" 0.7 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"bin\""
                      },
                      {
                        "type": "num",
                        "data": 0.7
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "fnc",
                        "data": "ceil",
                        "parameters": [
                          {
                            "type": "opr",
                            "data": "/",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "wallpapers"
                                },
                                {
                                  "type": "var",
                                  "data": "len"
                                }
                              ]
                            },
                            "right": {
                              "type": "num",
                              "data": 2
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 230
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 310
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Dock\""
                },
                {
                  "type": "str",
                  "data": "\"Dock\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if new_transmit (\n        file \"open\" transmit_data \"onlyaccess\"\n        f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ fileGet(1)\n        segments.append(f)\n        network \"update\" \"origin_dock\" segments\n        new_transmit = false\n      )"
                },
                {
                  "type": "var",
                  "data": "new_transmit"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"open\" transmit_data \"onlyaccess\""
                      },
                      {
                        "type": "str",
                        "data": "\"open\""
                      },
                      {
                        "type": "var",
                        "data": "transmit_data"
                      },
                      {
                        "type": "str",
                        "data": "\"onlyaccess\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "f"
                        },
                        "right": {
                          "type": "opr",
                          "data": "++",
                          "left": {
                            "type": "opr",
                            "data": "++",
                            "left": {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "fnc",
                                "data": "fileGet",
                                "parameters": [
                                  {
                                    "type": "num",
                                    "data": 3
                                  }
                                ]
                              },
                              "right": {
                                "type": "str",
                                "data": "\"/\""
                              }
                            },
                            "right": {
                              "type": "fnc",
                              "data": "fileGet",
                              "parameters": [
                                {
                                  "type": "num",
                                  "data": 2
                                }
                              ]
                            }
                          },
                          "right": {
                            "type": "fnc",
                            "data": "fileGet",
                            "parameters": [
                              {
                                "type": "num",
                                "data": 1
                              }
                            ]
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "left": {
                          "type": "var",
                          "data": "segments"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "segments"
                            },
                            {
                              "type": "mtv",
                              "data": "append",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "f"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"origin_dock\" segments"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"origin_dock\""
                      },
                      {
                        "type": "var",
                        "data": "segments"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "new_transmit"
                        },
                        "right": {
                          "type": "var",
                          "data": false
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "width"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 25
                    }
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "num",
                      "data": -30
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 0 y"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 30 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\" 0.6 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3\""
                },
                {
                  "type": "num",
                  "data": 0.6
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Reset Dock To Default\" 9 : chx#20"
                },
                {
                  "type": "str",
                  "data": "\"Reset Dock To Default\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 20
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if clicked (\n        segments = [\n          \"Origin/(A) System/Docks/Modules/main.ode\",\n          \"Origin/(A) System/Docks/Modules/applications.ode\",\n          \"Origin/(A) System/Docks/Modules/running.ode\",\n          \"Origin/(A) System/Docks/Modules/folders.ode\",\n          \"Origin/(A) System/Docks/Modules/time.ode\",\n          \"Origin/(A) System/Docks/Modules/battery.ode\"\n        ]\n        network \"update\" \"origin_dock\" segments\n      )"
                },
                {
                  "type": "var",
                  "data": "clicked"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "segments"
                        },
                        "right": {
                          "type": "arr",
                          "data": [
                            {
                              "type": "str",
                              "data": "\"Origin/(A) System/Docks/Modules/main.ode\""
                            },
                            {
                              "type": "str",
                              "data": "\"Origin/(A) System/Docks/Modules/applications.ode\""
                            },
                            {
                              "type": "str",
                              "data": "\"Origin/(A) System/Docks/Modules/running.ode\""
                            },
                            {
                              "type": "str",
                              "data": "\"Origin/(A) System/Docks/Modules/folders.ode\""
                            },
                            {
                              "type": "str",
                              "data": "\"Origin/(A) System/Docks/Modules/time.ode\""
                            },
                            {
                              "type": "str",
                              "data": "\"Origin/(A) System/Docks/Modules/battery.ode\""
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"origin_dock\" segments"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"origin_dock\""
                      },
                      {
                        "type": "var",
                        "data": "segments"
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if file_dropped != 0 (\n        file \"open\" file_dropped \"onlyaccess\"\n        data = fileGet(1)\n        if data == \".ode\" (\n          f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ data\n          void segments.append(f)\n          network \"update\" \"origin_dock\" segments\n        )\n        file_dropped = 0\n      )"
                },
                {
                  "type": "cmp",
                  "data": "!=",
                  "left": {
                    "type": "var",
                    "data": "file_dropped"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"open\" file_dropped \"onlyaccess\""
                      },
                      {
                        "type": "str",
                        "data": "\"open\""
                      },
                      {
                        "type": "var",
                        "data": "file_dropped"
                      },
                      {
                        "type": "str",
                        "data": "\"onlyaccess\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "data"
                        },
                        "right": {
                          "type": "fnc",
                          "data": "fileGet",
                          "parameters": [
                            {
                              "type": "num",
                              "data": 1
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if data == \".ode\" (\n          f = fileGet(3) ++ \"/\" ++ fileGet(2) ++ data\n          void segments.append(f)\n          network \"update\" \"origin_dock\" segments\n        )"
                      },
                      {
                        "type": "cmp",
                        "data": "==",
                        "left": {
                          "type": "var",
                          "data": "data"
                        },
                        "right": {
                          "type": "str",
                          "data": "\".ode\""
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "f"
                              },
                              "right": {
                                "type": "opr",
                                "data": "++",
                                "left": {
                                  "type": "opr",
                                  "data": "++",
                                  "left": {
                                    "type": "opr",
                                    "data": "++",
                                    "left": {
                                      "type": "fnc",
                                      "data": "fileGet",
                                      "parameters": [
                                        {
                                          "type": "num",
                                          "data": 3
                                        }
                                      ]
                                    },
                                    "right": {
                                      "type": "str",
                                      "data": "\"/\""
                                    }
                                  },
                                  "right": {
                                    "type": "fnc",
                                    "data": "fileGet",
                                    "parameters": [
                                      {
                                        "type": "num",
                                        "data": 2
                                      }
                                    ]
                                  }
                                },
                                "right": {
                                  "type": "var",
                                  "data": "data"
                                }
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "void",
                              "source": "void segments.append(f)"
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "segments"
                                },
                                {
                                  "type": "mtv",
                                  "data": "append",
                                  "parameters": [
                                    {
                                      "type": "var",
                                      "data": "f"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "network",
                              "source": "network \"update\" \"origin_dock\" segments"
                            },
                            {
                              "type": "str",
                              "data": "\"update\""
                            },
                            {
                              "type": "str",
                              "data": "\"origin_dock\""
                            },
                            {
                              "type": "var",
                              "data": "segments"
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "file_dropped"
                        },
                        "right": {
                          "type": "num",
                          "data": 0
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 0 y - 50"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n        file \"pick\" \"ode\"\n        can = false\n      )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"pick\" \"ode\""
                      },
                      {
                        "type": "str",
                        "data": "\"pick\""
                      },
                      {
                        "type": "str",
                        "data": "\"ode\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "can"
                        },
                        "right": {
                          "type": "var",
                          "data": false
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 30 y - 50"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"upload\" 0.7 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"upload\""
                },
                {
                  "type": "num",
                  "data": 0.7
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Click here or drop an ode file to add it to your dock\" 9 : chx#20"
                },
                {
                  "type": "str",
                  "data": "\"Click here or drop an ode file to add it to your dock\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 20
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for count segments.len (\n        y = count + 2 * -50 + scroll_y\n        loc 999 2 0 y\n        w = frame_width - 25\n        square w 30 15 : c#prim\n        if mouse_touching (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n        )\n        loc 2 2 15 y\n        text segments.[count] 9 : c#txtc\n        loc -2 2 -28 y\n        square 30 30 10 0 1\n        if mouse_touching (\n          square 30 30 15 : c#seco\n          square 30 30 10 : c#prim\n          if onclick (\n            segments.delete(count)\n            network \"update\" \"origin_dock\" segments\n          )\n        )\n        icon \"bin\" 0.8 : c#txtc\n        change_x -45\n        if count > 1 (\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count - 1,count)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"up\" 0.8 : c#txtc\n        )\n        if count < segments.len (\n          change_x -45\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count,count + 1)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"down\" 0.8 : c#txtc\n        )\n      )"
                },
                {
                  "type": "var",
                  "data": "count"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "segments"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "var",
                                "data": "count"
                              },
                              "right": {
                                "type": "num",
                                "data": 2
                              }
                            },
                            "right": {
                              "type": "num",
                              "data": -50
                            }
                          },
                          "right": {
                            "type": "var",
                            "data": "scroll_y"
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 999 2 0 y"
                      },
                      {
                        "type": "num",
                        "data": 999
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "w"
                        },
                        "right": {
                          "type": "opr",
                          "data": "-",
                          "left": {
                            "type": "var",
                            "data": "frame_width"
                          },
                          "right": {
                            "type": "num",
                            "data": 25
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 30 15 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          square w 30 15 : c#seco\n          square w 30 10 : c#prim\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 30 15 : c#seco"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 30 10 : c#prim"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 15 y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text segments.[count] 9 : c#txtc"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "segments"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "count"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc -2 2 -28 y"
                      },
                      {
                        "type": "num",
                        "data": -2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": -28
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 30 30 10 0 1"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "num",
                        "data": 1
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          square 30 30 15 : c#seco\n          square 30 30 10 : c#prim\n          if onclick (\n            segments.delete(count)\n            network \"update\" \"origin_dock\" segments\n          )\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 30 30 15 : c#seco"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 30 30 10 : c#prim"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n            segments.delete(count)\n            network \"update\" \"origin_dock\" segments\n          )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "=??",
                                    "left": {
                                      "type": "var",
                                      "data": "segments"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "segments"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "delete",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "count"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "network",
                                    "source": "network \"update\" \"origin_dock\" segments"
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"update\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"origin_dock\""
                                  },
                                  {
                                    "type": "var",
                                    "data": "segments"
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"bin\" 0.8 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"bin\""
                      },
                      {
                        "type": "num",
                        "data": 0.8
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_x",
                        "source": "change_x -45"
                      },
                      {
                        "type": "num",
                        "data": -45
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if count > 1 (\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count - 1,count)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"up\" 0.8 : c#txtc\n        )"
                      },
                      {
                        "type": "cmp",
                        "data": ">",
                        "left": {
                          "type": "var",
                          "data": "count"
                        },
                        "right": {
                          "type": "num",
                          "data": 1
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 30 30 15 0 1"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 1
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count - 1,count)\n              network \"update\" \"origin_dock\" segments\n            )\n          )"
                            },
                            {
                              "type": "var",
                              "data": "mouse_touching"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square 30 30 15 : c#seco"
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 15
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "seco"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square 30 30 10 : c#prim"
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 10
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "prim"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "if",
                                    "source": "if onclick (\n              segments.swap(count - 1,count)\n              network \"update\" \"origin_dock\" segments\n            )"
                                  },
                                  {
                                    "type": "var",
                                    "data": "onclick"
                                  },
                                  {
                                    "type": "blk",
                                    "data": [
                                      [
                                        {
                                          "type": "asi",
                                          "data": "=??",
                                          "left": {
                                            "type": "var",
                                            "data": "segments"
                                          },
                                          "right": {
                                            "type": "mtd",
                                            "data": [
                                              {
                                                "type": "var",
                                                "data": "segments"
                                              },
                                              {
                                                "type": "mtv",
                                                "data": "swap",
                                                "parameters": [
                                                  {
                                                    "type": "opr",
                                                    "data": "-",
                                                    "left": {
                                                      "type": "var",
                                                      "data": "count"
                                                    },
                                                    "right": {
                                                      "type": "num",
                                                      "data": 1
                                                    }
                                                  },
                                                  {
                                                    "type": "var",
                                                    "data": "count"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      [
                                        {
                                          "type": "cmd",
                                          "data": "network",
                                          "source": "network \"update\" \"origin_dock\" segments"
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"update\""
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"origin_dock\""
                                        },
                                        {
                                          "type": "var",
                                          "data": "segments"
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "icon",
                              "source": "icon \"up\" 0.8 : c#txtc"
                            },
                            {
                              "type": "str",
                              "data": "\"up\""
                            },
                            {
                              "type": "num",
                              "data": 0.8
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if count < segments.len (\n          change_x -45\n          square 30 30 15 0 1\n          if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count,count + 1)\n              network \"update\" \"origin_dock\" segments\n            )\n          )\n          icon \"down\" 0.8 : c#txtc\n        )"
                      },
                      {
                        "type": "cmp",
                        "data": "<",
                        "left": {
                          "type": "var",
                          "data": "count"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "segments"
                            },
                            {
                              "type": "var",
                              "data": "len"
                            }
                          ]
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "change_x",
                              "source": "change_x -45"
                            },
                            {
                              "type": "num",
                              "data": -45
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 30 30 15 0 1"
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 30
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "num",
                              "data": 1
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if mouse_touching (\n            square 30 30 15 : c#seco\n            square 30 30 10 : c#prim\n            if onclick (\n              segments.swap(count,count + 1)\n              network \"update\" \"origin_dock\" segments\n            )\n          )"
                            },
                            {
                              "type": "var",
                              "data": "mouse_touching"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square 30 30 15 : c#seco"
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 15
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "seco"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "square",
                                    "source": "square 30 30 10 : c#prim"
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 30
                                  },
                                  {
                                    "type": "num",
                                    "data": 10
                                  },
                                  {
                                    "type": "mod",
                                    "data": [
                                      "c",
                                      {
                                        "type": "var",
                                        "data": "prim"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "if",
                                    "source": "if onclick (\n              segments.swap(count,count + 1)\n              network \"update\" \"origin_dock\" segments\n            )"
                                  },
                                  {
                                    "type": "var",
                                    "data": "onclick"
                                  },
                                  {
                                    "type": "blk",
                                    "data": [
                                      [
                                        {
                                          "type": "asi",
                                          "data": "=??",
                                          "left": {
                                            "type": "var",
                                            "data": "segments"
                                          },
                                          "right": {
                                            "type": "mtd",
                                            "data": [
                                              {
                                                "type": "var",
                                                "data": "segments"
                                              },
                                              {
                                                "type": "mtv",
                                                "data": "swap",
                                                "parameters": [
                                                  {
                                                    "type": "var",
                                                    "data": "count"
                                                  },
                                                  {
                                                    "type": "opr",
                                                    "data": "+",
                                                    "left": {
                                                      "type": "var",
                                                      "data": "count"
                                                    },
                                                    "right": {
                                                      "type": "num",
                                                      "data": 1
                                                    }
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      [
                                        {
                                          "type": "cmd",
                                          "data": "network",
                                          "source": "network \"update\" \"origin_dock\" segments"
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"update\""
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"origin_dock\""
                                        },
                                        {
                                          "type": "var",
                                          "data": "segments"
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "icon",
                              "source": "icon \"down\" 0.8 : c#txtc"
                            },
                            {
                              "type": "str",
                              "data": "\"down\""
                            },
                            {
                              "type": "num",
                              "data": 0.8
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "opr",
                      "data": "+",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "segments"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 2
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 60
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"windows\""
                },
                {
                  "type": "str",
                  "data": "\"windows\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 frame.top + scroll_y - 30"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 30
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Show Window Outline\" w user.theme.show_outline != false def() -> (\n        local theme = user.theme\n        theme.show_outline = theme.show_outline == false\n        network \"update\" \"theme\" theme\n      )"
                },
                {
                  "type": "str",
                  "data": "\"Show Window Outline\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "cmp",
                  "data": "!=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "var",
                        "data": "theme"
                      },
                      {
                        "type": "var",
                        "data": "show_outline"
                      }
                    ]
                  },
                  "right": {
                    "type": "var",
                    "data": false
                  }
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "this"
                                },
                                {
                                  "type": "var",
                                  "data": "theme"
                                }
                              ]
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "user"
                                },
                                {
                                  "type": "var",
                                  "data": "theme"
                                }
                              ]
                            }
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "theme"
                                },
                                {
                                  "type": "var",
                                  "data": "show_outline"
                                }
                              ]
                            },
                            "right": {
                              "type": "cmp",
                              "data": "==",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "theme"
                                  },
                                  {
                                    "type": "var",
                                    "data": "show_outline"
                                  }
                                ]
                              },
                              "right": {
                                "type": "var",
                                "data": false
                              }
                            }
                          }
                        ],
                        [
                          {
                            "type": "cmd",
                            "data": "network",
                            "source": "network \"update\" \"theme\" theme"
                          },
                          {
                            "type": "str",
                            "data": "\"update\""
                          },
                          {
                            "type": "str",
                            "data": "\"theme\""
                          },
                          {
                            "type": "var",
                            "data": "theme"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"Colours\""
                },
                {
                  "type": "str",
                  "data": "\"Colours\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if typeof(theme_select) != \"object\" (\n        window_accent = global_accent\n        theme_select = user.theme\n      )"
                },
                {
                  "type": "cmp",
                  "data": "!=",
                  "left": {
                    "type": "fnc",
                    "data": "typeof",
                    "parameters": [
                      {
                        "type": "var",
                        "data": "theme_select"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"object\""
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "window_accent"
                        },
                        "right": {
                          "type": "var",
                          "data": "global_accent"
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "theme_select"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "user"
                            },
                            {
                              "type": "var",
                              "data": "theme"
                            }
                          ]
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "num",
                      "data": -30
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colour_selector",
                  "source": "colour_selector \"Accent Colour\" \"accent\""
                },
                {
                  "type": "str",
                  "data": "\"Accent Colour\""
                },
                {
                  "type": "str",
                  "data": "\"accent\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 70
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colour_selector",
                  "source": "colour_selector \"Window Background\" \"background\""
                },
                {
                  "type": "str",
                  "data": "\"Window Background\""
                },
                {
                  "type": "str",
                  "data": "\"background\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colour_selector",
                  "source": "colour_selector \"Window Primary\" \"primary\""
                },
                {
                  "type": "str",
                  "data": "\"Window Primary\""
                },
                {
                  "type": "str",
                  "data": "\"primary\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colour_selector",
                  "source": "colour_selector \"Window Secondary\" \"secondary\""
                },
                {
                  "type": "str",
                  "data": "\"Window Secondary\""
                },
                {
                  "type": "str",
                  "data": "\"secondary\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colour_selector",
                  "source": "colour_selector \"Window Tertiary\" \"tertiary\""
                },
                {
                  "type": "str",
                  "data": "\"Window Tertiary\""
                },
                {
                  "type": "str",
                  "data": "\"tertiary\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "colour_selector",
                  "source": "colour_selector \"Window Text And Icons\" \"text\""
                },
                {
                  "type": "str",
                  "data": "\"Window Text And Icons\""
                },
                {
                  "type": "str",
                  "data": "\"text\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "switch",
                  "source": "switch selected_col (\n        case \"accent\"\n          window_accent = picker_colour\n          break\n        case \"background\"\n          window_colour = picker_colour\n          break\n        case \"primary\"\n          prim = picker_colour\n          break\n        case \"secondary\"\n          seco = picker_colour\n          break\n        case \"tertiary\"\n          tert = picker_colour\n          break\n        case \"text\"\n          txtc = picker_colour\n          break\n      )"
                },
                {
                  "type": "var",
                  "data": "selected_col"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "case",
                        "source": "case \"accent\""
                      },
                      {
                        "type": "str",
                        "data": "\"accent\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "window_accent"
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "break",
                        "source": "break"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "case",
                        "source": "case \"background\""
                      },
                      {
                        "type": "str",
                        "data": "\"background\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "window_colour"
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "break",
                        "source": "break"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "case",
                        "source": "case \"primary\""
                      },
                      {
                        "type": "str",
                        "data": "\"primary\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "prim"
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "break",
                        "source": "break"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "case",
                        "source": "case \"secondary\""
                      },
                      {
                        "type": "str",
                        "data": "\"secondary\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "seco"
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "break",
                        "source": "break"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "case",
                        "source": "case \"tertiary\""
                      },
                      {
                        "type": "str",
                        "data": "\"tertiary\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "tert"
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "break",
                        "source": "break"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "case",
                        "source": "case \"text\""
                      },
                      {
                        "type": "str",
                        "data": "\"text\""
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "txtc"
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "break",
                        "source": "break"
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if selected_col != \"\" (\n        theme_select.[selected_col] = picker_colour\n      )"
                },
                {
                  "type": "cmp",
                  "data": "!=",
                  "left": {
                    "type": "var",
                    "data": "selected_col"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"\""
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "theme_select"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "selected_col"
                                }
                              ]
                            }
                          ]
                        },
                        "right": {
                          "type": "var",
                          "data": "picker_colour"
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 9999 2 0 y"
                },
                {
                  "type": "num",
                  "data": 9999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "width"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 25
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 30 15 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_touching (\n        if onclick (\n          network \"update\" \"theme\" theme_select\n        )\n        square w 30 15 : c#seco\n        square w 30 10 : c#prim\n      )"
                },
                {
                  "type": "var",
                  "data": "mouse_touching"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if onclick (\n          network \"update\" \"theme\" theme_select\n        )"
                      },
                      {
                        "type": "var",
                        "data": "onclick"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "network",
                              "source": "network \"update\" \"theme\" theme_select"
                            },
                            {
                              "type": "str",
                              "data": "\"update\""
                            },
                            {
                              "type": "str",
                              "data": "\"theme\""
                            },
                            {
                              "type": "var",
                              "data": "theme_select"
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 30 15 : c#seco"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 30 10 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 30 y"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 30
                },
                {
                  "type": "var",
                  "data": "y"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"save\" 0.7 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"save\""
                },
                {
                  "type": "num",
                  "data": 0.7
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Save And Apply Theme\" 9 : chx#30"
                },
                {
                  "type": "str",
                  "data": "\"Save And Apply Theme\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 30
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "-=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 80
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "each",
                  "source": "each theme themes.getKeys() (\n        loc 9999 2 0 y\n        square w 30 15 : c#prim\n        if mouse_touching (\n          if onclick (\n            theme_select = themes.[theme]\n            selected_col = \"\"\n            \n            prim = theme_select.primary\n            seco = theme_select.secondary\n            tert = theme_select.tertiary\n            txtc = theme_select.text\n            window_colour = theme_select.background\n            window_accent = global_accent\n          )\n        )\n        loc 2 2 30 y\n        text theme 10 : c#txtc\n        y -= 50\n      )"
                },
                {
                  "type": "var",
                  "data": "theme"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "themes"
                    },
                    {
                      "type": "mtv",
                      "data": "getKeys",
                      "parameters": []
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 9999 2 0 y"
                      },
                      {
                        "type": "num",
                        "data": 9999
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 30 15 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          if onclick (\n            theme_select = themes.[theme]\n            selected_col = \"\"\n            \n            prim = theme_select.primary\n            seco = theme_select.secondary\n            tert = theme_select.tertiary\n            txtc = theme_select.text\n            window_colour = theme_select.background\n            window_accent = global_accent\n          )\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n            theme_select = themes.[theme]\n            selected_col = \"\"\n            \n            prim = theme_select.primary\n            seco = theme_select.secondary\n            tert = theme_select.tertiary\n            txtc = theme_select.text\n            window_colour = theme_select.background\n            window_accent = global_accent\n          )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "theme_select"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "themes"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "var",
                                              "data": "theme"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "selected_col"
                                    },
                                    "right": {
                                      "type": "str",
                                      "data": "\"\""
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "prim"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "theme_select"
                                        },
                                        {
                                          "type": "var",
                                          "data": "primary"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "seco"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "theme_select"
                                        },
                                        {
                                          "type": "var",
                                          "data": "secondary"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "tert"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "theme_select"
                                        },
                                        {
                                          "type": "var",
                                          "data": "tertiary"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "txtc"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "theme_select"
                                        },
                                        {
                                          "type": "var",
                                          "data": "text"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "window_colour"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "theme_select"
                                        },
                                        {
                                          "type": "var",
                                          "data": "background"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "var",
                                      "data": "window_accent"
                                    },
                                    "right": {
                                      "type": "var",
                                      "data": "global_accent"
                                    }
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 30 y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text theme 10 : c#txtc"
                      },
                      {
                        "type": "var",
                        "data": "theme"
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "-=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "num",
                          "data": 50
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "num",
                      "data": 380
                    },
                    "right": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "themes"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 50
                      }
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"File Types\""
                },
                {
                  "type": "str",
                  "data": "\"File Types\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for count ftkeys.len (\n        y = count * -60 + scroll_y + 30\n        \n        loc 999 2 0 y\n        square frame.width - 20 40 10 : c#prim\n        if mouse_touching (\n          square frame.width - 20 40 10 : c#seco\n          square frame.width - 20 40 5 : c#prim\n        )\n        \n        loc 2 2 30 y\n        square 40 40 10 : c#seco\n        square 40 40 5 : c#prim\n        \n        ftv @= ftvalues.[count]\n        icon ftv.[1] 1 : c#txtc\n        text ftv.[2] + \"(\" ++ ftkeys.[count] ++ \")\" 9 : chx#35 : c#txtc\n      )"
                },
                {
                  "type": "var",
                  "data": "count"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "ftkeys"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "+",
                            "left": {
                              "type": "opr",
                              "data": "*",
                              "left": {
                                "type": "var",
                                "data": "count"
                              },
                              "right": {
                                "type": "num",
                                "data": -60
                              }
                            },
                            "right": {
                              "type": "var",
                              "data": "scroll_y"
                            }
                          },
                          "right": {
                            "type": "num",
                            "data": 30
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 999 2 0 y"
                      },
                      {
                        "type": "num",
                        "data": 999
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square frame.width - 20 40 10 : c#prim"
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "frame"
                            },
                            {
                              "type": "var",
                              "data": "width"
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n          square frame.width - 20 40 10 : c#seco\n          square frame.width - 20 40 5 : c#prim\n        )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square frame.width - 20 40 10 : c#seco"
                            },
                            {
                              "type": "opr",
                              "data": "-",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "frame"
                                  },
                                  {
                                    "type": "var",
                                    "data": "width"
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 20
                              }
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square frame.width - 20 40 5 : c#prim"
                            },
                            {
                              "type": "opr",
                              "data": "-",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "frame"
                                  },
                                  {
                                    "type": "var",
                                    "data": "width"
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 20
                              }
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 5
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 30 y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 40 40 10 : c#seco"
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 40 40 5 : c#prim"
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 5
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "@=",
                        "left": {
                          "type": "var",
                          "data": "ftv"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "ftvalues"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "count"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon ftv.[1] 1 : c#txtc"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "ftv"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "num",
                                "data": 1
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 1
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text ftv.[2] + \"(\" ++ ftkeys.[count] ++ \")\" 9 : chx#35 : c#txtc"
                      },
                      {
                        "type": "opr",
                        "data": "++",
                        "left": {
                          "type": "opr",
                          "data": "++",
                          "left": {
                            "type": "opr",
                            "data": "+",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "ftv"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "num",
                                      "data": 2
                                    }
                                  ]
                                }
                              ]
                            },
                            "right": {
                              "type": "str",
                              "data": "\"(\""
                            }
                          },
                          "right": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "ftkeys"
                              },
                              {
                                "type": "mtv",
                                "data": "item",
                                "parameters": [
                                  {
                                    "type": "var",
                                    "data": "count"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "right": {
                          "type": "str",
                          "data": "\")\""
                        }
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chx",
                          {
                            "type": "num",
                            "data": 35
                          }
                        ]
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "var",
                      "data": "count"
                    },
                    "right": {
                      "type": "num",
                      "data": 60
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "case",
                  "source": "case \"mouse\""
                },
                {
                  "type": "str",
                  "data": "\"mouse\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -20"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "num",
                  "data": -20
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Scroll Wheel Speed\" 12 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Scroll Wheel Speed\""
                },
                {
                  "type": "num",
                  "data": 12
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "terminal",
                  "source": "terminal \"get scrollspeed\""
                },
                {
                  "type": "str",
                  "data": "\"get scrollspeed\""
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "data"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "data"
                      },
                      {
                        "type": "mtv",
                        "data": "toNum",
                        "parameters": []
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "flipped"
                  },
                  "right": {
                    "type": "var",
                    "data": false
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if data < 0 (\n        data *= -1\n        flipped = true\n      )"
                },
                {
                  "type": "cmp",
                  "data": "<",
                  "left": {
                    "type": "var",
                    "data": "data"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "*=",
                        "left": {
                          "type": "var",
                          "data": "data"
                        },
                        "right": {
                          "type": "num",
                          "data": -1
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "flipped"
                        },
                        "right": {
                          "type": "var",
                          "data": true
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "slider_scrollsp"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "data"
                      },
                      {
                        "type": "mtv",
                        "data": "clamp",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1
                          },
                          {
                            "type": "num",
                            "data": 10
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -90"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "num",
                  "data": -90
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Scrolling \" ++ (round(slider_scrollsp * 10) / 10) ++ \"x speed\" 9 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "str",
                      "data": "\"Scrolling \""
                    },
                    "right": {
                      "type": "opr",
                      "data": "/",
                      "left": {
                        "type": "fnc",
                        "data": "round",
                        "parameters": [
                          {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "var",
                              "data": "slider_scrollsp"
                            },
                            "right": {
                              "type": "num",
                              "data": 10
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 10
                      }
                    }
                  },
                  "right": {
                    "type": "str",
                    "data": "\"x speed\""
                  }
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "slider_scrollsp"
                  },
                  "right": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "opr",
                      "data": "-",
                      "left": {
                        "type": "var",
                        "data": "slider_scrollsp"
                      },
                      "right": {
                        "type": "num",
                        "data": 1
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 9
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 999 2 0 -60"
                },
                {
                  "type": "num",
                  "data": 999
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "num",
                  "data": -60
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "slider",
                  "source": "slider w 25 \"scrollsp\" 10 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 25
                },
                {
                  "type": "str",
                  "data": "\"scrollsp\""
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "slider_scrollsp"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "var",
                        "data": "slider_scrollsp"
                      },
                      "right": {
                        "type": "num",
                        "data": 9
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 1
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -90"
                },
                {
                  "type": "num",
                  "data": -90
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Invert Scroll Direction\" w flipped def() -> (\n        flipped = flipped.not()\n      )"
                },
                {
                  "type": "str",
                  "data": "\"Invert Scroll Direction\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "var",
                  "data": "flipped"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "left": {
                              "type": "var",
                              "data": "flipped"
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "flipped"
                                },
                                {
                                  "type": "mtv",
                                  "data": "not",
                                  "parameters": []
                                }
                              ]
                            }
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if flipped (\n        slider_scrollsp *= -1\n      )"
                },
                {
                  "type": "var",
                  "data": "flipped"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "*=",
                        "left": {
                          "type": "var",
                          "data": "slider_scrollsp"
                        },
                        "right": {
                          "type": "num",
                          "data": -1
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "terminal",
                  "source": "terminal \"system scrollspeed\" + slider_scrollsp"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "str",
                    "data": "\"system scrollspeed\""
                  },
                  "right": {
                    "type": "var",
                    "data": "slider_scrollsp"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if slider_scrollsp != user.scrollspeed and mouse_down.not() (\n        network \"update\" \"scrollspeed\" slider_scrollsp\n      )"
                },
                {
                  "type": "log",
                  "data": "and",
                  "left": {
                    "type": "cmp",
                    "data": "!=",
                    "left": {
                      "type": "var",
                      "data": "slider_scrollsp"
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "user"
                        },
                        {
                          "type": "var",
                          "data": "scrollspeed"
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "mouse_down"
                      },
                      {
                        "type": "mtv",
                        "data": "not",
                        "parameters": []
                      }
                    ]
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"scrollspeed\" slider_scrollsp"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"scrollspeed\""
                      },
                      {
                        "type": "var",
                        "data": "slider_scrollsp"
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "break",
                  "source": "break"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "frame",
            "source": "frame \"clear\""
          },
          {
            "type": "str",
            "data": "\"clear\""
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"account\" (\n  local w = frame.width - 100\n  page_len = 500\n  \n  goto 0 frame.top - 50 + scroll_y\n  \n  if subcategory == \"backups\" (\n    page_len = 0\n    each this.backup user.[\"sys.backups\"] (\n      if backup.isType(\"object\") (\n        page_len += 50\n        setting_do backup.name + \"(\" ++ (backup.size / 1000).round() ++ \"kb)\" w def(id) -> (\n          if \"Restore this backup?\".confirm() (\n            network \"server\" \"restore_backup\" id\n          )\n        ) backup.id\n        set_x 0 : chy#-50\n      )\n    )\n    return\n  )\n  \n  if subcategory == \"banners\" (\n    page_len = 0\n    goto 0 frame.top - 110 + scroll_y\n    square w 200 10 : c#prim\n    c seco\n    square 50 50 20\n    if mouse_touching (\n      cursor \"pointer\"\n      if onclick (\n        if user.[\"sys.currency\"] >= 10 (\n          local url = \"Paste the url of an image to use as your banner\".ask()\n          if url.startsWith(\"https://\") (\n            network \"update\" \"banner\" url\n          ) else if url == \"\" (\n            say \"Banner purchase aborted\"\n          ) else (\n            say \"Url must start with https\"\n          )\n        ) else (\n          say \"You do not have enough credits for this\"\n        )\n      )\n    )\n    c txtc\n    icon \"add\" 1.5\n    change_y 50\n    centext \"Add New Banner\" 10\n    change_y -100\n    centext \"Cost: 10 credits\" 10\n    change_y -20\n    centext \"You have \" ++ user.[\"sys.currency\"] ++ \" credits\" 10\n    \n    change_y -60\n    if user.[\"sys.banners\"].len == 0 (\n      centext \"No previous banners\" 10\n    ) else (\n      centext \"Previous 5 banners, switch to these for free\" 10\n    )\n    change_y 100\n\n    banners = user.[\"sys.banners\"]\n    y = y_position - (100 + (w / 6)) - 20\n    \n    each banner banners (\n      goto 0 y\n      square w w / 3 10 : c#prim\n      image banner w w / 3\n      change w / 2 - 30 w / 6 - 30\n      square 30 30 15 : c#prim\n      if onclick (\n        network \"update\" \"banner\" banner\n      )\n      icon \"tick\" 0.8 : c#txtc\n      y -= w / 3 + 20\n    )\n    page_len = (w / 3 + 20) * banners.len + 250\n    return\n  )\n  \n  if subcategory == \"connections\" (\n    /*\n    local links = user.[\"sys.links\"]\n    if links.contains(\"github\") and github_data == \"Loading\" (\n      github_data = (\"https://api.github.com/user/\" ++ links.github.id).getAsync()\n    )\n    setting_do \"Github: \" ++ (links.contains(\"github\") ? github_data.login \"Click To Link\") w def() -> (\n      network \"server\" \"link\" {\n        service: \"github\",\n        username: \"What is your github username?\".ask()\n      }\n    )\n    */\n    page_len = 50\n    goto 0 frame.top + scroll_y + 25\n    \n    set_x 0 : chy#-50\n    setting_do \"Change Email (\" ++ user.email ++ \")\" w def() -> (\n      network \"update\" \"email\" \"Enter Your New Email\".ask()\n    )\n    \n    return\n  )\n  \n  if subcategory == \"Subscriptions\" (\n    page_len = -40\n    if typeof(subscriptions) != \"array\" (\n      goto 0 frame.top - 60 + scroll_y\n      centext \"Fetching Subscriptions\" 10 : c#txtc\n      \n      data = (\"https://social.rotur.dev/keys/mine?auth=\" ++ roturToken()).getAsync()\n      if data != \"Loading\" (\n        subscriptions = data.filter(v -> (v.[\"type\"] == \"subscription\"))\n      )\n    ) else (\n      goto 0 frame.top - 60 + scroll_y\n      if subscriptions.len == 0 (\n        centext \"You have no subscriptions\" 10 : c#txtc\n      )\n     \n      for i subscriptions.len (\n        cur @= subscriptions.[i]\n        x = x_position\n        y = y_position\n        square w 100 10 : c#prim\n        change w / -2 + 10 30\n        text cur.name ?? cur.id ++ \"\\n\" 10 : c#txtc\n        text \"by: \" ++ cur.creator ++ \"\\n\" 10\n        text \"price (credits): \" ++ cur.price ++ \" per \" ++ cur.subscription.frequency ++ \" \" ++ cur.subscription.period 10\n        goto x y\n        change w / 2 - 70\n        square 100 40 10 : c#seco\n        if onclick (\n          if (\"Are you sure you want to cancel '\" ++ cur.name ++ \"'?\").confirm() (\n            void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()\n            subscriptions = \"\"\n          )\n        )\n        centext \"Cancel\" 10 : c#txtc\n        goto x y\n        change_y -120\n        page_len += 120\n      )\n    )\n    return\n  )\n  \n  if subcategory == \"Privacy\" (\n    page_len = 500\n    setting_toggle \"Private Account?\" w user.private def() -> (\n      network \"update\" \"private\" user.private.not\n    )\n    set_x 0 : chy#-50\n    centext \"Public Data:\" 10 : c#txtc\n    local items = {\n      \"username\": \"username\",\n      \"profile picture\": \"pfp\",\n      \"banner\": \"sys.banner\",\n      \"bio\": \"bio\",\n      \"theming and colours\": \"theme\",\n      \"rotur credit total\": \"sys.currency\",\n      \"your rotur operating system\": \"system\",\n      \"account creation date\": \"created\"\n    }\n    change_y -50\n    local names = items.getKeys()\n    local keys = items.getValues()\n    for i names.len (\n      square w 30 10 : c#prim\n      set_x w / -2 + 10\n      text names.[i].toTitle() 10 : c#txtc tooltip#keys.[i]\n      set_x 0 : chy#-50\n    )\n    return\n  )\n  \n  goto 0 frame.top - (w / 6) - 10 + scroll_y\n  square w w / 3 10 : c#prim\n  effect \"transparency\" 70\n  image user.banner ++ \"?radius=10\" w w / 3\n  effect \"clear\"\n  page_len += w / 3\n  \n  local pfp_s = w / 3 - 30\n  change_x w / -2 + (pfp_s / 2) + 15\n  image pfp pfp_s pfp_s\n  if timer - upload_time < 5 and current_pfp != \"\" (\n    direction timer * 300\n    icon \"cutcircle 0 0 10 0 90\" 1 : c#txtc\n    direction 90\n  ) else (\n    if mouse_touching (\n      if clicked (\n        current_pfp = clipboard.toStr()\n        upload_time = timer\n      )\n      change_y 20\n      square 25 25 12 : c#seco\n      icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc\n      \n      square 81 10 20 : chy#-40 c#seco\n      centext \"Paste Url\" 9 : c#txtc\n      change_y 20\n    )\n  )\n  \n  local pos = [x_position + (pfp_s / 2) + 30, y_position + 15]\n  goto pos\n  \n  text username ++ \"\\n\" 15 : c#txtc\n  \n  text user.system + \"Account\" 10\n  \n  loc -2 2 -70 -30 + scroll_y\n  icon \"edit\" 0.8\n  if onclick (\n    subcategory = \"Banners\"\n  )\n  \n  if current_pfp != \"\" (\n    image current_pfp 0 0\n    if timer - upload_time > 5 (\n      current_pfp = \"\"\n      say \"Failed to load pfp, try a different   website or try again\"\n    )\n    if current_pfp.imageinfo(\"loaded\") (\n      network \"update\" \"pfp\" current_pfp\n      current_pfp = \"\"\n    )\n  )\n  local all_badges = System().badges ?? {}\n  if all_badges.istype(\"object\") (\n    user_badges = user.[\"sys.badges\"]\n    local w2 = user_badges.len * 30\n    pos.[1] += username.len * 10\n    goto pos.[1] + 35 + (w2 * .5) pos.[2]\n    square w2 - 5 25 10 : c#prim\n    goto pos.[1] + 50 pos.[2]\n    each badge user_badges (\n      icon all_badges.[badge].icon 1.2 : tooltip#badge\n      if onclick (\n        say all_badges.[badge].description\n      )\n      change_x 30\n    )\n  )\n  \n  local bio_data = inputs.bio.join(\"\\n\")\n  \n  goto w / -2 frame.top - (w / 3) - 70 + scroll_y\n  text \"Bio (\" ++ bio_data.len ++ \"/200)\" 10 : c#txtc\n  \n  if bio_data != user.bio (\n    set_x w / 2 - 10\n    icon \"save\" 0.7\n    if onclick (\n      network \"update\" \"bio\" inputs.bio.join(\"\\n\").strip()\n    )\n  )\n  \n  set_x 0 : chy#-70\n  textbox w 100 \"bio\" 10 {\n    bg_colour: prim,\n    line_numbers: false\n  }\n  \n  set_x 0 : chy#-100\n  setting_do \"Change Password\" w def() -> (\n    network \"update\" \"password\" \"Enter Your New Password\".ask().hashMD5()\n  )\n  \n  change_y -20\n  \n  set_x 0 : chy#-50\n  setting_do \"Privacy\" w def() -> (\n    subcategory = \"Privacy\"\n  )\n  \n  set_x 0 : chy#-50\n  setting_do \"File System Backups\" w def() -> (\n    subcategory = \"Backups\"\n  )\n  \n  set_x 0 : chy#-50\n  setting_do \"Connections\" w def() -> (\n    subcategory = \"Connections\"\n  )\n  \n  set_x 0 : chy#-70\n  setting_do \"Subscriptions\" w def() -> (\n    subcategory = \"Subscriptions\"\n  )\n  \n  change_y -20\n\n  set_x 0 : chy#-50\n  setting_do \"Logout\" w def() -> (\n    terminal \"su\"\n  )\n  \n  page_len += 70\n)"
    },
    {
      "type": "str",
      "data": "\"account\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 100
              }
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "page_len"
            },
            "right": {
              "type": "num",
              "data": 500
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto 0 frame.top - 50 + scroll_y"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "top"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 50
              }
            },
            "right": {
              "type": "var",
              "data": "scroll_y"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"backups\" (\n    page_len = 0\n    each this.backup user.[\"sys.backups\"] (\n      if backup.isType(\"object\") (\n        page_len += 50\n        setting_do backup.name + \"(\" ++ (backup.size / 1000).round() ++ \"kb)\" w def(id) -> (\n          if \"Restore this backup?\".confirm() (\n            network \"server\" \"restore_backup\" id\n          )\n        ) backup.id\n        set_x 0 : chy#-50\n      )\n    )\n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"backups\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "each",
                  "source": "each this.backup user.[\"sys.backups\"] (\n      if backup.isType(\"object\") (\n        page_len += 50\n        setting_do backup.name + \"(\" ++ (backup.size / 1000).round() ++ \"kb)\" w def(id) -> (\n          if \"Restore this backup?\".confirm() (\n            network \"server\" \"restore_backup\" id\n          )\n        ) backup.id\n        set_x 0 : chy#-50\n      )\n    )"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "this"
                    },
                    {
                      "type": "var",
                      "data": "backup"
                    }
                  ]
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "user"
                    },
                    {
                      "type": "mtv",
                      "data": "item",
                      "parameters": [
                        {
                          "type": "str",
                          "data": "\"sys.backups\""
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if backup.isType(\"object\") (\n        page_len += 50\n        setting_do backup.name + \"(\" ++ (backup.size / 1000).round() ++ \"kb)\" w def(id) -> (\n          if \"Restore this backup?\".confirm() (\n            network \"server\" \"restore_backup\" id\n          )\n        ) backup.id\n        set_x 0 : chy#-50\n      )"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "backup"
                          },
                          {
                            "type": "mtv",
                            "data": "isType",
                            "parameters": [
                              {
                                "type": "str",
                                "data": "\"object\""
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "+=",
                              "left": {
                                "type": "var",
                                "data": "page_len"
                              },
                              "right": {
                                "type": "num",
                                "data": 50
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "setting_do",
                              "source": "setting_do backup.name + \"(\" ++ (backup.size / 1000).round() ++ \"kb)\" w def(id) -> (\n          if \"Restore this backup?\".confirm() (\n            network \"server\" \"restore_backup\" id\n          )\n        ) backup.id"
                            },
                            {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "opr",
                                "data": "++",
                                "left": {
                                  "type": "opr",
                                  "data": "+",
                                  "left": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "backup"
                                      },
                                      {
                                        "type": "var",
                                        "data": "name"
                                      }
                                    ]
                                  },
                                  "right": {
                                    "type": "str",
                                    "data": "\"(\""
                                  }
                                },
                                "right": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "opr",
                                      "data": "/",
                                      "left": {
                                        "type": "mtd",
                                        "data": [
                                          {
                                            "type": "var",
                                            "data": "backup"
                                          },
                                          {
                                            "type": "var",
                                            "data": "size"
                                          }
                                        ]
                                      },
                                      "right": {
                                        "type": "num",
                                        "data": 1000
                                      }
                                    },
                                    {
                                      "type": "mtv",
                                      "data": "round",
                                      "parameters": []
                                    }
                                  ]
                                }
                              },
                              "right": {
                                "type": "str",
                                "data": "\"kb)\""
                              }
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "fnc",
                              "data": "function",
                              "parameters": [
                                {
                                  "type": "str",
                                  "data": "id"
                                },
                                {
                                  "type": "blk",
                                  "data": [
                                    [
                                      {
                                        "type": "cmd",
                                        "data": "if",
                                        "source": "if \"Restore this backup?\".confirm() (\n            network \"server\" \"restore_backup\" id\n          )"
                                      },
                                      {
                                        "type": "mtd",
                                        "data": [
                                          {
                                            "type": "str",
                                            "data": "\"Restore this backup?\""
                                          },
                                          {
                                            "type": "mtv",
                                            "data": "confirm",
                                            "parameters": []
                                          }
                                        ]
                                      },
                                      {
                                        "type": "blk",
                                        "data": [
                                          [
                                            {
                                              "type": "cmd",
                                              "data": "network",
                                              "source": "network \"server\" \"restore_backup\" id"
                                            },
                                            {
                                              "type": "str",
                                              "data": "\"server\""
                                            },
                                            {
                                              "type": "str",
                                              "data": "\"restore_backup\""
                                            },
                                            {
                                              "type": "var",
                                              "data": "id"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "backup"
                                },
                                {
                                  "type": "var",
                                  "data": "id"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "set_x",
                              "source": "set_x 0 : chy#-50"
                            },
                            {
                              "type": "num",
                              "data": 0
                            },
                            {
                              "type": "mod",
                              "data": [
                                "chy",
                                {
                                  "type": "num",
                                  "data": -50
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"banners\" (\n    page_len = 0\n    goto 0 frame.top - 110 + scroll_y\n    square w 200 10 : c#prim\n    c seco\n    square 50 50 20\n    if mouse_touching (\n      cursor \"pointer\"\n      if onclick (\n        if user.[\"sys.currency\"] >= 10 (\n          local url = \"Paste the url of an image to use as your banner\".ask()\n          if url.startsWith(\"https://\") (\n            network \"update\" \"banner\" url\n          ) else if url == \"\" (\n            say \"Banner purchase aborted\"\n          ) else (\n            say \"Url must start with https\"\n          )\n        ) else (\n          say \"You do not have enough credits for this\"\n        )\n      )\n    )\n    c txtc\n    icon \"add\" 1.5\n    change_y 50\n    centext \"Add New Banner\" 10\n    change_y -100\n    centext \"Cost: 10 credits\" 10\n    change_y -20\n    centext \"You have \" ++ user.[\"sys.currency\"] ++ \" credits\" 10\n    \n    change_y -60\n    if user.[\"sys.banners\"].len == 0 (\n      centext \"No previous banners\" 10\n    ) else (\n      centext \"Previous 5 banners, switch to these for free\" 10\n    )\n    change_y 100\n\n    banners = user.[\"sys.banners\"]\n    y = y_position - (100 + (w / 6)) - 20\n    \n    each banner banners (\n      goto 0 y\n      square w w / 3 10 : c#prim\n      image banner w w / 3\n      change w / 2 - 30 w / 6 - 30\n      square 30 30 15 : c#prim\n      if onclick (\n        network \"update\" \"banner\" banner\n      )\n      icon \"tick\" 0.8 : c#txtc\n      y -= w / 3 + 20\n    )\n    page_len = (w / 3 + 20) * banners.len + 250\n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"banners\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 frame.top - 110 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 110
                    }
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 200 10 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 200
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c seco"
                },
                {
                  "type": "var",
                  "data": "seco"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 50 50 20"
                },
                {
                  "type": "num",
                  "data": 50
                },
                {
                  "type": "num",
                  "data": 50
                },
                {
                  "type": "num",
                  "data": 20
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_touching (\n      cursor \"pointer\"\n      if onclick (\n        if user.[\"sys.currency\"] >= 10 (\n          local url = \"Paste the url of an image to use as your banner\".ask()\n          if url.startsWith(\"https://\") (\n            network \"update\" \"banner\" url\n          ) else if url == \"\" (\n            say \"Banner purchase aborted\"\n          ) else (\n            say \"Url must start with https\"\n          )\n        ) else (\n          say \"You do not have enough credits for this\"\n        )\n      )\n    )"
                },
                {
                  "type": "var",
                  "data": "mouse_touching"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "cursor",
                        "source": "cursor \"pointer\""
                      },
                      {
                        "type": "str",
                        "data": "\"pointer\""
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if onclick (\n        if user.[\"sys.currency\"] >= 10 (\n          local url = \"Paste the url of an image to use as your banner\".ask()\n          if url.startsWith(\"https://\") (\n            network \"update\" \"banner\" url\n          ) else if url == \"\" (\n            say \"Banner purchase aborted\"\n          ) else (\n            say \"Url must start with https\"\n          )\n        ) else (\n          say \"You do not have enough credits for this\"\n        )\n      )"
                      },
                      {
                        "type": "var",
                        "data": "onclick"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if user.[\"sys.currency\"] >= 10 (\n          local url = \"Paste the url of an image to use as your banner\".ask()\n          if url.startsWith(\"https://\") (\n            network \"update\" \"banner\" url\n          ) else if url == \"\" (\n            say \"Banner purchase aborted\"\n          ) else (\n            say \"Url must start with https\"\n          )\n        ) else (\n          say \"You do not have enough credits for this\"\n        )"
                            },
                            {
                              "type": "cmp",
                              "data": ">=",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "user"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "\"sys.currency\""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 10
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "this"
                                        },
                                        {
                                          "type": "var",
                                          "data": "url"
                                        }
                                      ]
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "str",
                                          "data": "\"Paste the url of an image to use as your banner\""
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "ask",
                                          "parameters": []
                                        }
                                      ]
                                    }
                                  }
                                ],
                                [
                                  {
                                    "type": "cmd",
                                    "data": "if",
                                    "source": "if url.startsWith(\"https://\") (\n            network \"update\" \"banner\" url\n          ) else if url == \"\" (\n            say \"Banner purchase aborted\"\n          ) else (\n            say \"Url must start with https\"\n          )"
                                  },
                                  {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "url"
                                      },
                                      {
                                        "type": "mtv",
                                        "data": "startsWith",
                                        "parameters": [
                                          {
                                            "type": "str",
                                            "data": "\"https://\""
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "blk",
                                    "data": [
                                      [
                                        {
                                          "type": "cmd",
                                          "data": "network",
                                          "source": "network \"update\" \"banner\" url"
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"update\""
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"banner\""
                                        },
                                        {
                                          "type": "var",
                                          "data": "url"
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "type": "var",
                                    "data": "else"
                                  },
                                  {
                                    "type": "var",
                                    "data": "if"
                                  },
                                  {
                                    "type": "cmp",
                                    "data": "==",
                                    "left": {
                                      "type": "var",
                                      "data": "url"
                                    },
                                    "right": {
                                      "type": "str",
                                      "data": "\"\""
                                    }
                                  },
                                  {
                                    "type": "blk",
                                    "data": [
                                      [
                                        {
                                          "type": "cmd",
                                          "data": "say",
                                          "source": "say \"Banner purchase aborted\""
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"Banner purchase aborted\""
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "type": "var",
                                    "data": "else"
                                  },
                                  {
                                    "type": "blk",
                                    "data": [
                                      [
                                        {
                                          "type": "cmd",
                                          "data": "say",
                                          "source": "say \"Url must start with https\""
                                        },
                                        {
                                          "type": "str",
                                          "data": "\"Url must start with https\""
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "type": "var",
                              "data": "else"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "say",
                                    "source": "say \"You do not have enough credits for this\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"You do not have enough credits for this\""
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c txtc"
                },
                {
                  "type": "var",
                  "data": "txtc"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"add\" 1.5"
                },
                {
                  "type": "str",
                  "data": "\"add\""
                },
                {
                  "type": "num",
                  "data": 1.5
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y 50"
                },
                {
                  "type": "num",
                  "data": 50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext \"Add New Banner\" 10"
                },
                {
                  "type": "str",
                  "data": "\"Add New Banner\""
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -100"
                },
                {
                  "type": "num",
                  "data": -100
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext \"Cost: 10 credits\" 10"
                },
                {
                  "type": "str",
                  "data": "\"Cost: 10 credits\""
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -20"
                },
                {
                  "type": "num",
                  "data": -20
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext \"You have \" ++ user.[\"sys.currency\"] ++ \" credits\" 10"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "str",
                      "data": "\"You have \""
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "user"
                        },
                        {
                          "type": "mtv",
                          "data": "item",
                          "parameters": [
                            {
                              "type": "str",
                              "data": "\"sys.currency\""
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "str",
                    "data": "\" credits\""
                  }
                },
                {
                  "type": "num",
                  "data": 10
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -60"
                },
                {
                  "type": "num",
                  "data": -60
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if user.[\"sys.banners\"].len == 0 (\n      centext \"No previous banners\" 10\n    ) else (\n      centext \"Previous 5 banners, switch to these for free\" 10\n    )"
                },
                {
                  "type": "cmp",
                  "data": "==",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"sys.banners\""
                          }
                        ]
                      },
                      {
                        "type": "var",
                        "data": "len"
                      }
                    ]
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "centext",
                        "source": "centext \"No previous banners\" 10"
                      },
                      {
                        "type": "str",
                        "data": "\"No previous banners\""
                      },
                      {
                        "type": "num",
                        "data": 10
                      }
                    ]
                  ]
                },
                {
                  "type": "var",
                  "data": "else"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "centext",
                        "source": "centext \"Previous 5 banners, switch to these for free\" 10"
                      },
                      {
                        "type": "str",
                        "data": "\"Previous 5 banners, switch to these for free\""
                      },
                      {
                        "type": "num",
                        "data": 10
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y 100"
                },
                {
                  "type": "num",
                  "data": 100
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "banners"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"sys.banners\""
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "opr",
                      "data": "-",
                      "left": {
                        "type": "var",
                        "data": "y_position"
                      },
                      "right": {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "num",
                          "data": 100
                        },
                        "right": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": 6
                          }
                        }
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 20
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "each",
                  "source": "each banner banners (\n      goto 0 y\n      square w w / 3 10 : c#prim\n      image banner w w / 3\n      change w / 2 - 30 w / 6 - 30\n      square 30 30 15 : c#prim\n      if onclick (\n        network \"update\" \"banner\" banner\n      )\n      icon \"tick\" 0.8 : c#txtc\n      y -= w / 3 + 20\n    )"
                },
                {
                  "type": "var",
                  "data": "banner"
                },
                {
                  "type": "var",
                  "data": "banners"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto 0 y"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w w / 3 10 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "opr",
                        "data": "/",
                        "left": {
                          "type": "var",
                          "data": "w"
                        },
                        "right": {
                          "type": "num",
                          "data": 3
                        }
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "image",
                        "source": "image banner w w / 3"
                      },
                      {
                        "type": "var",
                        "data": "banner"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "opr",
                        "data": "/",
                        "left": {
                          "type": "var",
                          "data": "w"
                        },
                        "right": {
                          "type": "num",
                          "data": 3
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change",
                        "source": "change w / 2 - 30 w / 6 - 30"
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": 2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 30
                        }
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": 6
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 30
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 30 30 15 : c#prim"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if onclick (\n        network \"update\" \"banner\" banner\n      )"
                      },
                      {
                        "type": "var",
                        "data": "onclick"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "network",
                              "source": "network \"update\" \"banner\" banner"
                            },
                            {
                              "type": "str",
                              "data": "\"update\""
                            },
                            {
                              "type": "str",
                              "data": "\"banner\""
                            },
                            {
                              "type": "var",
                              "data": "banner"
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"tick\" 0.8 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"tick\""
                      },
                      {
                        "type": "num",
                        "data": 0.8
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "-=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "/",
                            "left": {
                              "type": "var",
                              "data": "w"
                            },
                            "right": {
                              "type": "num",
                              "data": 3
                            }
                          },
                          "right": {
                            "type": "num",
                            "data": 20
                          }
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": 3
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "banners"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 250
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"connections\" (\n    /*\n    local links = user.[\"sys.links\"]\n    if links.contains(\"github\") and github_data == \"Loading\" (\n      github_data = (\"https://api.github.com/user/\" ++ links.github.id).getAsync()\n    )\n    setting_do \"Github: \" ++ (links.contains(\"github\") ? github_data.login \"Click To Link\") w def() -> (\n      network \"server\" \"link\" {\n        service: \"github\",\n        username: \"What is your github username?\".ask()\n      }\n    )\n    */\n    page_len = 50\n    goto 0 frame.top + scroll_y + 25\n    \n    set_x 0 : chy#-50\n    setting_do \"Change Email (\" ++ user.email ++ \")\" w def() -> (\n      network \"update\" \"email\" \"Enter Your New Email\".ask()\n    )\n    \n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"connections\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "opr",
                  "data": "/"
                },
                {
                  "type": "num",
                  "data": 0
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "links"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"sys.links\""
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if links.contains(\"github\") and github_data == \"Loading\" (\n      github_data = (\"https://api.github.com/user/\" ++ links.github.id).getAsync()\n    )"
                },
                {
                  "type": "log",
                  "data": "and",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "links"
                      },
                      {
                        "type": "mtv",
                        "data": "contains",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"github\""
                          }
                        ]
                      }
                    ]
                  },
                  "right": {
                    "type": "cmp",
                    "data": "==",
                    "left": {
                      "type": "var",
                      "data": "github_data"
                    },
                    "right": {
                      "type": "str",
                      "data": "\"Loading\""
                    }
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "github_data"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "str",
                                "data": "\"https://api.github.com/user/\""
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "links"
                                  },
                                  {
                                    "type": "var",
                                    "data": "github"
                                  },
                                  {
                                    "type": "var",
                                    "data": "id"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "mtv",
                              "data": "getAsync",
                              "parameters": []
                            }
                          ]
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_do",
                  "source": "setting_do \"Github: \" ++ (links.contains(\"github\") ? github_data.login \"Click To Link\") w def() -> (\n      network \"server\" \"link\" {\n        service: \"github\",\n        username: \"What is your github username?\".ask()\n      }\n    )"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "str",
                    "data": "\"Github: \""
                  },
                  "right": {
                    "type": "qst",
                    "data": "?",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "links"
                        },
                        {
                          "type": "mtv",
                          "data": "contains",
                          "parameters": [
                            {
                              "type": "str",
                              "data": "\"github\""
                            }
                          ]
                        }
                      ]
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "github_data"
                        },
                        {
                          "type": "var",
                          "data": "login"
                        }
                      ]
                    },
                    "right2": {
                      "type": "str",
                      "data": "\"Click To Link\""
                    }
                  }
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "cmd",
                            "data": "network",
                            "source": "network \"server\" \"link\" {\n        service: \"github\",\n        username: \"What is your github username?\".ask()\n      }"
                          },
                          {
                            "type": "str",
                            "data": "\"server\""
                          },
                          {
                            "type": "str",
                            "data": "\"link\""
                          },
                          {
                            "type": "obj",
                            "data": {
                              "service": {
                                "type": "str",
                                "data": "\"github\""
                              },
                              "username": {
                                "type": "asi",
                                "data": "=??",
                                "left": {
                                  "type": "str",
                                  "data": "\"What is your github username?\""
                                },
                                "right": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "str",
                                      "data": "\"What is your github username?\""
                                    },
                                    {
                                      "type": "mtv",
                                      "data": "ask",
                                      "parameters": []
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "opr",
                  "data": "*"
                },
                {
                  "type": "num",
                  "data": 0
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 frame.top + scroll_y + 25"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "var",
                      "data": "scroll_y"
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 25
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x 0 : chy#-50"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -50
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_do",
                  "source": "setting_do \"Change Email (\" ++ user.email ++ \")\" w def() -> (\n      network \"update\" \"email\" \"Enter Your New Email\".ask()\n    )"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "str",
                      "data": "\"Change Email (\""
                    },
                    "right": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "user"
                        },
                        {
                          "type": "var",
                          "data": "email"
                        }
                      ]
                    }
                  },
                  "right": {
                    "type": "str",
                    "data": "\")\""
                  }
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "cmd",
                            "data": "network",
                            "source": "network \"update\" \"email\" \"Enter Your New Email\".ask()"
                          },
                          {
                            "type": "str",
                            "data": "\"update\""
                          },
                          {
                            "type": "str",
                            "data": "\"email\""
                          },
                          {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "str",
                                "data": "\"Enter Your New Email\""
                              },
                              {
                                "type": "mtv",
                                "data": "ask",
                                "parameters": []
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"Subscriptions\" (\n    page_len = -40\n    if typeof(subscriptions) != \"array\" (\n      goto 0 frame.top - 60 + scroll_y\n      centext \"Fetching Subscriptions\" 10 : c#txtc\n      \n      data = (\"https://social.rotur.dev/keys/mine?auth=\" ++ roturToken()).getAsync()\n      if data != \"Loading\" (\n        subscriptions = data.filter(v -> (v.[\"type\"] == \"subscription\"))\n      )\n    ) else (\n      goto 0 frame.top - 60 + scroll_y\n      if subscriptions.len == 0 (\n        centext \"You have no subscriptions\" 10 : c#txtc\n      )\n     \n      for i subscriptions.len (\n        cur @= subscriptions.[i]\n        x = x_position\n        y = y_position\n        square w 100 10 : c#prim\n        change w / -2 + 10 30\n        text cur.name ?? cur.id ++ \"\\n\" 10 : c#txtc\n        text \"by: \" ++ cur.creator ++ \"\\n\" 10\n        text \"price (credits): \" ++ cur.price ++ \" per \" ++ cur.subscription.frequency ++ \" \" ++ cur.subscription.period 10\n        goto x y\n        change w / 2 - 70\n        square 100 40 10 : c#seco\n        if onclick (\n          if (\"Are you sure you want to cancel '\" ++ cur.name ++ \"'?\").confirm() (\n            void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()\n            subscriptions = \"\"\n          )\n        )\n        centext \"Cancel\" 10 : c#txtc\n        goto x y\n        change_y -120\n        page_len += 120\n      )\n    )\n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"Subscriptions\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": -40
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if typeof(subscriptions) != \"array\" (\n      goto 0 frame.top - 60 + scroll_y\n      centext \"Fetching Subscriptions\" 10 : c#txtc\n      \n      data = (\"https://social.rotur.dev/keys/mine?auth=\" ++ roturToken()).getAsync()\n      if data != \"Loading\" (\n        subscriptions = data.filter(v -> (v.[\"type\"] == \"subscription\"))\n      )\n    ) else (\n      goto 0 frame.top - 60 + scroll_y\n      if subscriptions.len == 0 (\n        centext \"You have no subscriptions\" 10 : c#txtc\n      )\n     \n      for i subscriptions.len (\n        cur @= subscriptions.[i]\n        x = x_position\n        y = y_position\n        square w 100 10 : c#prim\n        change w / -2 + 10 30\n        text cur.name ?? cur.id ++ \"\\n\" 10 : c#txtc\n        text \"by: \" ++ cur.creator ++ \"\\n\" 10\n        text \"price (credits): \" ++ cur.price ++ \" per \" ++ cur.subscription.frequency ++ \" \" ++ cur.subscription.period 10\n        goto x y\n        change w / 2 - 70\n        square 100 40 10 : c#seco\n        if onclick (\n          if (\"Are you sure you want to cancel '\" ++ cur.name ++ \"'?\").confirm() (\n            void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()\n            subscriptions = \"\"\n          )\n        )\n        centext \"Cancel\" 10 : c#txtc\n        goto x y\n        change_y -120\n        page_len += 120\n      )\n    )"
                },
                {
                  "type": "cmp",
                  "data": "!=",
                  "left": {
                    "type": "fnc",
                    "data": "typeof",
                    "parameters": [
                      {
                        "type": "var",
                        "data": "subscriptions"
                      }
                    ]
                  },
                  "right": {
                    "type": "str",
                    "data": "\"array\""
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto 0 frame.top - 60 + scroll_y"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "opr",
                          "data": "-",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "frame"
                              },
                              {
                                "type": "var",
                                "data": "top"
                              }
                            ]
                          },
                          "right": {
                            "type": "num",
                            "data": 60
                          }
                        },
                        "right": {
                          "type": "var",
                          "data": "scroll_y"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "centext",
                        "source": "centext \"Fetching Subscriptions\" 10 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"Fetching Subscriptions\""
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "data"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "str",
                                "data": "\"https://social.rotur.dev/keys/mine?auth=\""
                              },
                              "right": {
                                "type": "fnc",
                                "data": "roturToken",
                                "parameters": []
                              }
                            },
                            {
                              "type": "mtv",
                              "data": "getAsync",
                              "parameters": []
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if data != \"Loading\" (\n        subscriptions = data.filter(v -> (v.[\"type\"] == \"subscription\"))\n      )"
                      },
                      {
                        "type": "cmp",
                        "data": "!=",
                        "left": {
                          "type": "var",
                          "data": "data"
                        },
                        "right": {
                          "type": "str",
                          "data": "\"Loading\""
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "subscriptions"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "data"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "filter",
                                    "parameters": [
                                      {
                                        "type": "fnc",
                                        "data": "function",
                                        "parameters": [
                                          {
                                            "type": "str",
                                            "data": ""
                                          },
                                          {
                                            "type": "cmp",
                                            "data": "==",
                                            "left": {
                                              "type": "mtd",
                                              "data": [
                                                {
                                                  "type": "var",
                                                  "data": "v"
                                                },
                                                {
                                                  "type": "mtv",
                                                  "data": "item",
                                                  "parameters": [
                                                    {
                                                      "type": "str",
                                                      "data": "\"type\""
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "str",
                                              "data": "\"subscription\""
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "type": "var",
                  "data": "else"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "goto",
                        "source": "goto 0 frame.top - 60 + scroll_y"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "opr",
                          "data": "-",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "frame"
                              },
                              {
                                "type": "var",
                                "data": "top"
                              }
                            ]
                          },
                          "right": {
                            "type": "num",
                            "data": 60
                          }
                        },
                        "right": {
                          "type": "var",
                          "data": "scroll_y"
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if subscriptions.len == 0 (\n        centext \"You have no subscriptions\" 10 : c#txtc\n      )"
                      },
                      {
                        "type": "cmp",
                        "data": "==",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "subscriptions"
                            },
                            {
                              "type": "var",
                              "data": "len"
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 0
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "centext",
                              "source": "centext \"You have no subscriptions\" 10 : c#txtc"
                            },
                            {
                              "type": "str",
                              "data": "\"You have no subscriptions\""
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "for",
                        "source": "for i subscriptions.len (\n        cur @= subscriptions.[i]\n        x = x_position\n        y = y_position\n        square w 100 10 : c#prim\n        change w / -2 + 10 30\n        text cur.name ?? cur.id ++ \"\\n\" 10 : c#txtc\n        text \"by: \" ++ cur.creator ++ \"\\n\" 10\n        text \"price (credits): \" ++ cur.price ++ \" per \" ++ cur.subscription.frequency ++ \" \" ++ cur.subscription.period 10\n        goto x y\n        change w / 2 - 70\n        square 100 40 10 : c#seco\n        if onclick (\n          if (\"Are you sure you want to cancel '\" ++ cur.name ++ \"'?\").confirm() (\n            void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()\n            subscriptions = \"\"\n          )\n        )\n        centext \"Cancel\" 10 : c#txtc\n        goto x y\n        change_y -120\n        page_len += 120\n      )"
                      },
                      {
                        "type": "var",
                        "data": "i"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "subscriptions"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "@=",
                              "left": {
                                "type": "var",
                                "data": "cur"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "subscriptions"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "item",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "i"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "x"
                              },
                              "right": {
                                "type": "var",
                                "data": "x_position"
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "y"
                              },
                              "right": {
                                "type": "var",
                                "data": "y_position"
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 100 10 : c#prim"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 100
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "change",
                              "source": "change w / -2 + 10 30"
                            },
                            {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "opr",
                                "data": "/",
                                "left": {
                                  "type": "var",
                                  "data": "w"
                                },
                                "right": {
                                  "type": "num",
                                  "data": -2
                                }
                              },
                              "right": {
                                "type": "num",
                                "data": 10
                              }
                            },
                            {
                              "type": "num",
                              "data": 30
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "text",
                              "source": "text cur.name ?? cur.id ++ \"\\n\" 10 : c#txtc"
                            },
                            {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "opr",
                                "data": "??",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "cur"
                                    },
                                    {
                                      "type": "var",
                                      "data": "name"
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "cur"
                                    },
                                    {
                                      "type": "var",
                                      "data": "id"
                                    }
                                  ]
                                }
                              },
                              "right": {
                                "type": "str",
                                "data": "\"\\n\""
                              }
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "text",
                              "source": "text \"by: \" ++ cur.creator ++ \"\\n\" 10"
                            },
                            {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "opr",
                                "data": "++",
                                "left": {
                                  "type": "str",
                                  "data": "\"by: \""
                                },
                                "right": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "cur"
                                    },
                                    {
                                      "type": "var",
                                      "data": "creator"
                                    }
                                  ]
                                }
                              },
                              "right": {
                                "type": "str",
                                "data": "\"\\n\""
                              }
                            },
                            {
                              "type": "num",
                              "data": 10
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "text",
                              "source": "text \"price (credits): \" ++ cur.price ++ \" per \" ++ cur.subscription.frequency ++ \" \" ++ cur.subscription.period 10"
                            },
                            {
                              "type": "opr",
                              "data": "++",
                              "left": {
                                "type": "opr",
                                "data": "++",
                                "left": {
                                  "type": "opr",
                                  "data": "++",
                                  "left": {
                                    "type": "opr",
                                    "data": "++",
                                    "left": {
                                      "type": "opr",
                                      "data": "++",
                                      "left": {
                                        "type": "str",
                                        "data": "\"price (credits): \""
                                      },
                                      "right": {
                                        "type": "mtd",
                                        "data": [
                                          {
                                            "type": "var",
                                            "data": "cur"
                                          },
                                          {
                                            "type": "var",
                                            "data": "price"
                                          }
                                        ]
                                      }
                                    },
                                    "right": {
                                      "type": "str",
                                      "data": "\" per \""
                                    }
                                  },
                                  "right": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "cur"
                                      },
                                      {
                                        "type": "var",
                                        "data": "subscription"
                                      },
                                      {
                                        "type": "var",
                                        "data": "frequency"
                                      }
                                    ]
                                  }
                                },
                                "right": {
                                  "type": "str",
                                  "data": "\" \""
                                }
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "cur"
                                  },
                                  {
                                    "type": "var",
                                    "data": "subscription"
                                  },
                                  {
                                    "type": "var",
                                    "data": "period"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "num",
                              "data": 10
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "goto",
                              "source": "goto x y"
                            },
                            {
                              "type": "var",
                              "data": "x"
                            },
                            {
                              "type": "var",
                              "data": "y"
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "change",
                              "source": "change w / 2 - 70"
                            },
                            {
                              "type": "opr",
                              "data": "-",
                              "left": {
                                "type": "opr",
                                "data": "/",
                                "left": {
                                  "type": "var",
                                  "data": "w"
                                },
                                "right": {
                                  "type": "num",
                                  "data": 2
                                }
                              },
                              "right": {
                                "type": "num",
                                "data": 70
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square 100 40 10 : c#seco"
                            },
                            {
                              "type": "num",
                              "data": 100
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if onclick (\n          if (\"Are you sure you want to cancel '\" ++ cur.name ++ \"'?\").confirm() (\n            void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()\n            subscriptions = \"\"\n          )\n        )"
                            },
                            {
                              "type": "var",
                              "data": "onclick"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "if",
                                    "source": "if (\"Are you sure you want to cancel '\" ++ cur.name ++ \"'?\").confirm() (\n            void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()\n            subscriptions = \"\"\n          )"
                                  },
                                  {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "opr",
                                        "data": "++",
                                        "left": {
                                          "type": "opr",
                                          "data": "++",
                                          "left": {
                                            "type": "str",
                                            "data": "\"Are you sure you want to cancel '\""
                                          },
                                          "right": {
                                            "type": "mtd",
                                            "data": [
                                              {
                                                "type": "var",
                                                "data": "cur"
                                              },
                                              {
                                                "type": "var",
                                                "data": "name"
                                              }
                                            ]
                                          }
                                        },
                                        "right": {
                                          "type": "str",
                                          "data": "\"'?\""
                                        }
                                      },
                                      {
                                        "type": "mtv",
                                        "data": "confirm",
                                        "parameters": []
                                      }
                                    ]
                                  },
                                  {
                                    "type": "blk",
                                    "data": [
                                      [
                                        {
                                          "type": "cmd",
                                          "data": "void",
                                          "source": "void (\"https://social.rotur.dev/keys/cancel/\" ++ cur.id ++ \"?auth=\" ++ roturToken()).getAsync()"
                                        },
                                        {
                                          "type": "mtd",
                                          "data": [
                                            {
                                              "type": "opr",
                                              "data": "++",
                                              "left": {
                                                "type": "opr",
                                                "data": "++",
                                                "left": {
                                                  "type": "opr",
                                                  "data": "++",
                                                  "left": {
                                                    "type": "str",
                                                    "data": "\"https://social.rotur.dev/keys/cancel/\""
                                                  },
                                                  "right": {
                                                    "type": "mtd",
                                                    "data": [
                                                      {
                                                        "type": "var",
                                                        "data": "cur"
                                                      },
                                                      {
                                                        "type": "var",
                                                        "data": "id"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "right": {
                                                  "type": "str",
                                                  "data": "\"?auth=\""
                                                }
                                              },
                                              "right": {
                                                "type": "fnc",
                                                "data": "roturToken",
                                                "parameters": []
                                              }
                                            },
                                            {
                                              "type": "mtv",
                                              "data": "getAsync",
                                              "parameters": []
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        {
                                          "type": "asi",
                                          "data": "=",
                                          "left": {
                                            "type": "var",
                                            "data": "subscriptions"
                                          },
                                          "right": {
                                            "type": "str",
                                            "data": "\"\""
                                          }
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "centext",
                              "source": "centext \"Cancel\" 10 : c#txtc"
                            },
                            {
                              "type": "str",
                              "data": "\"Cancel\""
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "txtc"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "goto",
                              "source": "goto x y"
                            },
                            {
                              "type": "var",
                              "data": "x"
                            },
                            {
                              "type": "var",
                              "data": "y"
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "change_y",
                              "source": "change_y -120"
                            },
                            {
                              "type": "num",
                              "data": -120
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "+=",
                              "left": {
                                "type": "var",
                                "data": "page_len"
                              },
                              "right": {
                                "type": "num",
                                "data": 120
                              }
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"Privacy\" (\n    page_len = 500\n    setting_toggle \"Private Account?\" w user.private def() -> (\n      network \"update\" \"private\" user.private.not\n    )\n    set_x 0 : chy#-50\n    centext \"Public Data:\" 10 : c#txtc\n    local items = {\n      \"username\": \"username\",\n      \"profile picture\": \"pfp\",\n      \"banner\": \"sys.banner\",\n      \"bio\": \"bio\",\n      \"theming and colours\": \"theme\",\n      \"rotur credit total\": \"sys.currency\",\n      \"your rotur operating system\": \"system\",\n      \"account creation date\": \"created\"\n    }\n    change_y -50\n    local names = items.getKeys()\n    local keys = items.getValues()\n    for i names.len (\n      square w 30 10 : c#prim\n      set_x w / -2 + 10\n      text names.[i].toTitle() 10 : c#txtc tooltip#keys.[i]\n      set_x 0 : chy#-50\n    )\n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"Privacy\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": 500
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_toggle",
                  "source": "setting_toggle \"Private Account?\" w user.private def() -> (\n      network \"update\" \"private\" user.private.not\n    )"
                },
                {
                  "type": "str",
                  "data": "\"Private Account?\""
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "user"
                    },
                    {
                      "type": "var",
                      "data": "private"
                    }
                  ]
                },
                {
                  "type": "fnc",
                  "data": "function",
                  "parameters": [
                    {
                      "type": "str",
                      "data": ""
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "cmd",
                            "data": "network",
                            "source": "network \"update\" \"private\" user.private.not"
                          },
                          {
                            "type": "str",
                            "data": "\"update\""
                          },
                          {
                            "type": "str",
                            "data": "\"private\""
                          },
                          {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "user"
                              },
                              {
                                "type": "var",
                                "data": "private"
                              },
                              {
                                "type": "var",
                                "data": "not"
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x 0 : chy#-50"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -50
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext \"Public Data:\" 10 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Public Data:\""
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "items"
                      }
                    ]
                  },
                  "right": {
                    "type": "obj",
                    "data": {
                      "username": {
                        "type": "str",
                        "data": "\"username\""
                      },
                      "profile picture": {
                        "type": "str",
                        "data": "\"pfp\""
                      },
                      "banner": {
                        "type": "str",
                        "data": "\"sys.banner\""
                      },
                      "bio": {
                        "type": "str",
                        "data": "\"bio\""
                      },
                      "theming and colours": {
                        "type": "str",
                        "data": "\"theme\""
                      },
                      "rotur credit total": {
                        "type": "str",
                        "data": "\"sys.currency\""
                      },
                      "your rotur operating system": {
                        "type": "str",
                        "data": "\"system\""
                      },
                      "account creation date": {
                        "type": "str",
                        "data": "\"created\""
                      }
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -50"
                },
                {
                  "type": "num",
                  "data": -50
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "names"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "items"
                      },
                      {
                        "type": "mtv",
                        "data": "getKeys",
                        "parameters": []
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "keys"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "items"
                      },
                      {
                        "type": "mtv",
                        "data": "getValues",
                        "parameters": []
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for i names.len (\n      square w 30 10 : c#prim\n      set_x w / -2 + 10\n      text names.[i].toTitle() 10 : c#txtc tooltip#keys.[i]\n      set_x 0 : chy#-50\n    )"
                },
                {
                  "type": "var",
                  "data": "i"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "names"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 30 10 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "set_x",
                        "source": "set_x w / -2 + 10"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": -2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 10
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text names.[i].toTitle() 10 : c#txtc tooltip#keys.[i]"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "names"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "i"
                              }
                            ]
                          },
                          {
                            "type": "mtv",
                            "data": "toTitle",
                            "parameters": []
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "unk",
                            "data": "tooltip#keys"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "i"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "set_x",
                        "source": "set_x 0 : chy#-50"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chy",
                          {
                            "type": "num",
                            "data": -50
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto 0 frame.top - (w / 6) - 10 + scroll_y"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "opr",
                "data": "-",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "frame"
                    },
                    {
                      "type": "var",
                      "data": "top"
                    }
                  ]
                },
                "right": {
                  "type": "opr",
                  "data": "/",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "num",
                    "data": 6
                  }
                }
              },
              "right": {
                "type": "num",
                "data": 10
              }
            },
            "right": {
              "type": "var",
              "data": "scroll_y"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square w w / 3 10 : c#prim"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "opr",
            "data": "/",
            "left": {
              "type": "var",
              "data": "w"
            },
            "right": {
              "type": "num",
              "data": 3
            }
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "effect",
            "source": "effect \"transparency\" 70"
          },
          {
            "type": "str",
            "data": "\"transparency\""
          },
          {
            "type": "num",
            "data": 70
          }
        ],
        [
          {
            "type": "cmd",
            "data": "image",
            "source": "image user.banner ++ \"?radius=10\" w w / 3"
          },
          {
            "type": "opr",
            "data": "++",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "user"
                },
                {
                  "type": "var",
                  "data": "banner"
                }
              ]
            },
            "right": {
              "type": "str",
              "data": "\"?radius=10\""
            }
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "opr",
            "data": "/",
            "left": {
              "type": "var",
              "data": "w"
            },
            "right": {
              "type": "num",
              "data": 3
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "effect",
            "source": "effect \"clear\""
          },
          {
            "type": "str",
            "data": "\"clear\""
          }
        ],
        [
          {
            "type": "asi",
            "data": "+=",
            "left": {
              "type": "var",
              "data": "page_len"
            },
            "right": {
              "type": "opr",
              "data": "/",
              "left": {
                "type": "var",
                "data": "w"
              },
              "right": {
                "type": "num",
                "data": 3
              }
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "pfp_s"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "opr",
                "data": "/",
                "left": {
                  "type": "var",
                  "data": "w"
                },
                "right": {
                  "type": "num",
                  "data": 3
                }
              },
              "right": {
                "type": "num",
                "data": 30
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x w / -2 + (pfp_s / 2) + 15"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "+",
              "left": {
                "type": "opr",
                "data": "/",
                "left": {
                  "type": "var",
                  "data": "w"
                },
                "right": {
                  "type": "num",
                  "data": -2
                }
              },
              "right": {
                "type": "opr",
                "data": "/",
                "left": {
                  "type": "var",
                  "data": "pfp_s"
                },
                "right": {
                  "type": "num",
                  "data": 2
                }
              }
            },
            "right": {
              "type": "num",
              "data": 15
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "image",
            "source": "image pfp pfp_s pfp_s"
          },
          {
            "type": "var",
            "data": "pfp"
          },
          {
            "type": "var",
            "data": "pfp_s"
          },
          {
            "type": "var",
            "data": "pfp_s"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if timer - upload_time < 5 and current_pfp != \"\" (\n    direction timer * 300\n    icon \"cutcircle 0 0 10 0 90\" 1 : c#txtc\n    direction 90\n  ) else (\n    if mouse_touching (\n      if clicked (\n        current_pfp = clipboard.toStr()\n        upload_time = timer\n      )\n      change_y 20\n      square 25 25 12 : c#seco\n      icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc\n      \n      square 81 10 20 : chy#-40 c#seco\n      centext \"Paste Url\" 9 : c#txtc\n      change_y 20\n    )\n  )"
          },
          {
            "type": "log",
            "data": "and",
            "left": {
              "type": "cmp",
              "data": "<",
              "left": {
                "type": "opr",
                "data": "-",
                "left": {
                  "type": "var",
                  "data": "timer"
                },
                "right": {
                  "type": "var",
                  "data": "upload_time"
                }
              },
              "right": {
                "type": "num",
                "data": 5
              }
            },
            "right": {
              "type": "cmp",
              "data": "!=",
              "left": {
                "type": "var",
                "data": "current_pfp"
              },
              "right": {
                "type": "str",
                "data": "\"\""
              }
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "direction",
                  "source": "direction timer * 300"
                },
                {
                  "type": "opr",
                  "data": "*",
                  "left": {
                    "type": "var",
                    "data": "timer"
                  },
                  "right": {
                    "type": "num",
                    "data": 300
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"cutcircle 0 0 10 0 90\" 1 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"cutcircle 0 0 10 0 90\""
                },
                {
                  "type": "num",
                  "data": 1
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "direction",
                  "source": "direction 90"
                },
                {
                  "type": "num",
                  "data": 90
                }
              ]
            ]
          },
          {
            "type": "var",
            "data": "else"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_touching (\n      if clicked (\n        current_pfp = clipboard.toStr()\n        upload_time = timer\n      )\n      change_y 20\n      square 25 25 12 : c#seco\n      icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc\n      \n      square 81 10 20 : chy#-40 c#seco\n      centext \"Paste Url\" 9 : c#txtc\n      change_y 20\n    )"
                },
                {
                  "type": "var",
                  "data": "mouse_touching"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if clicked (\n        current_pfp = clipboard.toStr()\n        upload_time = timer\n      )"
                      },
                      {
                        "type": "var",
                        "data": "clicked"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "current_pfp"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "clipboard"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "toStr",
                                    "parameters": []
                                  }
                                ]
                              }
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "upload_time"
                              },
                              "right": {
                                "type": "var",
                                "data": "timer"
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_y",
                        "source": "change_y 20"
                      },
                      {
                        "type": "num",
                        "data": 20
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 25 25 12 : c#seco"
                      },
                      {
                        "type": "num",
                        "data": 25
                      },
                      {
                        "type": "num",
                        "data": 25
                      },
                      {
                        "type": "num",
                        "data": 12
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon \"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\" 0.7 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10\""
                      },
                      {
                        "type": "num",
                        "data": 0.7
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square 81 10 20 : chy#-40 c#seco"
                      },
                      {
                        "type": "num",
                        "data": 81
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "num",
                        "data": 20
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chy",
                          {
                            "type": "num",
                            "data": -40
                          }
                        ]
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "seco"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "centext",
                        "source": "centext \"Paste Url\" 9 : c#txtc"
                      },
                      {
                        "type": "str",
                        "data": "\"Paste Url\""
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_y",
                        "source": "change_y 20"
                      },
                      {
                        "type": "num",
                        "data": 20
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "pos"
                }
              ]
            },
            "right": {
              "type": "arr",
              "data": [
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "var",
                      "data": "x_position"
                    },
                    "right": {
                      "type": "opr",
                      "data": "/",
                      "left": {
                        "type": "var",
                        "data": "pfp_s"
                      },
                      "right": {
                        "type": "num",
                        "data": 2
                      }
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 30
                  }
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "var",
                    "data": "y_position"
                  },
                  "right": {
                    "type": "num",
                    "data": 15
                  }
                }
              ]
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto pos"
          },
          {
            "type": "var",
            "data": "pos"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text username ++ \"\\n\" 15 : c#txtc"
          },
          {
            "type": "opr",
            "data": "++",
            "left": {
              "type": "var",
              "data": "username"
            },
            "right": {
              "type": "str",
              "data": "\"\\n\""
            }
          },
          {
            "type": "num",
            "data": 15
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text user.system + \"Account\" 10"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "user"
                },
                {
                  "type": "var",
                  "data": "system"
                }
              ]
            },
            "right": {
              "type": "str",
              "data": "\"Account\""
            }
          },
          {
            "type": "num",
            "data": 10
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc -2 2 -70 -30 + scroll_y"
          },
          {
            "type": "num",
            "data": -2
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": -70
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "num",
              "data": -30
            },
            "right": {
              "type": "var",
              "data": "scroll_y"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "icon",
            "source": "icon \"edit\" 0.8"
          },
          {
            "type": "str",
            "data": "\"edit\""
          },
          {
            "type": "num",
            "data": 0.8
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if onclick (\n    subcategory = \"Banners\"\n  )"
          },
          {
            "type": "var",
            "data": "onclick"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "subcategory"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"Banners\""
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if current_pfp != \"\" (\n    image current_pfp 0 0\n    if timer - upload_time > 5 (\n      current_pfp = \"\"\n      say \"Failed to load pfp, try a different   website or try again\"\n    )\n    if current_pfp.imageinfo(\"loaded\") (\n      network \"update\" \"pfp\" current_pfp\n      current_pfp = \"\"\n    )\n  )"
          },
          {
            "type": "cmp",
            "data": "!=",
            "left": {
              "type": "var",
              "data": "current_pfp"
            },
            "right": {
              "type": "str",
              "data": "\"\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "image",
                  "source": "image current_pfp 0 0"
                },
                {
                  "type": "var",
                  "data": "current_pfp"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "num",
                  "data": 0
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if timer - upload_time > 5 (\n      current_pfp = \"\"\n      say \"Failed to load pfp, try a different   website or try again\"\n    )"
                },
                {
                  "type": "cmp",
                  "data": ">",
                  "left": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "var",
                      "data": "timer"
                    },
                    "right": {
                      "type": "var",
                      "data": "upload_time"
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 5
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "current_pfp"
                        },
                        "right": {
                          "type": "str",
                          "data": "\"\""
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "say",
                        "source": "say \"Failed to load pfp, try a different   website or try again\""
                      },
                      {
                        "type": "str",
                        "data": "\"Failed to load pfp, try a different   website or try again\""
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if current_pfp.imageinfo(\"loaded\") (\n      network \"update\" \"pfp\" current_pfp\n      current_pfp = \"\"\n    )"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "current_pfp"
                    },
                    {
                      "type": "mtv",
                      "data": "imageinfo",
                      "parameters": [
                        {
                          "type": "str",
                          "data": "\"loaded\""
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"pfp\" current_pfp"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"pfp\""
                      },
                      {
                        "type": "var",
                        "data": "current_pfp"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "current_pfp"
                        },
                        "right": {
                          "type": "str",
                          "data": "\"\""
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "all_badges"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "??",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "fnc",
                    "data": "System",
                    "parameters": []
                  },
                  {
                    "type": "var",
                    "data": "badges"
                  }
                ]
              },
              "right": {
                "type": "obj",
                "data": {}
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if all_badges.istype(\"object\") (\n    user_badges = user.[\"sys.badges\"]\n    local w2 = user_badges.len * 30\n    pos.[1] += username.len * 10\n    goto pos.[1] + 35 + (w2 * .5) pos.[2]\n    square w2 - 5 25 10 : c#prim\n    goto pos.[1] + 50 pos.[2]\n    each badge user_badges (\n      icon all_badges.[badge].icon 1.2 : tooltip#badge\n      if onclick (\n        say all_badges.[badge].description\n      )\n      change_x 30\n    )\n  )"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "all_badges"
              },
              {
                "type": "mtv",
                "data": "istype",
                "parameters": [
                  {
                    "type": "str",
                    "data": "\"object\""
                  }
                ]
              }
            ]
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "user_badges"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "user"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "str",
                            "data": "\"sys.badges\""
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "w2"
                      }
                    ]
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "user_badges"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 30
                    }
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "+=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "pos"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1
                          }
                        ]
                      }
                    ]
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "username"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 10
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto pos.[1] + 35 + (w2 * .5) pos.[2]"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "pos"
                        },
                        {
                          "type": "mtv",
                          "data": "item",
                          "parameters": [
                            {
                              "type": "num",
                              "data": 1
                            }
                          ]
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 35
                    }
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "var",
                      "data": "w2"
                    },
                    "right": {
                      "type": "num",
                      "data": 0.5
                    }
                  }
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "pos"
                    },
                    {
                      "type": "mtv",
                      "data": "item",
                      "parameters": [
                        {
                          "type": "num",
                          "data": 2
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w2 - 5 25 10 : c#prim"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "w2"
                  },
                  "right": {
                    "type": "num",
                    "data": 5
                  }
                },
                {
                  "type": "num",
                  "data": 25
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto pos.[1] + 50 pos.[2]"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "pos"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "num",
                            "data": 1
                          }
                        ]
                      }
                    ]
                  },
                  "right": {
                    "type": "num",
                    "data": 50
                  }
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "pos"
                    },
                    {
                      "type": "mtv",
                      "data": "item",
                      "parameters": [
                        {
                          "type": "num",
                          "data": 2
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "each",
                  "source": "each badge user_badges (\n      icon all_badges.[badge].icon 1.2 : tooltip#badge\n      if onclick (\n        say all_badges.[badge].description\n      )\n      change_x 30\n    )"
                },
                {
                  "type": "var",
                  "data": "badge"
                },
                {
                  "type": "var",
                  "data": "user_badges"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "icon",
                        "source": "icon all_badges.[badge].icon 1.2 : tooltip#badge"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "all_badges"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "badge"
                              }
                            ]
                          },
                          {
                            "type": "var",
                            "data": "icon"
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 1.2
                      },
                      {
                        "type": "mod",
                        "data": [
                          "tooltip",
                          {
                            "type": "var",
                            "data": "badge"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if onclick (\n        say all_badges.[badge].description\n      )"
                      },
                      {
                        "type": "var",
                        "data": "onclick"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "say",
                              "source": "say all_badges.[badge].description"
                            },
                            {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "all_badges"
                                },
                                {
                                  "type": "mtv",
                                  "data": "item",
                                  "parameters": [
                                    {
                                      "type": "var",
                                      "data": "badge"
                                    }
                                  ]
                                },
                                {
                                  "type": "var",
                                  "data": "description"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_x",
                        "source": "change_x 30"
                      },
                      {
                        "type": "num",
                        "data": 30
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "bio_data"
                }
              ]
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "inputs"
                },
                {
                  "type": "var",
                  "data": "bio"
                },
                {
                  "type": "mtv",
                  "data": "join",
                  "parameters": [
                    {
                      "type": "str",
                      "data": "\"\\n\""
                    }
                  ]
                }
              ]
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto w / -2 frame.top - (w / 3) - 70 + scroll_y"
          },
          {
            "type": "opr",
            "data": "/",
            "left": {
              "type": "var",
              "data": "w"
            },
            "right": {
              "type": "num",
              "data": -2
            }
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "opr",
                "data": "-",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "frame"
                    },
                    {
                      "type": "var",
                      "data": "top"
                    }
                  ]
                },
                "right": {
                  "type": "opr",
                  "data": "/",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "num",
                    "data": 3
                  }
                }
              },
              "right": {
                "type": "num",
                "data": 70
              }
            },
            "right": {
              "type": "var",
              "data": "scroll_y"
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text \"Bio (\" ++ bio_data.len ++ \"/200)\" 10 : c#txtc"
          },
          {
            "type": "opr",
            "data": "++",
            "left": {
              "type": "opr",
              "data": "++",
              "left": {
                "type": "str",
                "data": "\"Bio (\""
              },
              "right": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "bio_data"
                  },
                  {
                    "type": "var",
                    "data": "len"
                  }
                ]
              }
            },
            "right": {
              "type": "str",
              "data": "\"/200)\""
            }
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if bio_data != user.bio (\n    set_x w / 2 - 10\n    icon \"save\" 0.7\n    if onclick (\n      network \"update\" \"bio\" inputs.bio.join(\"\\n\").strip()\n    )\n  )"
          },
          {
            "type": "cmp",
            "data": "!=",
            "left": {
              "type": "var",
              "data": "bio_data"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "user"
                },
                {
                  "type": "var",
                  "data": "bio"
                }
              ]
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x w / 2 - 10"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": 2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 10
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"save\" 0.7"
                },
                {
                  "type": "str",
                  "data": "\"save\""
                },
                {
                  "type": "num",
                  "data": 0.7
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n      network \"update\" \"bio\" inputs.bio.join(\"\\n\").strip()\n    )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "network",
                        "source": "network \"update\" \"bio\" inputs.bio.join(\"\\n\").strip()"
                      },
                      {
                        "type": "str",
                        "data": "\"update\""
                      },
                      {
                        "type": "str",
                        "data": "\"bio\""
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "inputs"
                          },
                          {
                            "type": "var",
                            "data": "bio"
                          },
                          {
                            "type": "mtv",
                            "data": "join",
                            "parameters": [
                              {
                                "type": "str",
                                "data": "\"\\n\""
                              }
                            ]
                          },
                          {
                            "type": "mtv",
                            "data": "strip",
                            "parameters": []
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-70"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -70
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "textbox",
            "source": "textbox w 100 \"bio\" 10 {\n    bg_colour: prim,\n    line_numbers: false\n  }"
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "num",
            "data": 100
          },
          {
            "type": "str",
            "data": "\"bio\""
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "obj",
            "data": {
              "bg_colour": {
                "type": "var",
                "data": "prim"
              },
              "line_numbers": {
                "type": "var",
                "data": false
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-100"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -100
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do \"Change Password\" w def() -> (\n    network \"update\" \"password\" \"Enter Your New Password\".ask().hashMD5()\n  )"
          },
          {
            "type": "str",
            "data": "\"Change Password\""
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "cmd",
                      "data": "network",
                      "source": "network \"update\" \"password\" \"Enter Your New Password\".ask().hashMD5()"
                    },
                    {
                      "type": "str",
                      "data": "\"update\""
                    },
                    {
                      "type": "str",
                      "data": "\"password\""
                    },
                    {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "str",
                          "data": "\"Enter Your New Password\""
                        },
                        {
                          "type": "mtv",
                          "data": "ask",
                          "parameters": []
                        },
                        {
                          "type": "mtv",
                          "data": "hashMD5",
                          "parameters": []
                        }
                      ]
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_y",
            "source": "change_y -20"
          },
          {
            "type": "num",
            "data": -20
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-50"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -50
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do \"Privacy\" w def() -> (\n    subcategory = \"Privacy\"\n  )"
          },
          {
            "type": "str",
            "data": "\"Privacy\""
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "left": {
                        "type": "var",
                        "data": "subcategory"
                      },
                      "right": {
                        "type": "str",
                        "data": "\"Privacy\""
                      }
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-50"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -50
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do \"File System Backups\" w def() -> (\n    subcategory = \"Backups\"\n  )"
          },
          {
            "type": "str",
            "data": "\"File System Backups\""
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "left": {
                        "type": "var",
                        "data": "subcategory"
                      },
                      "right": {
                        "type": "str",
                        "data": "\"Backups\""
                      }
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-50"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -50
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do \"Connections\" w def() -> (\n    subcategory = \"Connections\"\n  )"
          },
          {
            "type": "str",
            "data": "\"Connections\""
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "left": {
                        "type": "var",
                        "data": "subcategory"
                      },
                      "right": {
                        "type": "str",
                        "data": "\"Connections\""
                      }
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-70"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -70
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do \"Subscriptions\" w def() -> (\n    subcategory = \"Subscriptions\"\n  )"
          },
          {
            "type": "str",
            "data": "\"Subscriptions\""
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "left": {
                        "type": "var",
                        "data": "subcategory"
                      },
                      "right": {
                        "type": "str",
                        "data": "\"Subscriptions\""
                      }
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_y",
            "source": "change_y -20"
          },
          {
            "type": "num",
            "data": -20
          }
        ],
        [
          {
            "type": "cmd",
            "data": "set_x",
            "source": "set_x 0 : chy#-50"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "mod",
            "data": [
              "chy",
              {
                "type": "num",
                "data": -50
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do \"Logout\" w def() -> (\n    terminal \"su\"\n  )"
          },
          {
            "type": "str",
            "data": "\"Logout\""
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "cmd",
                      "data": "terminal",
                      "source": "terminal \"su\""
                    },
                    {
                      "type": "str",
                      "data": "\"su\""
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "+=",
            "left": {
              "type": "var",
              "data": "page_len"
            },
            "right": {
              "type": "num",
              "data": 70
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"apps\" (\n\n)"
    },
    {
      "type": "str",
      "data": "\"apps\""
    },
    {
      "type": "blk",
      "data": []
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"permissions\" (\n  file \"open\" \"user/Application Data/permissions.json\" \"onlyaccess\"\n  local perms = fileGet(4)\n  if perms.isType(\"object\").not() (\n    file \"set\" 4 {}\n    perms = {}\n  )\n  \n  local w = frame.width - 100\n  \n  if subcategory != \"none\" (\n    local my_perms = perms.[subcategory]\n    \n    goto 0 window.top - 100 + scroll_y\n    file \"open\" subcategory \"onlyaccess\"\n    file \"render\" 2\n    change_y -50\n    centext fileGet(2) 10 : c#txtc\n    change_y -40\n    centext fileGet(3) 9 : c#seco\n    \n    change_y -100\n    each perm my_perms (\n      square w 45 10 : c#prim\n      change_x w / -2 + 20\n      text perm 10 : c#txtc\n      set_x 0 : chy#-60\n    )\n    \n    return\n  )\n  local perm_keys = perms.getKeys()\n  \n  local ih = 60\n  //rattusdong was here\n  local count = (scroll_y / ih).round() - 1\n  \n  loop (frame.height / ih).ceiling() + 1 (\n    local count ++\n    if count > perm_keys.len (\n      continue\n    )\n    local uuid = perm_keys.[count]\n    goto 0 frame.top - (count - 0.5 * ih) + scroll_y\n    square w 45 10 : c#prim\n    if clicked (\n      subcategory = uuid\n    )\n    change_x w / -2 + 20\n    file \"uuid_exists\" uuid\n    if exists.not() or perms.[uuid].len == 0 (\n      file \"open\" \"user/application data/permissions.json\" \"onlyaccess\"\n      file \"set\" 4 perms.delete(uuid)\n      file \"close\"\n      continue\n    )\n    file \"open\" uuid \"onlyaccess\"\n    file \"render\" 1.5\n    change 25 -10\n    local x = x_position\n    text fileGet(3) 8 : c#seco\n    set_x x : chy#20\n    text fileGet(2) 10 : c#txtc\n    set_x w / 2 - 20 : chy#-10\n    icon \"right\" 0.8\n  )\n  \n  page_len = perm_keys.len * ih\n)"
    },
    {
      "type": "str",
      "data": "\"permissions\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "file",
            "source": "file \"open\" \"user/Application Data/permissions.json\" \"onlyaccess\""
          },
          {
            "type": "str",
            "data": "\"open\""
          },
          {
            "type": "str",
            "data": "\"user/Application Data/permissions.json\""
          },
          {
            "type": "str",
            "data": "\"onlyaccess\""
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "perms"
                }
              ]
            },
            "right": {
              "type": "fnc",
              "data": "fileGet",
              "parameters": [
                {
                  "type": "num",
                  "data": 4
                }
              ]
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if perms.isType(\"object\").not() (\n    file \"set\" 4 {}\n    perms = {}\n  )"
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "perms"
              },
              {
                "type": "mtv",
                "data": "isType",
                "parameters": [
                  {
                    "type": "str",
                    "data": "\"object\""
                  }
                ]
              },
              {
                "type": "mtv",
                "data": "not",
                "parameters": []
              }
            ]
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "file",
                  "source": "file \"set\" 4 {}"
                },
                {
                  "type": "str",
                  "data": "\"set\""
                },
                {
                  "type": "num",
                  "data": 4
                },
                {
                  "type": "obj",
                  "data": {}
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "perms"
                  },
                  "right": {
                    "type": "obj",
                    "data": {}
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "w"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 100
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory != \"none\" (\n    local my_perms = perms.[subcategory]\n    \n    goto 0 window.top - 100 + scroll_y\n    file \"open\" subcategory \"onlyaccess\"\n    file \"render\" 2\n    change_y -50\n    centext fileGet(2) 10 : c#txtc\n    change_y -40\n    centext fileGet(3) 9 : c#seco\n    \n    change_y -100\n    each perm my_perms (\n      square w 45 10 : c#prim\n      change_x w / -2 + 20\n      text perm 10 : c#txtc\n      set_x 0 : chy#-60\n    )\n    \n    return\n  )"
          },
          {
            "type": "cmp",
            "data": "!=",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"none\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "my_perms"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "perms"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "subcategory"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 window.top - 100 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "window"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 100
                    }
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "file",
                  "source": "file \"open\" subcategory \"onlyaccess\""
                },
                {
                  "type": "str",
                  "data": "\"open\""
                },
                {
                  "type": "var",
                  "data": "subcategory"
                },
                {
                  "type": "str",
                  "data": "\"onlyaccess\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "file",
                  "source": "file \"render\" 2"
                },
                {
                  "type": "str",
                  "data": "\"render\""
                },
                {
                  "type": "num",
                  "data": 2
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -50"
                },
                {
                  "type": "num",
                  "data": -50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext fileGet(2) 10 : c#txtc"
                },
                {
                  "type": "fnc",
                  "data": "fileGet",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 2
                    }
                  ]
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -40"
                },
                {
                  "type": "num",
                  "data": -40
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "centext",
                  "source": "centext fileGet(3) 9 : c#seco"
                },
                {
                  "type": "fnc",
                  "data": "fileGet",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 3
                    }
                  ]
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_y",
                  "source": "change_y -100"
                },
                {
                  "type": "num",
                  "data": -100
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "each",
                  "source": "each perm my_perms (\n      square w 45 10 : c#prim\n      change_x w / -2 + 20\n      text perm 10 : c#txtc\n      set_x 0 : chy#-60\n    )"
                },
                {
                  "type": "var",
                  "data": "perm"
                },
                {
                  "type": "var",
                  "data": "my_perms"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 45 10 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 45
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "change_x",
                        "source": "change_x w / -2 + 20"
                      },
                      {
                        "type": "opr",
                        "data": "+",
                        "left": {
                          "type": "opr",
                          "data": "/",
                          "left": {
                            "type": "var",
                            "data": "w"
                          },
                          "right": {
                            "type": "num",
                            "data": -2
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text perm 10 : c#txtc"
                      },
                      {
                        "type": "var",
                        "data": "perm"
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "set_x",
                        "source": "set_x 0 : chy#-60"
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chy",
                          {
                            "type": "num",
                            "data": -60
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return"
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "perm_keys"
                }
              ]
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "perms"
                },
                {
                  "type": "mtv",
                  "data": "getKeys",
                  "parameters": []
                }
              ]
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "ih"
                }
              ]
            },
            "right": {
              "type": "num",
              "data": 60
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "count"
                }
              ]
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "scroll_y"
                    },
                    "right": {
                      "type": "var",
                      "data": "ih"
                    }
                  },
                  {
                    "type": "mtv",
                    "data": "round",
                    "parameters": []
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 1
              }
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "loop",
            "source": "loop (frame.height / ih).ceiling() + 1 (\n    local count ++\n    if count > perm_keys.len (\n      continue\n    )\n    local uuid = perm_keys.[count]\n    goto 0 frame.top - (count - 0.5 * ih) + scroll_y\n    square w 45 10 : c#prim\n    if clicked (\n      subcategory = uuid\n    )\n    change_x w / -2 + 20\n    file \"uuid_exists\" uuid\n    if exists.not() or perms.[uuid].len == 0 (\n      file \"open\" \"user/application data/permissions.json\" \"onlyaccess\"\n      file \"set\" 4 perms.delete(uuid)\n      file \"close\"\n      continue\n    )\n    file \"open\" uuid \"onlyaccess\"\n    file \"render\" 1.5\n    change 25 -10\n    local x = x_position\n    text fileGet(3) 8 : c#seco\n    set_x x : chy#20\n    text fileGet(2) 10 : c#txtc\n    set_x w / 2 - 20 : chy#-10\n    icon \"right\" 0.8\n  )"
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "opr",
                  "data": "/",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "frame"
                      },
                      {
                        "type": "var",
                        "data": "height"
                      }
                    ]
                  },
                  "right": {
                    "type": "var",
                    "data": "ih"
                  }
                },
                {
                  "type": "mtv",
                  "data": "ceiling",
                  "parameters": []
                }
              ]
            },
            "right": {
              "type": "num",
              "data": 1
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "local",
                  "source": "local count ++"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "var",
                    "data": "count"
                  },
                  "right": {
                    "type": "num",
                    "data": 0
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if count > perm_keys.len (\n      continue\n    )"
                },
                {
                  "type": "cmp",
                  "data": ">",
                  "left": {
                    "type": "var",
                    "data": "count"
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "perm_keys"
                      },
                      {
                        "type": "var",
                        "data": "len"
                      }
                    ]
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "continue",
                        "source": "continue"
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "uuid"
                      }
                    ]
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "perm_keys"
                      },
                      {
                        "type": "mtv",
                        "data": "item",
                        "parameters": [
                          {
                            "type": "var",
                            "data": "count"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto 0 frame.top - (count - 0.5 * ih) + scroll_y"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "frame"
                        },
                        {
                          "type": "var",
                          "data": "top"
                        }
                      ]
                    },
                    "right": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "var",
                          "data": "count"
                        },
                        "right": {
                          "type": "num",
                          "data": 0.5
                        }
                      },
                      "right": {
                        "type": "var",
                        "data": "ih"
                      }
                    }
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 45 10 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 45
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if clicked (\n      subcategory = uuid\n    )"
                },
                {
                  "type": "var",
                  "data": "clicked"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "subcategory"
                        },
                        "right": {
                          "type": "var",
                          "data": "uuid"
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x w / -2 + 20"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": -2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 20
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "file",
                  "source": "file \"uuid_exists\" uuid"
                },
                {
                  "type": "str",
                  "data": "\"uuid_exists\""
                },
                {
                  "type": "var",
                  "data": "uuid"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if exists.not() or perms.[uuid].len == 0 (\n      file \"open\" \"user/application data/permissions.json\" \"onlyaccess\"\n      file \"set\" 4 perms.delete(uuid)\n      file \"close\"\n      continue\n    )"
                },
                {
                  "type": "log",
                  "data": "or",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "exists"
                      },
                      {
                        "type": "mtv",
                        "data": "not",
                        "parameters": []
                      }
                    ]
                  },
                  "right": {
                    "type": "cmp",
                    "data": "==",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "perms"
                        },
                        {
                          "type": "mtv",
                          "data": "item",
                          "parameters": [
                            {
                              "type": "var",
                              "data": "uuid"
                            }
                          ]
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 0
                    }
                  }
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"open\" \"user/application data/permissions.json\" \"onlyaccess\""
                      },
                      {
                        "type": "str",
                        "data": "\"open\""
                      },
                      {
                        "type": "str",
                        "data": "\"user/application data/permissions.json\""
                      },
                      {
                        "type": "str",
                        "data": "\"onlyaccess\""
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"set\" 4 perms.delete(uuid)"
                      },
                      {
                        "type": "str",
                        "data": "\"set\""
                      },
                      {
                        "type": "num",
                        "data": 4
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "perms"
                          },
                          {
                            "type": "mtv",
                            "data": "delete",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "uuid"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "file",
                        "source": "file \"close\""
                      },
                      {
                        "type": "str",
                        "data": "\"close\""
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "continue",
                        "source": "continue"
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "file",
                  "source": "file \"open\" uuid \"onlyaccess\""
                },
                {
                  "type": "str",
                  "data": "\"open\""
                },
                {
                  "type": "var",
                  "data": "uuid"
                },
                {
                  "type": "str",
                  "data": "\"onlyaccess\""
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "file",
                  "source": "file \"render\" 1.5"
                },
                {
                  "type": "str",
                  "data": "\"render\""
                },
                {
                  "type": "num",
                  "data": 1.5
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change",
                  "source": "change 25 -10"
                },
                {
                  "type": "num",
                  "data": 25
                },
                {
                  "type": "num",
                  "data": -10
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "x"
                      }
                    ]
                  },
                  "right": {
                    "type": "var",
                    "data": "x_position"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text fileGet(3) 8 : c#seco"
                },
                {
                  "type": "fnc",
                  "data": "fileGet",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 3
                    }
                  ]
                },
                {
                  "type": "num",
                  "data": 8
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x x : chy#20"
                },
                {
                  "type": "var",
                  "data": "x"
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": 20
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text fileGet(2) 10 : c#txtc"
                },
                {
                  "type": "fnc",
                  "data": "fileGet",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 2
                    }
                  ]
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x w / 2 - 20 : chy#-10"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": 2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 20
                  }
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -10
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"right\" 0.8"
                },
                {
                  "type": "str",
                  "data": "\"right\""
                },
                {
                  "type": "num",
                  "data": 0.8
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "page_len"
            },
            "right": {
              "type": "opr",
              "data": "*",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "perm_keys"
                  },
                  {
                    "type": "var",
                    "data": "len"
                  }
                ]
              },
              "right": {
                "type": "var",
                "data": "ih"
              }
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"bluetooth_page\" (\n  goto 0 frame.top - 40 + scroll_y\n  w = frame.width - 100\n  local connection = 0\n  local changePage = def() -> (\n    \n  )\n  local devices = roturlink.bluetooth.devices.filter(v -> (v.name != \"unknown\")).sortBy(\"rssi\").reverse()\n  \n  inputs.bluetooth = roturlink.bluetooth.enabled\n  setting_do devices.len ++ \" Devices\" w def() -> ()\n  change_y -10\n  \n  each device devices (\n    set_x 0 : chy#-50\n    setting_do device.name w changePage\n    \n    set_x w / 2 - 20\n    connection = round((device.rssi + 100).clamp(0, 100) / 25)\n \n    icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco\n    c txtc\n    icon [\n      \"\",\n      \"w 4 dot 0 -6\",\n      \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n      \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n    ].[connection + 1] 0.8\n  )\n  \n  page_len = devices.len + 1 * 50\n)"
    },
    {
      "type": "str",
      "data": "\"bluetooth_page\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "goto",
            "source": "goto 0 frame.top - 40 + scroll_y"
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "opr",
            "data": "+",
            "left": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "top"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 40
              }
            },
            "right": {
              "type": "var",
              "data": "scroll_y"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "w"
            },
            "right": {
              "type": "opr",
              "data": "-",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "frame"
                  },
                  {
                    "type": "var",
                    "data": "width"
                  }
                ]
              },
              "right": {
                "type": "num",
                "data": 100
              }
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "connection"
                }
              ]
            },
            "right": {
              "type": "num",
              "data": 0
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "changePage"
                }
              ]
            },
            "right": {
              "type": "fnc",
              "data": "function",
              "parameters": [
                {
                  "type": "str",
                  "data": ""
                },
                {
                  "type": "blk",
                  "data": []
                }
              ]
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "this"
                },
                {
                  "type": "var",
                  "data": "devices"
                }
              ]
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "roturlink"
                },
                {
                  "type": "var",
                  "data": "bluetooth"
                },
                {
                  "type": "var",
                  "data": "devices"
                },
                {
                  "type": "mtv",
                  "data": "filter",
                  "parameters": [
                    {
                      "type": "fnc",
                      "data": "function",
                      "parameters": [
                        {
                          "type": "str",
                          "data": ""
                        },
                        {
                          "type": "cmp",
                          "data": "!=",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "v"
                              },
                              {
                                "type": "var",
                                "data": "name"
                              }
                            ]
                          },
                          "right": {
                            "type": "str",
                            "data": "\"unknown\""
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "mtv",
                  "data": "sortBy",
                  "parameters": [
                    {
                      "type": "str",
                      "data": "\"rssi\""
                    }
                  ]
                },
                {
                  "type": "mtv",
                  "data": "reverse",
                  "parameters": []
                }
              ]
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "inputs"
                },
                {
                  "type": "var",
                  "data": "bluetooth"
                }
              ]
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "roturlink"
                },
                {
                  "type": "var",
                  "data": "bluetooth"
                },
                {
                  "type": "var",
                  "data": "enabled"
                }
              ]
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "setting_do",
            "source": "setting_do devices.len ++ \" Devices\" w def() -> ()"
          },
          {
            "type": "opr",
            "data": "++",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "devices"
                },
                {
                  "type": "var",
                  "data": "len"
                }
              ]
            },
            "right": {
              "type": "str",
              "data": "\" Devices\""
            }
          },
          {
            "type": "var",
            "data": "w"
          },
          {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": ""
              },
              {
                "type": "num",
                "data": 0
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_y",
            "source": "change_y -10"
          },
          {
            "type": "num",
            "data": -10
          }
        ],
        [
          {
            "type": "cmd",
            "data": "each",
            "source": "each device devices (\n    set_x 0 : chy#-50\n    setting_do device.name w changePage\n    \n    set_x w / 2 - 20\n    connection = round((device.rssi + 100).clamp(0, 100) / 25)\n \n    icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco\n    c txtc\n    icon [\n      \"\",\n      \"w 4 dot 0 -6\",\n      \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n      \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n    ].[connection + 1] 0.8\n  )"
          },
          {
            "type": "var",
            "data": "device"
          },
          {
            "type": "var",
            "data": "devices"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x 0 : chy#-50"
                },
                {
                  "type": "num",
                  "data": 0
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -50
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "setting_do",
                  "source": "setting_do device.name w changePage"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "device"
                    },
                    {
                      "type": "var",
                      "data": "name"
                    }
                  ]
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "var",
                  "data": "changePage"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x w / 2 - 20"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": 2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 20
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "connection"
                  },
                  "right": {
                    "type": "fnc",
                    "data": "round",
                    "parameters": [
                      {
                        "type": "opr",
                        "data": "/",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "opr",
                              "data": "+",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "device"
                                  },
                                  {
                                    "type": "var",
                                    "data": "rssi"
                                  }
                                ]
                              },
                              "right": {
                                "type": "num",
                                "data": 100
                              }
                            },
                            {
                              "type": "mtv",
                              "data": "clamp",
                              "parameters": [
                                {
                                  "type": "num",
                                  "data": 0
                                },
                                {
                                  "type": "num",
                                  "data": 100
                                }
                              ]
                            }
                          ]
                        },
                        "right": {
                          "type": "num",
                          "data": 25
                        }
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\" 0.8 : c#seco"
                },
                {
                  "type": "str",
                  "data": "\"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\""
                },
                {
                  "type": "num",
                  "data": 0.8
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c txtc"
                },
                {
                  "type": "var",
                  "data": "txtc"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon [\n      \"\",\n      \"w 4 dot 0 -6\",\n      \"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\",\n      \"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\"\n    ].[connection + 1] 0.8"
                },
                {
                  "type": "arr",
                  "data": [
                    {
                      "type": "str",
                      "data": "\"\""
                    },
                    {
                      "type": "str",
                      "data": "\"w 4 dot 0 -6\""
                    },
                    {
                      "type": "str",
                      "data": "\"w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\""
                    },
                    {
                      "type": "str",
                      "data": "\"w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6\""
                    }
                  ]
                },
                {
                  "type": "num",
                  "data": 0.8
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "page_len"
            },
            "right": {
              "type": "opr",
              "data": "*",
              "left": {
                "type": "opr",
                "data": "+",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "devices"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                "right": {
                  "type": "num",
                  "data": 1
                }
              },
              "right": {
                "type": "num",
                "data": 50
              }
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"info\" (\n  loc 2 2 0 0\n  configtext \"lineheight\" 0.9\n  text info_string 10 : c#txtc\n  configtext \"lineheight\" 1\n)"
    },
    {
      "type": "str",
      "data": "\"info\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "loc",
            "source": "loc 2 2 0 0"
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 2
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 0
          }
        ],
        [
          {
            "type": "cmd",
            "data": "configtext",
            "source": "configtext \"lineheight\" 0.9"
          },
          {
            "type": "str",
            "data": "\"lineheight\""
          },
          {
            "type": "num",
            "data": 0.9
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text info_string 10 : c#txtc"
          },
          {
            "type": "var",
            "data": "info_string"
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "configtext",
            "source": "configtext \"lineheight\" 1"
          },
          {
            "type": "str",
            "data": "\"lineheight\""
          },
          {
            "type": "num",
            "data": 1
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "def",
      "source": "def \"credits\" (\n  if subcategory == \"none\" (\n    page_len = 290\n    w = frame_width / 2 - 50\n    loc 4 2 2.5 -95 + scroll_y\n    square w 150 20 : c#prim\n    square w 150 15 : c#global_accent\n    square w 150 8 : c#prim\n    c txtc\n    x = x_position\n    change_x -65\n    icon \"w 1 ellipse 0 0 10 0.5 100 ellipse 0 0 10 0.5 160 ellipse 0 0 10 0.5 220\" 1.3\n    text \"roturTw\" 15 : chx#30\n    change -25 -18\n    text \"v5\" 8\n    set_x x : chy#-105\n    square w 40 20 : c#prim\n    if clicked (\n      subcategory = \"Extensions\"\n      extensions = \"Object.keys(Object.fromEntries(vm.extensionManager._loadedExtensions))\".eval()\n      extensions.prepend(\"Total:\" + extensions.len)\n    )\n    change_x w / -2 + 10\n    text \"Full Extensions List >\" 9 -100 : c#txtc\n    \n    set_x x : chy#-70\n    square w 40 20 : c#prim\n    if clicked (\n      subcategory = \"Community\"\n    )\n    change_x w / -2 + 10\n    text \"Community >\" 9 -100 : c#txtc\n\n    \n    loc -4 2 -2.5 -95 + scroll_y\n    square w 150 20 : c#prim\n    x = x_position\n    change w / -2 + 30 40\n    image \"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Resources/turbowarp_logo.png\" 50 50\n    change_x 30\n    text \"TurboWarp\" 16 : c#txtc\n    change -200 -45\n    local y = y_position\n    text \"Thanks to GarboMuffin and the scratch team for making TurboWarp possible\".wrapText(w / 9 - 1) 9\n    goto x y - 120\n    square w 40 20 : c#prim\n    if onclick (\n      http \"newtab\" \"vm.runtime.platform.url\".eval()\n    )\n    change_x w / -2 + 10\n    text \"Made With \" ++ \"vm.runtime.platform.name\".eval() 10 : c#txtc\n    goto x y - 190\n    square w 40 20 : c#prim\n    if clicked (\n      subcategory = \"Contributors\"\n    )\n    change_x w / -2 + 10\n    text \"Github Contributors >\" 9 -100 : c#txtc\n  )\n  if subcategory == \"Extensions\" (\n    w = frame_width - 25\n    for count extensions.len (\n      y = count - 0.5 * -60 + scroll_y\n      loc 999 2 0 y\n      square w 40 15 1 : c#prim\n      if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )\n      loc 2 2 15 y\n      text extensions.[count] 9 : c#txtc\n    )\n    page_len = extensions.len * 60\n  )\n  if subcategory == \"Contributors\" (\n    w = frame_width - 25\n    for count contributors.len (\n      local cur @= contributors.[count]\n      y = count - 0.5 * -60 + scroll_y\n      loc 999 2 0 y\n      square w 40 15 1 : c#prim\n      if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )\n      loc 2 2 30 y\n      image cur.avatar_url 40 40\n      text cur.login 9 : c#txtc chx#30\n      \n      text \"(\" ++ cur.contributions ++ \" commits)\" 8 : chx#10\n    )\n    page_len = contributors.len * 60\n  )\n  if subcategory == \"Community\" (\n    loc 2 2 110 -30\n    button \"My Patreon\" 200 25 10 : c#prim\n    if onclick (\n      http \"newtab\" \"https://www.patreon.com/user?u=51594743\"\n    )\n    loc 2 2 10 -70\n    text \"Patreon Supporters:\" 10 : c#txtc\n    supporters = [\n      \"--- OriginDrive ---\",\n      \"ThePandaDev\",\n      \"Stormy\",\n      \"\",\n      \"--- Supporter ---\",\n      \"plopa 1\",\n      \"Random Content Generator\"\n    ]\n\n    loc 2 2 10 -100\n    count = floor(scroll_y / 20)\n    loop floor(frame.height / 20) (\n      count ++\n      loc 2 2 10 count * -20 + scroll_y - 100\n      text supporters.[count] 10\n    )\n    page_len = supporters.len * 20 + 100\n  )\n)"
    },
    {
      "type": "str",
      "data": "\"credits\""
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"none\" (\n    page_len = 290\n    w = frame_width / 2 - 50\n    loc 4 2 2.5 -95 + scroll_y\n    square w 150 20 : c#prim\n    square w 150 15 : c#global_accent\n    square w 150 8 : c#prim\n    c txtc\n    x = x_position\n    change_x -65\n    icon \"w 1 ellipse 0 0 10 0.5 100 ellipse 0 0 10 0.5 160 ellipse 0 0 10 0.5 220\" 1.3\n    text \"roturTw\" 15 : chx#30\n    change -25 -18\n    text \"v5\" 8\n    set_x x : chy#-105\n    square w 40 20 : c#prim\n    if clicked (\n      subcategory = \"Extensions\"\n      extensions = \"Object.keys(Object.fromEntries(vm.extensionManager._loadedExtensions))\".eval()\n      extensions.prepend(\"Total:\" + extensions.len)\n    )\n    change_x w / -2 + 10\n    text \"Full Extensions List >\" 9 -100 : c#txtc\n    \n    set_x x : chy#-70\n    square w 40 20 : c#prim\n    if clicked (\n      subcategory = \"Community\"\n    )\n    change_x w / -2 + 10\n    text \"Community >\" 9 -100 : c#txtc\n\n    \n    loc -4 2 -2.5 -95 + scroll_y\n    square w 150 20 : c#prim\n    x = x_position\n    change w / -2 + 30 40\n    image \"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Resources/turbowarp_logo.png\" 50 50\n    change_x 30\n    text \"TurboWarp\" 16 : c#txtc\n    change -200 -45\n    local y = y_position\n    text \"Thanks to GarboMuffin and the scratch team for making TurboWarp possible\".wrapText(w / 9 - 1) 9\n    goto x y - 120\n    square w 40 20 : c#prim\n    if onclick (\n      http \"newtab\" \"vm.runtime.platform.url\".eval()\n    )\n    change_x w / -2 + 10\n    text \"Made With \" ++ \"vm.runtime.platform.name\".eval() 10 : c#txtc\n    goto x y - 190\n    square w 40 20 : c#prim\n    if clicked (\n      subcategory = \"Contributors\"\n    )\n    change_x w / -2 + 10\n    text \"Github Contributors >\" 9 -100 : c#txtc\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"none\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "num",
                    "data": 290
                  }
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "opr",
                      "data": "/",
                      "left": {
                        "type": "var",
                        "data": "frame_width"
                      },
                      "right": {
                        "type": "num",
                        "data": 2
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 50
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 4 2 2.5 -95 + scroll_y"
                },
                {
                  "type": "num",
                  "data": 4
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2.5
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -95
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 150 20 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 150
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 150 15 : c#global_accent"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 150
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "global_accent"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 150 8 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 150
                },
                {
                  "type": "num",
                  "data": 8
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "c",
                  "source": "c txtc"
                },
                {
                  "type": "var",
                  "data": "txtc"
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "x"
                  },
                  "right": {
                    "type": "var",
                    "data": "x_position"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x -65"
                },
                {
                  "type": "num",
                  "data": -65
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "icon",
                  "source": "icon \"w 1 ellipse 0 0 10 0.5 100 ellipse 0 0 10 0.5 160 ellipse 0 0 10 0.5 220\" 1.3"
                },
                {
                  "type": "str",
                  "data": "\"w 1 ellipse 0 0 10 0.5 100 ellipse 0 0 10 0.5 160 ellipse 0 0 10 0.5 220\""
                },
                {
                  "type": "num",
                  "data": 1.3
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"roturTw\" 15 : chx#30"
                },
                {
                  "type": "str",
                  "data": "\"roturTw\""
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "chx",
                    {
                      "type": "num",
                      "data": 30
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change",
                  "source": "change -25 -18"
                },
                {
                  "type": "num",
                  "data": -25
                },
                {
                  "type": "num",
                  "data": -18
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"v5\" 8"
                },
                {
                  "type": "str",
                  "data": "\"v5\""
                },
                {
                  "type": "num",
                  "data": 8
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x x : chy#-105"
                },
                {
                  "type": "var",
                  "data": "x"
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -105
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 40 20 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 40
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if clicked (\n      subcategory = \"Extensions\"\n      extensions = \"Object.keys(Object.fromEntries(vm.extensionManager._loadedExtensions))\".eval()\n      extensions.prepend(\"Total:\" + extensions.len)\n    )"
                },
                {
                  "type": "var",
                  "data": "clicked"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "subcategory"
                        },
                        "right": {
                          "type": "str",
                          "data": "\"Extensions\""
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "extensions"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "str",
                              "data": "\"Object.keys(Object.fromEntries(vm.extensionManager._loadedExtensions))\""
                            },
                            {
                              "type": "mtv",
                              "data": "eval",
                              "parameters": []
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "left": {
                          "type": "var",
                          "data": "extensions"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "extensions"
                            },
                            {
                              "type": "mtv",
                              "data": "prepend",
                              "parameters": [
                                {
                                  "type": "opr",
                                  "data": "+",
                                  "left": {
                                    "type": "str",
                                    "data": "\"Total:\""
                                  },
                                  "right": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "extensions"
                                      },
                                      {
                                        "type": "var",
                                        "data": "len"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x w / -2 + 10"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": -2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 10
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Full Extensions List >\" 9 -100 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Full Extensions List >\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "num",
                  "data": -100
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "set_x",
                  "source": "set_x x : chy#-70"
                },
                {
                  "type": "var",
                  "data": "x"
                },
                {
                  "type": "mod",
                  "data": [
                    "chy",
                    {
                      "type": "num",
                      "data": -70
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 40 20 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 40
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if clicked (\n      subcategory = \"Community\"\n    )"
                },
                {
                  "type": "var",
                  "data": "clicked"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "subcategory"
                        },
                        "right": {
                          "type": "str",
                          "data": "\"Community\""
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x w / -2 + 10"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": -2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 10
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Community >\" 9 -100 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Community >\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "num",
                  "data": -100
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc -4 2 -2.5 -95 + scroll_y"
                },
                {
                  "type": "num",
                  "data": -4
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": -2.5
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "num",
                    "data": -95
                  },
                  "right": {
                    "type": "var",
                    "data": "scroll_y"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 150 20 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 150
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "x"
                  },
                  "right": {
                    "type": "var",
                    "data": "x_position"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change",
                  "source": "change w / -2 + 30 40"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": -2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 30
                  }
                },
                {
                  "type": "num",
                  "data": 40
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "image",
                  "source": "image \"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Resources/turbowarp_logo.png\" 50 50"
                },
                {
                  "type": "str",
                  "data": "\"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Resources/turbowarp_logo.png\""
                },
                {
                  "type": "num",
                  "data": 50
                },
                {
                  "type": "num",
                  "data": 50
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x 30"
                },
                {
                  "type": "num",
                  "data": 30
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"TurboWarp\" 16 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"TurboWarp\""
                },
                {
                  "type": "num",
                  "data": 16
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change",
                  "source": "change -200 -45"
                },
                {
                  "type": "num",
                  "data": -200
                },
                {
                  "type": "num",
                  "data": -45
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "this"
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ]
                  },
                  "right": {
                    "type": "var",
                    "data": "y_position"
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Thanks to GarboMuffin and the scratch team for making TurboWarp possible\".wrapText(w / 9 - 1) 9"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "str",
                      "data": "\"Thanks to GarboMuffin and the scratch team for making TurboWarp possible\""
                    },
                    {
                      "type": "mtv",
                      "data": "wrapText",
                      "parameters": [
                        {
                          "type": "opr",
                          "data": "-",
                          "left": {
                            "type": "opr",
                            "data": "/",
                            "left": {
                              "type": "var",
                              "data": "w"
                            },
                            "right": {
                              "type": "num",
                              "data": 9
                            }
                          },
                          "right": {
                            "type": "num",
                            "data": 1
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "num",
                  "data": 9
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto x y - 120"
                },
                {
                  "type": "var",
                  "data": "x"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 120
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 40 20 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 40
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n      http \"newtab\" \"vm.runtime.platform.url\".eval()\n    )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "http",
                        "source": "http \"newtab\" \"vm.runtime.platform.url\".eval()"
                      },
                      {
                        "type": "str",
                        "data": "\"newtab\""
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "str",
                            "data": "\"vm.runtime.platform.url\""
                          },
                          {
                            "type": "mtv",
                            "data": "eval",
                            "parameters": []
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x w / -2 + 10"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": -2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 10
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Made With \" ++ \"vm.runtime.platform.name\".eval() 10 : c#txtc"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "str",
                    "data": "\"Made With \""
                  },
                  "right": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "str",
                        "data": "\"vm.runtime.platform.name\""
                      },
                      {
                        "type": "mtv",
                        "data": "eval",
                        "parameters": []
                      }
                    ]
                  }
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "goto",
                  "source": "goto x y - 190"
                },
                {
                  "type": "var",
                  "data": "x"
                },
                {
                  "type": "opr",
                  "data": "-",
                  "left": {
                    "type": "var",
                    "data": "y"
                  },
                  "right": {
                    "type": "num",
                    "data": 190
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square w 40 20 : c#prim"
                },
                {
                  "type": "var",
                  "data": "w"
                },
                {
                  "type": "num",
                  "data": 40
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if clicked (\n      subcategory = \"Contributors\"\n    )"
                },
                {
                  "type": "var",
                  "data": "clicked"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "subcategory"
                        },
                        "right": {
                          "type": "str",
                          "data": "\"Contributors\""
                        }
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "change_x",
                  "source": "change_x w / -2 + 10"
                },
                {
                  "type": "opr",
                  "data": "+",
                  "left": {
                    "type": "opr",
                    "data": "/",
                    "left": {
                      "type": "var",
                      "data": "w"
                    },
                    "right": {
                      "type": "num",
                      "data": -2
                    }
                  },
                  "right": {
                    "type": "num",
                    "data": 10
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Github Contributors >\" 9 -100 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Github Contributors >\""
                },
                {
                  "type": "num",
                  "data": 9
                },
                {
                  "type": "num",
                  "data": -100
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"Extensions\" (\n    w = frame_width - 25\n    for count extensions.len (\n      y = count - 0.5 * -60 + scroll_y\n      loc 999 2 0 y\n      square w 40 15 1 : c#prim\n      if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )\n      loc 2 2 15 y\n      text extensions.[count] 9 : c#txtc\n    )\n    page_len = extensions.len * 60\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"Extensions\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "var",
                      "data": "frame_width"
                    },
                    "right": {
                      "type": "num",
                      "data": 25
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for count extensions.len (\n      y = count - 0.5 * -60 + scroll_y\n      loc 999 2 0 y\n      square w 40 15 1 : c#prim\n      if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )\n      loc 2 2 15 y\n      text extensions.[count] 9 : c#txtc\n    )"
                },
                {
                  "type": "var",
                  "data": "count"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "extensions"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "opr",
                              "data": "-",
                              "left": {
                                "type": "var",
                                "data": "count"
                              },
                              "right": {
                                "type": "num",
                                "data": 0.5
                              }
                            },
                            "right": {
                              "type": "num",
                              "data": -60
                            }
                          },
                          "right": {
                            "type": "var",
                            "data": "scroll_y"
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 999 2 0 y"
                      },
                      {
                        "type": "num",
                        "data": 999
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 40 15 1 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "num",
                        "data": 1
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 40 15 : c#seco"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 40 10 1 : c#prim"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "num",
                              "data": 1
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 15 y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text extensions.[count] 9 : c#txtc"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "extensions"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "count"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "extensions"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 60
                    }
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"Contributors\" (\n    w = frame_width - 25\n    for count contributors.len (\n      local cur @= contributors.[count]\n      y = count - 0.5 * -60 + scroll_y\n      loc 999 2 0 y\n      square w 40 15 1 : c#prim\n      if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )\n      loc 2 2 30 y\n      image cur.avatar_url 40 40\n      text cur.login 9 : c#txtc chx#30\n      \n      text \"(\" ++ cur.contributions ++ \" commits)\" 8 : chx#10\n    )\n    page_len = contributors.len * 60\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"Contributors\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "w"
                  },
                  "right": {
                    "type": "opr",
                    "data": "-",
                    "left": {
                      "type": "var",
                      "data": "frame_width"
                    },
                    "right": {
                      "type": "num",
                      "data": 25
                    }
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "for",
                  "source": "for count contributors.len (\n      local cur @= contributors.[count]\n      y = count - 0.5 * -60 + scroll_y\n      loc 999 2 0 y\n      square w 40 15 1 : c#prim\n      if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )\n      loc 2 2 30 y\n      image cur.avatar_url 40 40\n      text cur.login 9 : c#txtc chx#30\n      \n      text \"(\" ++ cur.contributions ++ \" commits)\" 8 : chx#10\n    )"
                },
                {
                  "type": "var",
                  "data": "count"
                },
                {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "contributors"
                    },
                    {
                      "type": "var",
                      "data": "len"
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "@=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this"
                            },
                            {
                              "type": "var",
                              "data": "cur"
                            }
                          ]
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "contributors"
                            },
                            {
                              "type": "mtv",
                              "data": "item",
                              "parameters": [
                                {
                                  "type": "var",
                                  "data": "count"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "opr",
                              "data": "-",
                              "left": {
                                "type": "var",
                                "data": "count"
                              },
                              "right": {
                                "type": "num",
                                "data": 0.5
                              }
                            },
                            "right": {
                              "type": "num",
                              "data": -60
                            }
                          },
                          "right": {
                            "type": "var",
                            "data": "scroll_y"
                          }
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 999 2 0 y"
                      },
                      {
                        "type": "num",
                        "data": 999
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 0
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "square",
                        "source": "square w 40 15 1 : c#prim"
                      },
                      {
                        "type": "var",
                        "data": "w"
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 15
                      },
                      {
                        "type": "num",
                        "data": 1
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "prim"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_touching (\n        square w 40 15 : c#seco\n        square w 40 10 1 : c#prim\n      )"
                      },
                      {
                        "type": "var",
                        "data": "mouse_touching"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 40 15 : c#seco"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 15
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "seco"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "square",
                              "source": "square w 40 10 1 : c#prim"
                            },
                            {
                              "type": "var",
                              "data": "w"
                            },
                            {
                              "type": "num",
                              "data": 40
                            },
                            {
                              "type": "num",
                              "data": 10
                            },
                            {
                              "type": "num",
                              "data": 1
                            },
                            {
                              "type": "mod",
                              "data": [
                                "c",
                                {
                                  "type": "var",
                                  "data": "prim"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 30 y"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 30
                      },
                      {
                        "type": "var",
                        "data": "y"
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "image",
                        "source": "image cur.avatar_url 40 40"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "cur"
                          },
                          {
                            "type": "var",
                            "data": "avatar_url"
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 40
                      },
                      {
                        "type": "num",
                        "data": 40
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text cur.login 9 : c#txtc chx#30"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "cur"
                          },
                          {
                            "type": "var",
                            "data": "login"
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 9
                      },
                      {
                        "type": "mod",
                        "data": [
                          "c",
                          {
                            "type": "var",
                            "data": "txtc"
                          }
                        ]
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chx",
                          {
                            "type": "num",
                            "data": 30
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text \"(\" ++ cur.contributions ++ \" commits)\" 8 : chx#10"
                      },
                      {
                        "type": "opr",
                        "data": "++",
                        "left": {
                          "type": "opr",
                          "data": "++",
                          "left": {
                            "type": "str",
                            "data": "\"(\""
                          },
                          "right": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "cur"
                              },
                              {
                                "type": "var",
                                "data": "contributions"
                              }
                            ]
                          }
                        },
                        "right": {
                          "type": "str",
                          "data": "\" commits)\""
                        }
                      },
                      {
                        "type": "num",
                        "data": 8
                      },
                      {
                        "type": "mod",
                        "data": [
                          "chx",
                          {
                            "type": "num",
                            "data": 10
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "*",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "contributors"
                        },
                        {
                          "type": "var",
                          "data": "len"
                        }
                      ]
                    },
                    "right": {
                      "type": "num",
                      "data": 60
                    }
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if subcategory == \"Community\" (\n    loc 2 2 110 -30\n    button \"My Patreon\" 200 25 10 : c#prim\n    if onclick (\n      http \"newtab\" \"https://www.patreon.com/user?u=51594743\"\n    )\n    loc 2 2 10 -70\n    text \"Patreon Supporters:\" 10 : c#txtc\n    supporters = [\n      \"--- OriginDrive ---\",\n      \"ThePandaDev\",\n      \"Stormy\",\n      \"\",\n      \"--- Supporter ---\",\n      \"plopa 1\",\n      \"Random Content Generator\"\n    ]\n\n    loc 2 2 10 -100\n    count = floor(scroll_y / 20)\n    loop floor(frame.height / 20) (\n      count ++\n      loc 2 2 10 count * -20 + scroll_y - 100\n      text supporters.[count] 10\n    )\n    page_len = supporters.len * 20 + 100\n  )"
          },
          {
            "type": "cmp",
            "data": "==",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"Community\""
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 110 -30"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 110
                },
                {
                  "type": "num",
                  "data": -30
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "button",
                  "source": "button \"My Patreon\" 200 25 10 : c#prim"
                },
                {
                  "type": "str",
                  "data": "\"My Patreon\""
                },
                {
                  "type": "num",
                  "data": 200
                },
                {
                  "type": "num",
                  "data": 25
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if onclick (\n      http \"newtab\" \"https://www.patreon.com/user?u=51594743\"\n    )"
                },
                {
                  "type": "var",
                  "data": "onclick"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "http",
                        "source": "http \"newtab\" \"https://www.patreon.com/user?u=51594743\""
                      },
                      {
                        "type": "str",
                        "data": "\"newtab\""
                      },
                      {
                        "type": "str",
                        "data": "\"https://www.patreon.com/user?u=51594743\""
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -70"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "num",
                  "data": -70
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "text",
                  "source": "text \"Patreon Supporters:\" 10 : c#txtc"
                },
                {
                  "type": "str",
                  "data": "\"Patreon Supporters:\""
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "txtc"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "supporters"
                  },
                  "right": {
                    "type": "arr",
                    "data": [
                      {
                        "type": "str",
                        "data": "\"--- OriginDrive ---\""
                      },
                      {
                        "type": "str",
                        "data": "\"ThePandaDev\""
                      },
                      {
                        "type": "str",
                        "data": "\"Stormy\""
                      },
                      {
                        "type": "str",
                        "data": "\"\""
                      },
                      {
                        "type": "str",
                        "data": "\"--- Supporter ---\""
                      },
                      {
                        "type": "str",
                        "data": "\"plopa 1\""
                      },
                      {
                        "type": "str",
                        "data": "\"Random Content Generator\""
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loc",
                  "source": "loc 2 2 10 -100"
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 2
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "num",
                  "data": -100
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "count"
                  },
                  "right": {
                    "type": "fnc",
                    "data": "floor",
                    "parameters": [
                      {
                        "type": "opr",
                        "data": "/",
                        "left": {
                          "type": "var",
                          "data": "scroll_y"
                        },
                        "right": {
                          "type": "num",
                          "data": 20
                        }
                      }
                    ]
                  }
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "loop",
                  "source": "loop floor(frame.height / 20) (\n      count ++\n      loc 2 2 10 count * -20 + scroll_y - 100\n      text supporters.[count] 10\n    )"
                },
                {
                  "type": "fnc",
                  "data": "floor",
                  "parameters": [
                    {
                      "type": "opr",
                      "data": "/",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "frame"
                          },
                          {
                            "type": "var",
                            "data": "height"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 20
                      }
                    }
                  ]
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "count",
                        "source": "count ++"
                      },
                      {
                        "type": "opr",
                        "data": "++"
                      },
                      {
                        "type": "num",
                        "data": 0
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "loc",
                        "source": "loc 2 2 10 count * -20 + scroll_y - 100"
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 2
                      },
                      {
                        "type": "num",
                        "data": 10
                      },
                      {
                        "type": "opr",
                        "data": "-",
                        "left": {
                          "type": "opr",
                          "data": "+",
                          "left": {
                            "type": "opr",
                            "data": "*",
                            "left": {
                              "type": "var",
                              "data": "count"
                            },
                            "right": {
                              "type": "num",
                              "data": -20
                            }
                          },
                          "right": {
                            "type": "var",
                            "data": "scroll_y"
                          }
                        },
                        "right": {
                          "type": "num",
                          "data": 100
                        }
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "text",
                        "source": "text supporters.[count] 10"
                      },
                      {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "supporters"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "count"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "num",
                        "data": 10
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "page_len"
                  },
                  "right": {
                    "type": "opr",
                    "data": "+",
                    "left": {
                      "type": "opr",
                      "data": "*",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "supporters"
                          },
                          {
                            "type": "var",
                            "data": "len"
                          }
                        ]
                      },
                      "right": {
                        "type": "num",
                        "data": 20
                      }
                    },
                    "right": {
                      "type": "num",
                      "data": 100
                    }
                  }
                }
              ]
            ]
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "networking"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": ""
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if new_network_data (\n    if packet.username != \"sys-rotur\" (\n      new_network_data = false\n      return\n    )\n    switch network_data_command (\n      case \"ping\"\n        ping.time = timestamp - ping.sent\n        break\n      case \"link\"\n        if packet.data == \"Failed\" (\n          say \"Unable to link to this account\"\n        )\n        break\n    )\n    new_network_data = false\n  )"
                },
                {
                  "type": "var",
                  "data": "new_network_data"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if packet.username != \"sys-rotur\" (\n      new_network_data = false\n      return\n    )"
                      },
                      {
                        "type": "cmp",
                        "data": "!=",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "packet"
                            },
                            {
                              "type": "var",
                              "data": "username"
                            }
                          ]
                        },
                        "right": {
                          "type": "str",
                          "data": "\"sys-rotur\""
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "var",
                                "data": "new_network_data"
                              },
                              "right": {
                                "type": "var",
                                "data": false
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "return",
                              "source": "return"
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "switch",
                        "source": "switch network_data_command (\n      case \"ping\"\n        ping.time = timestamp - ping.sent\n        break\n      case \"link\"\n        if packet.data == \"Failed\" (\n          say \"Unable to link to this account\"\n        )\n        break\n    )"
                      },
                      {
                        "type": "var",
                        "data": "network_data_command"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "case",
                              "source": "case \"ping\""
                            },
                            {
                              "type": "str",
                              "data": "\"ping\""
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "ping"
                                  },
                                  {
                                    "type": "var",
                                    "data": "time"
                                  }
                                ]
                              },
                              "right": {
                                "type": "opr",
                                "data": "-",
                                "left": {
                                  "type": "var",
                                  "data": "timestamp"
                                },
                                "right": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "ping"
                                    },
                                    {
                                      "type": "var",
                                      "data": "sent"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "break",
                              "source": "break"
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "case",
                              "source": "case \"link\""
                            },
                            {
                              "type": "str",
                              "data": "\"link\""
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if packet.data == \"Failed\" (\n          say \"Unable to link to this account\"\n        )"
                            },
                            {
                              "type": "cmp",
                              "data": "==",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "packet"
                                  },
                                  {
                                    "type": "var",
                                    "data": "data"
                                  }
                                ]
                              },
                              "right": {
                                "type": "str",
                                "data": "\"Failed\""
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "cmd",
                                    "data": "say",
                                    "source": "say \"Unable to link to this account\""
                                  },
                                  {
                                    "type": "str",
                                    "data": "\"Unable to link to this account\""
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "type": "cmd",
                              "data": "break",
                              "source": "break"
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "left": {
                          "type": "var",
                          "data": "new_network_data"
                        },
                        "right": {
                          "type": "var",
                          "data": false
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if passed_data == \"\" (\n  category = \"Account\"\n  subcategory = \"none\"\n) else (\n  passed_data.split(\"/\")\n  category = passed_data.[1]\n  subcategory = passed_data.[2]\n)"
    },
    {
      "type": "cmp",
      "data": "==",
      "left": {
        "type": "var",
        "data": "passed_data"
      },
      "right": {
        "type": "str",
        "data": "\"\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "category"
            },
            "right": {
              "type": "str",
              "data": "\"Account\""
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"none\""
            }
          }
        ]
      ]
    },
    {
      "type": "var",
      "data": "else"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=??",
            "left": {
              "type": "var",
              "data": "passed_data"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "passed_data"
                },
                {
                  "type": "mtv",
                  "data": "split",
                  "parameters": [
                    {
                      "type": "str",
                      "data": "\"/\""
                    }
                  ]
                }
              ]
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "category"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "passed_data"
                },
                {
                  "type": "mtv",
                  "data": "item",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 1
                    }
                  ]
                }
              ]
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "passed_data"
                },
                {
                  "type": "mtv",
                  "data": "item",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 2
                    }
                  ]
                }
              ]
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "save",
      "source": "save \"settings\" \"set_directory\""
    },
    {
      "type": "str",
      "data": "\"settings\""
    },
    {
      "type": "str",
      "data": "\"set_directory\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "file",
      "source": "file \"open\" user_folder ++ \".folder\""
    },
    {
      "type": "str",
      "data": "\"open\""
    },
    {
      "type": "opr",
      "data": "++",
      "left": {
        "type": "var",
        "data": "user_folder"
      },
      "right": {
        "type": "str",
        "data": "\".folder\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "ping"
      },
      "right": {
        "type": "obj",
        "data": {
          "sent": {
            "type": "var",
            "data": "timestamp"
          },
          "time": {
            "type": "num",
            "data": 0
          }
        }
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "current"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "file"
          },
          {
            "type": "mtv",
            "data": "item",
            "parameters": [
              {
                "type": "num",
                "data": 4
              }
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "files"
      },
      "right": {
        "type": "arr",
        "data": []
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "file_data"
      },
      "right": {
        "type": "str",
        "data": "\"\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "total_files"
      },
      "right": {
        "type": "num",
        "data": 0
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "contributors"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "str",
            "data": "\"https://raw.githubusercontent.com/Mistium/Origin-OS/refs/heads/main/contributors.json\""
          },
          {
            "type": "mtv",
            "data": "httpGet",
            "parameters": []
          },
          {
            "type": "mtv",
            "data": "JsonClean",
            "parameters": []
          },
          {
            "type": "mtv",
            "data": "filter",
            "parameters": [
              {
                "type": "fnc",
                "data": "function",
                "parameters": [
                  {
                    "type": "str",
                    "data": ""
                  },
                  {
                    "type": "cmp",
                    "data": "==",
                    "left": {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "v"
                        },
                        {
                          "type": "mtv",
                          "data": "item",
                          "parameters": [
                            {
                              "type": "str",
                              "data": "\"type\""
                            }
                          ]
                        }
                      ]
                    },
                    "right": {
                      "type": "str",
                      "data": "\"User\""
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "c_names"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "contributors"
          },
          {
            "type": "var",
            "data": "destr"
          },
          {
            "type": "mtv",
            "data": "getall",
            "parameters": [
              {
                "type": "str",
                "data": "\"username\""
              }
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "c_imgs"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "contributors"
          },
          {
            "type": "var",
            "data": "destr"
          },
          {
            "type": "mtv",
            "data": "getall",
            "parameters": [
              {
                "type": "str",
                "data": "\"avatar_url\""
              }
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "window",
      "source": "window \"dimensions\" 880 500"
    },
    {
      "type": "str",
      "data": "\"dimensions\""
    },
    {
      "type": "num",
      "data": 880
    },
    {
      "type": "num",
      "data": 500
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "window_accent"
      },
      "right": {
        "type": "var",
        "data": "global_accent"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "dock_location"
      },
      "right": {
        "type": "var",
        "data": "dock_location"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "media"
      },
      "right": {
        "type": "str",
        "data": "\"\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "segments"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "user"
          },
          {
            "type": "var",
            "data": "origin_dock"
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "accent_select"
      },
      "right": {
        "type": "str",
        "data": "\"\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "tier"
      },
      "right": {
        "type": "var",
        "data": "null"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "network_drive"
      },
      "right": {
        "type": "str",
        "data": "\"none\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "gotosubcategory"
      },
      "right": {
        "type": "str",
        "data": "\"\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "current_pfp"
      },
      "right": {
        "type": "str",
        "data": "\"\""
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "github_data"
      },
      "right": {
        "type": "str",
        "data": "\"Loading\""
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if \"wallpapers.json\".saveExists() (\n  wallpapers = \"wallpapers.json\".saveGet()\n) else (\n  wallpapers = []\n)"
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "str",
          "data": "\"wallpapers.json\""
        },
        {
          "type": "mtv",
          "data": "saveExists",
          "parameters": []
        }
      ]
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "wallpapers"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "str",
                  "data": "\"wallpapers.json\""
                },
                {
                  "type": "mtv",
                  "data": "saveGet",
                  "parameters": []
                }
              ]
            }
          }
        ]
      ]
    },
    {
      "type": "var",
      "data": "else"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "wallpapers"
            },
            "right": {
              "type": "arr",
              "data": []
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if wallpapers.len < 1 or wallpapers.istype(\"Array\").not (\n  wallpapers = [\n    \"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Wallpapers/originOS%20Dawn.png\",\n    \"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Wallpapers/originOS%20Rift.png\",\n    \"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Wallpapers/originOS%20Flow.png\",\n    \"https://images.pexels.com/photos/589810/pexels-photo-589810.jpeg\",\n    \"https://images.pexels.com/photos/1612351/pexels-photo-1612351.jpeg\",\n    \"https://images.pexels.com/photos/640781/pexels-photo-640781.jpeg\",\n    \"https://images.pexels.com/photos/7919/pexels-photo.jpg\",\n    \"https://images.pexels.com/photos/1366957/pexels-photo-1366957.jpeg\"\n  ]\n  save \"wallpapers.json\" \"set\" wallpapers\n)"
    },
    {
      "type": "log",
      "data": "or",
      "left": {
        "type": "cmp",
        "data": "<",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "wallpapers"
            },
            {
              "type": "var",
              "data": "len"
            }
          ]
        },
        "right": {
          "type": "num",
          "data": 1
        }
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "wallpapers"
          },
          {
            "type": "mtv",
            "data": "istype",
            "parameters": [
              {
                "type": "str",
                "data": "\"Array\""
              }
            ]
          },
          {
            "type": "var",
            "data": "not"
          }
        ]
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "wallpapers"
            },
            "right": {
              "type": "arr",
              "data": [
                {
                  "type": "str",
                  "data": "\"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Wallpapers/originOS%20Dawn.png\""
                },
                {
                  "type": "str",
                  "data": "\"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Wallpapers/originOS%20Rift.png\""
                },
                {
                  "type": "str",
                  "data": "\"https://raw.githubusercontent.com/Mistium/Origin-OS/main/Wallpapers/originOS%20Flow.png\""
                },
                {
                  "type": "str",
                  "data": "\"https://images.pexels.com/photos/589810/pexels-photo-589810.jpeg\""
                },
                {
                  "type": "str",
                  "data": "\"https://images.pexels.com/photos/1612351/pexels-photo-1612351.jpeg\""
                },
                {
                  "type": "str",
                  "data": "\"https://images.pexels.com/photos/640781/pexels-photo-640781.jpeg\""
                },
                {
                  "type": "str",
                  "data": "\"https://images.pexels.com/photos/7919/pexels-photo.jpg\""
                },
                {
                  "type": "str",
                  "data": "\"https://images.pexels.com/photos/1366957/pexels-photo-1366957.jpeg\""
                }
              ]
            }
          }
        ],
        [
          {
            "type": "cmd",
            "data": "save",
            "source": "save \"wallpapers.json\" \"set\" wallpapers"
          },
          {
            "type": "str",
            "data": "\"wallpapers.json\""
          },
          {
            "type": "str",
            "data": "\"set\""
          },
          {
            "type": "var",
            "data": "wallpapers"
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "themes"
      },
      "right": {
        "type": "obj",
        "data": {
          "dark": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#222222\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#555555\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#777777\""
              },
              "text": {
                "type": "str",
                "data": "\"#ffffff\""
              },
              "background": {
                "type": "str",
                "data": "\"#050505\""
              },
              "accent": {
                "type": "str",
                "data": "\"#57cdac\""
              }
            }
          },
          "midnight": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#111111\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#333333\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#555555\""
              },
              "text": {
                "type": "str",
                "data": "\"#ffffff\""
              },
              "background": {
                "type": "str",
                "data": "\"#000000\""
              },
              "accent": {
                "type": "str",
                "data": "\"#57cdac\""
              }
            }
          },
          "light": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#cccccc\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#e6e6e6\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#ffffff\""
              },
              "text": {
                "type": "str",
                "data": "\"#292929\""
              },
              "background": {
                "type": "str",
                "data": "\"#b0b0b0\""
              },
              "accent": {
                "type": "str",
                "data": "\"#57cdac\""
              }
            }
          },
          "ocean": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#1a1d28\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#313f4e\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#4f617d\""
              },
              "text": {
                "type": "str",
                "data": "\"#bae3ee\""
              },
              "background": {
                "type": "str",
                "data": "\"#090a0b\""
              },
              "accent": {
                "type": "str",
                "data": "\"#7cc2f8\""
              }
            }
          },
          "forest": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#1a2823\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#33523e\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#417656\""
              },
              "text": {
                "type": "str",
                "data": "\"#e5ffed\""
              },
              "background": {
                "type": "str",
                "data": "\"#090b0a\""
              },
              "accent": {
                "type": "str",
                "data": "\"#7ea59a\""
              }
            }
          },
          "mint": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#8fbcac\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#639274\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#07170e\""
              },
              "text": {
                "type": "str",
                "data": "\"#000000\""
              },
              "background": {
                "type": "str",
                "data": "\"#cde5dd\""
              },
              "accent": {
                "type": "str",
                "data": "\"#97f7dc\""
              }
            }
          },
          "candyfloss": {
            "type": "obj",
            "data": {
              "primary": {
                "type": "str",
                "data": "\"#9e8cb1\""
              },
              "secondary": {
                "type": "str",
                "data": "\"#eac5f2\""
              },
              "tertiary": {
                "type": "str",
                "data": "\"#170717\""
              },
              "text": {
                "type": "str",
                "data": "\"#000000\""
              },
              "background": {
                "type": "str",
                "data": "\"#cdb6d3\""
              },
              "accent": {
                "type": "str",
                "data": "\"#f8e0ff\""
              }
            }
          }
        }
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "system",
      "source": "system"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "ftkeys"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "file_types"
          },
          {
            "type": "mtv",
            "data": "getKeys",
            "parameters": []
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "ftvalues"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "file_types"
          },
          {
            "type": "mtv",
            "data": "getValues",
            "parameters": []
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "inputs"
          },
          {
            "type": "var",
            "data": "bio"
          }
        ]
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "user"
          },
          {
            "type": "var",
            "data": "bio"
          },
          {
            "type": "mtv",
            "data": "split",
            "parameters": [
              {
                "type": "str",
                "data": "\"\\n\""
              }
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "window",
      "source": "window \"set_dragbox\" [[2,2,260,0],[-2,2,-100,-40]]"
    },
    {
      "type": "str",
      "data": "\"set_dragbox\""
    },
    {
      "type": "arr",
      "data": [
        {
          "type": "arr",
          "data": [
            {
              "type": "num",
              "data": 2
            },
            {
              "type": "num",
              "data": 2
            },
            {
              "type": "num",
              "data": 260
            },
            {
              "type": "num",
              "data": 0
            }
          ]
        },
        {
          "type": "arr",
          "data": [
            null,
            {
              "type": "num",
              "data": 2
            },
            null,
            null
          ]
        }
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "terminal",
      "source": "terminal \"info\""
    },
    {
      "type": "str",
      "data": "\"info\""
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "info_string"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "terminal_output"
          },
          {
            "type": "mtv",
            "data": "join",
            "parameters": [
              {
                "type": "str",
                "data": "\"\\n\""
              }
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "genPfp"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": ""
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return \"https://avatars.rotur.dev/\" ++ username ++ \"?radius=30&random=\" ++ random(9999,9999999999)"
                },
                {
                  "type": "opr",
                  "data": "++",
                  "left": {
                    "type": "opr",
                    "data": "++",
                    "left": {
                      "type": "opr",
                      "data": "++",
                      "left": {
                        "type": "str",
                        "data": "\"https://avatars.rotur.dev/\""
                      },
                      "right": {
                        "type": "var",
                        "data": "username"
                      }
                    },
                    "right": {
                      "type": "str",
                      "data": "\"?radius=30&random=\""
                    }
                  },
                  "right": {
                    "type": "fnc",
                    "data": "random",
                    "parameters": [
                      {
                        "type": "num",
                        "data": 9999
                      },
                      {
                        "type": "num",
                        "data": 9999999999
                      }
                    ]
                  }
                }
              ]
            ]
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "original_pfp"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "user"
          },
          {
            "type": "var",
            "data": "pfp"
          }
        ]
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "pfp"
      },
      "right": {
        "type": "fnc",
        "data": "genPfp",
        "parameters": []
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "slider_brightness"
      },
      "right": {
        "type": "opr",
        "data": "/",
        "left": {
          "type": "qst",
          "data": "?",
          "left": {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "roturlink"
              },
              {
                "type": "var",
                "data": "enabled"
              }
            ]
          },
          "right": {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "roturlink"
              },
              {
                "type": "var",
                "data": "brightness"
              }
            ]
          },
          "right2": {
            "type": "num",
            "data": 100
          }
        },
        "right": {
          "type": "num",
          "data": 100
        }
      }
    }
  ],
  [
    {
      "type": "unk",
      "data": "mainloop:"
    }
  ],
  [
    {
      "type": "fnc",
      "data": "networking",
      "parameters": []
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if original_pfp != user.pfp (\n  pfp = genPfp()\n  original_pfp = user.pfp\n)"
    },
    {
      "type": "cmp",
      "data": "!=",
      "left": {
        "type": "var",
        "data": "original_pfp"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "user"
          },
          {
            "type": "var",
            "data": "pfp"
          }
        ]
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "pfp"
            },
            "right": {
              "type": "fnc",
              "data": "genPfp",
              "parameters": []
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "original_pfp"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "user"
                },
                {
                  "type": "var",
                  "data": "pfp"
                }
              ]
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "unk",
      "data": "glass:frame"
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "window"
        },
        {
          "type": "var",
          "data": "left"
        }
      ]
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "window"
        },
        {
          "type": "var",
          "data": "top"
        }
      ]
    },
    {
      "type": "opr",
      "data": "+",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window"
          },
          {
            "type": "var",
            "data": "left"
          }
        ]
      },
      "right": {
        "type": "num",
        "data": 215
      }
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "window"
        },
        {
          "type": "var",
          "data": "bottom"
        }
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "c",
      "source": "c window_colour"
    },
    {
      "type": "var",
      "data": "window_colour"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "pen",
      "source": "pen \"opacity\" 40"
    },
    {
      "type": "str",
      "data": "\"opacity\""
    },
    {
      "type": "num",
      "data": 40
    }
  ],
  [
    {
      "type": "cmd",
      "data": "icon",
      "source": "icon \"w 99999 dot 0 0\" 10"
    },
    {
      "type": "str",
      "data": "\"w 99999 dot 0 0\""
    },
    {
      "type": "num",
      "data": 10
    }
  ],
  [
    {
      "type": "cmd",
      "data": "pen",
      "source": "pen \"opacity\" 0"
    },
    {
      "type": "str",
      "data": "\"opacity\""
    },
    {
      "type": "num",
      "data": 0
    }
  ],
  [
    {
      "type": "cmd",
      "data": "frame",
      "source": "frame \"clear\""
    },
    {
      "type": "str",
      "data": "\"clear\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 105 -25"
    },
    {
      "type": "num",
      "data": 2
    },
    {
      "type": "num",
      "data": 2
    },
    {
      "type": "num",
      "data": 105
    },
    {
      "type": "num",
      "data": -25
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if category == \"Account\" (\n  square 190 30 15 : c#seco\n  square 190 30 10 : c#prim\n) else (\n  square 190 30 15 0 1\n)"
    },
    {
      "type": "cmp",
      "data": "==",
      "left": {
        "type": "var",
        "data": "category"
      },
      "right": {
        "type": "str",
        "data": "\"Account\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 190 30 15 : c#seco"
          },
          {
            "type": "num",
            "data": 190
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 15
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "seco"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 190 30 10 : c#prim"
          },
          {
            "type": "num",
            "data": 190
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "prim"
              }
            ]
          }
        ]
      ]
    },
    {
      "type": "var",
      "data": "else"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 190 30 15 0 1"
          },
          {
            "type": "num",
            "data": 190
          },
          {
            "type": "num",
            "data": 30
          },
          {
            "type": "num",
            "data": 15
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 1
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if onclick (\n  category = \"Account\"\n  subcategory = \"none\"\n)"
    },
    {
      "type": "var",
      "data": "onclick"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "category"
            },
            "right": {
              "type": "str",
              "data": "\"Account\""
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "str",
              "data": "\"none\""
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "icon",
      "source": "icon icn_code 0.8 : c#txtc chx#-80"
    },
    {
      "type": "var",
      "data": "icn_code"
    },
    {
      "type": "num",
      "data": 0.8
    },
    {
      "type": "mod",
      "data": [
        "c",
        {
          "type": "var",
          "data": "txtc"
        }
      ]
    },
    {
      "type": "mod",
      "data": [
        "chx",
        {
          "type": "num",
          "data": -80
        }
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "text",
      "source": "text user.username 10 : chx#30"
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "user"
        },
        {
          "type": "var",
          "data": "username"
        }
      ]
    },
    {
      "type": "num",
      "data": 10
    },
    {
      "type": "mod",
      "data": [
        "chx",
        {
          "type": "num",
          "data": 30
        }
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "set_x",
      "source": "set_x window.left + 25"
    },
    {
      "type": "opr",
      "data": "+",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window"
          },
          {
            "type": "var",
            "data": "left"
          }
        ]
      },
      "right": {
        "type": "num",
        "data": 25
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "change_y",
      "source": "change_y -70"
    },
    {
      "type": "num",
      "data": -70
    }
  ],
  [
    {
      "type": "cmd",
      "data": "DrawCategory",
      "source": "DrawCategory \"System\" \"w 2 cutcircle 0 0 12 4.5 150 cutcircle 0 0 7 5 150 line -2 -4 -8 -10\""
    },
    {
      "type": "str",
      "data": "\"System\""
    },
    {
      "type": "str",
      "data": "\"w 2 cutcircle 0 0 12 4.5 150 cutcircle 0 0 7 5 150 line -2 -4 -8 -10\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "DrawCategory",
      "source": "DrawCategory \"Style\" \"w 3 cutcircle 5 6 3 45 80 line 7.5 4 -4.5 -9 line 3.5 8.5 -9 -5 line -9 -5 -11 -11 line -4.5 -9 -11 -11\""
    },
    {
      "type": "str",
      "data": "\"Style\""
    },
    {
      "type": "str",
      "data": "\"w 3 cutcircle 5 6 3 45 80 line 7.5 4 -4.5 -9 line 3.5 8.5 -9 -5 line -9 -5 -11 -11 line -4.5 -9 -11 -11\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "DrawCategory",
      "source": "DrawCategory \"Network\" \"w 2.5 cutcircle 0 -5 14 0 45 cutcircle 0 -5 7 0 40 w 4 dot 0 -6\""
    },
    {
      "type": "str",
      "data": "\"Network\""
    },
    {
      "type": "str",
      "data": "\"w 2.5 cutcircle 0 -5 14 0 45 cutcircle 0 -5 7 0 40 w 4 dot 0 -6\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if roturlink.enabled (\n  DrawCategory \"Bluetooth\" \"w 3 line 0 10 0 -10 cont 5 -5 cont -5 5 line 0 10 5 5 cont -5 -5\"\n)"
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "roturlink"
        },
        {
          "type": "var",
          "data": "enabled"
        }
      ]
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "DrawCategory",
            "source": "DrawCategory \"Bluetooth\" \"w 3 line 0 10 0 -10 cont 5 -5 cont -5 5 line 0 10 5 5 cont -5 -5\""
          },
          {
            "type": "str",
            "data": "\"Bluetooth\""
          },
          {
            "type": "str",
            "data": "\"w 3 line 0 10 0 -10 cont 5 -5 cont -5 5 line 0 10 5 5 cont -5 -5\""
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "change_y",
      "source": "change_y -25"
    },
    {
      "type": "num",
      "data": -25
    }
  ],
  [
    {
      "type": "cmd",
      "data": "DrawCategory",
      "source": "DrawCategory \"Permissions\" \"key\""
    },
    {
      "type": "str",
      "data": "\"Permissions\""
    },
    {
      "type": "str",
      "data": "\"key\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "change_y",
      "source": "change_y -25"
    },
    {
      "type": "num",
      "data": -25
    }
  ],
  [
    {
      "type": "cmd",
      "data": "DrawCategory",
      "source": "DrawCategory \"Credits\" \"w 3 cutcircle -4.5 -10 5.5 0 90 cutcircle 4 -5.5 6 3 60 cutcircle -5 5 2 0 180 cutcircle 5 8 2 0 180\""
    },
    {
      "type": "str",
      "data": "\"Credits\""
    },
    {
      "type": "str",
      "data": "\"w 3 cutcircle -4.5 -10 5.5 0 90 cutcircle 4 -5.5 6 3 60 cutcircle -5 5 2 0 180 cutcircle 5 8 2 0 180\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 25 -25"
    },
    {
      "type": "num",
      "data": 2
    },
    {
      "type": "num",
      "data": 2
    },
    {
      "type": "num",
      "data": 25
    },
    {
      "type": "num",
      "data": -25
    }
  ],
  [
    {
      "type": "cmd",
      "data": "image",
      "source": "image pfp 35 35"
    },
    {
      "type": "var",
      "data": "pfp"
    },
    {
      "type": "num",
      "data": 35
    },
    {
      "type": "num",
      "data": 35
    }
  ],
  [
    {
      "type": "cmd",
      "data": "loc",
      "source": "loc 2 2 232 -25"
    },
    {
      "type": "num",
      "data": 2
    },
    {
      "type": "num",
      "data": 2
    },
    {
      "type": "num",
      "data": 232
    },
    {
      "type": "num",
      "data": -25
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if subcategory == \"none\" (\n  text category 10 : c#txtc\n) else (\n  change_x 10\n  square 20 20 15 0 1\n  if mouse_touching (\n    square 20 20 15 : c#seco\n    square 20 20 10 : c#prim\n  )\n  icon \"left-arrow\" 0.6 : c#txtc\n  if clicked (\n    subcategory = \"none\"\n  )\n  change_x 30\n  text subcategory 10\n)"
    },
    {
      "type": "cmp",
      "data": "==",
      "left": {
        "type": "var",
        "data": "subcategory"
      },
      "right": {
        "type": "str",
        "data": "\"none\""
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text category 10 : c#txtc"
          },
          {
            "type": "var",
            "data": "category"
          },
          {
            "type": "num",
            "data": 10
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ]
      ]
    },
    {
      "type": "var",
      "data": "else"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x 10"
          },
          {
            "type": "num",
            "data": 10
          }
        ],
        [
          {
            "type": "cmd",
            "data": "square",
            "source": "square 20 20 15 0 1"
          },
          {
            "type": "num",
            "data": 20
          },
          {
            "type": "num",
            "data": 20
          },
          {
            "type": "num",
            "data": 15
          },
          {
            "type": "num",
            "data": 0
          },
          {
            "type": "num",
            "data": 1
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if mouse_touching (\n    square 20 20 15 : c#seco\n    square 20 20 10 : c#prim\n  )"
          },
          {
            "type": "var",
            "data": "mouse_touching"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 20 20 15 : c#seco"
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 15
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "seco"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "square",
                  "source": "square 20 20 10 : c#prim"
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 20
                },
                {
                  "type": "num",
                  "data": 10
                },
                {
                  "type": "mod",
                  "data": [
                    "c",
                    {
                      "type": "var",
                      "data": "prim"
                    }
                  ]
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "icon",
            "source": "icon \"left-arrow\" 0.6 : c#txtc"
          },
          {
            "type": "str",
            "data": "\"left-arrow\""
          },
          {
            "type": "num",
            "data": 0.6
          },
          {
            "type": "mod",
            "data": [
              "c",
              {
                "type": "var",
                "data": "txtc"
              }
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if clicked (\n    subcategory = \"none\"\n  )"
          },
          {
            "type": "var",
            "data": "clicked"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "left": {
                    "type": "var",
                    "data": "subcategory"
                  },
                  "right": {
                    "type": "str",
                    "data": "\"none\""
                  }
                }
              ]
            ]
          }
        ],
        [
          {
            "type": "cmd",
            "data": "change_x",
            "source": "change_x 30"
          },
          {
            "type": "num",
            "data": 30
          }
        ],
        [
          {
            "type": "cmd",
            "data": "text",
            "source": "text subcategory 10"
          },
          {
            "type": "var",
            "data": "subcategory"
          },
          {
            "type": "num",
            "data": 10
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "c",
      "source": "c seco"
    },
    {
      "type": "var",
      "data": "seco"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "frame",
      "source": "frame window.left + 215 window.top - 47 window.right window.bottom page_len"
    },
    {
      "type": "opr",
      "data": "+",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window"
          },
          {
            "type": "var",
            "data": "left"
          }
        ]
      },
      "right": {
        "type": "num",
        "data": 215
      }
    },
    {
      "type": "opr",
      "data": "-",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window"
          },
          {
            "type": "var",
            "data": "top"
          }
        ]
      },
      "right": {
        "type": "num",
        "data": 47
      }
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "window"
        },
        {
          "type": "var",
          "data": "right"
        }
      ]
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "window"
        },
        {
          "type": "var",
          "data": "bottom"
        }
      ]
    },
    {
      "type": "var",
      "data": "page_len"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "page_len"
      },
      "right": {
        "type": "num",
        "data": 0
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "y"
      },
      "right": {
        "type": "opr",
        "data": "+",
        "left": {
          "type": "num",
          "data": -29
        },
        "right": {
          "type": "var",
          "data": "scroll_y"
        }
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "startx"
      },
      "right": {
        "type": "var",
        "data": "x_position"
      }
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "left": {
        "type": "var",
        "data": "location"
      },
      "right": {
        "type": "opr",
        "data": "+",
        "left": {
          "type": "var",
          "data": "category"
        },
        "right": {
          "type": "var",
          "data": "subcategory"
        }
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "switch",
      "source": "switch category (\n  case \"System\"\n    system\n    break\n  case \"Network\"\n    network_page\n    break\n  case \"Bluetooth\"\n    bluetooth_page\n    break\n  case \"Style\"\n    appearance\n    break\n  case \"Account\"\n    account\n    break\n  case \"Permissions\"\n    permissions\n    break\n  case \"Apps\"\n    apps\n    break\n  case \"credits\"\n    credits\n    break\n)"
    },
    {
      "type": "var",
      "data": "category"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"System\""
          },
          {
            "type": "str",
            "data": "\"System\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "system",
            "source": "system"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"Network\""
          },
          {
            "type": "str",
            "data": "\"Network\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "network_page",
            "source": "network_page"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"Bluetooth\""
          },
          {
            "type": "str",
            "data": "\"Bluetooth\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "bluetooth_page",
            "source": "bluetooth_page"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"Style\""
          },
          {
            "type": "str",
            "data": "\"Style\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "appearance",
            "source": "appearance"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"Account\""
          },
          {
            "type": "str",
            "data": "\"Account\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "account",
            "source": "account"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"Permissions\""
          },
          {
            "type": "str",
            "data": "\"Permissions\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "permissions",
            "source": "permissions"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"Apps\""
          },
          {
            "type": "str",
            "data": "\"Apps\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "apps",
            "source": "apps"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "case",
            "source": "case \"credits\""
          },
          {
            "type": "str",
            "data": "\"credits\""
          }
        ],
        [
          {
            "type": "cmd",
            "data": "credits",
            "source": "credits"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "break",
            "source": "break"
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if mouse_down.not \"can = True\""
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "mouse_down"
        },
        {
          "type": "var",
          "data": "not"
        }
      ]
    },
    {
      "type": "str",
      "data": "\"can = True\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "frame",
      "source": "frame \"clear\""
    },
    {
      "type": "str",
      "data": "\"clear\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if gotosubcategory != \"\" and mouse_down.not (\n  subcategory = gotosubcategory\n  gotosubcategory = \"\"\n)"
    },
    {
      "type": "log",
      "data": "and",
      "left": {
        "type": "cmp",
        "data": "!=",
        "left": {
          "type": "var",
          "data": "gotosubcategory"
        },
        "right": {
          "type": "str",
          "data": "\"\""
        }
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "mouse_down"
          },
          {
            "type": "var",
            "data": "not"
          }
        ]
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "subcategory"
            },
            "right": {
              "type": "var",
              "data": "gotosubcategory"
            }
          }
        ],
        [
          {
            "type": "asi",
            "data": "=",
            "left": {
              "type": "var",
              "data": "gotosubcategory"
            },
            "right": {
              "type": "str",
              "data": "\"\""
            }
          }
        ]
      ]
    }
  ],
  [
    {
      "type": "asi",
      "data": "=??",
      "left": {
        "type": "var",
        "data": "window"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window"
          },
          {
            "type": "mtv",
            "data": "show",
            "parameters": []
          }
        ]
      }
    }
  ],
  [
    {
      "type": "cmd",
      "data": "import",
      "source": "import \"win-buttons\""
    },
    {
      "type": "str",
      "data": "\"win-buttons\""
    }
  ]
]