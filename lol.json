[
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"windows\"",
      "line": 3
    },
    {
      "type": "str",
      "data": "request",
      "source": "\"request\""
    },
    {
      "type": "str",
      "data": "windows",
      "source": "\"windows\""
    }
  ],
  [
    {
      "type": "cmd",
      "data": "permission",
      "source": "permission \"request\" \"javascript\"",
      "line": 4
    },
    {
      "type": "str",
      "data": "request",
      "source": "\"request\""
    },
    {
      "type": "str",
      "data": "javascript",
      "source": "\"javascript\""
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "def checkCollision(x2,y2,w,h) (",
      "left": {
        "type": "var",
        "data": "checkCollision",
        "source": "def"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": "x2,y2,w,h",
            "source": "x2,y2,w,h"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "return",
                  "source": "return abs(mouse_x - x2) < w / 2 and abs(mouse_y - y2) < h / 2",
                  "line": 7
                },
                {
                  "type": "log",
                  "data": "and",
                  "source": "abs(mouse_x - x2) < w / 2 and abs(mouse_y - y2) < h / 2",
                  "left": {
                    "type": "cmp",
                    "data": "<",
                    "source": "abs(mouse_x - x2) < w / 2",
                    "left": {
                      "type": "fnc",
                      "data": "abs",
                      "parameters": [
                        {
                          "type": "opr",
                          "data": "-",
                          "source": "mouse_x - x2",
                          "left": {
                            "type": "var",
                            "data": "mouse_x",
                            "source": "mouse_x"
                          },
                          "right": {
                            "type": "var",
                            "data": "x2",
                            "source": "x2"
                          }
                        }
                      ],
                      "source": "abs(mouse_x - x2)"
                    },
                    "right": {
                      "type": "opr",
                      "data": "/",
                      "source": "w / 2",
                      "left": {
                        "type": "var",
                        "data": "w",
                        "source": "w"
                      },
                      "right": {
                        "type": "num",
                        "data": 2,
                        "source": "2"
                      }
                    }
                  },
                  "right": {
                    "type": "cmp",
                    "data": "<",
                    "source": "abs(mouse_y - y2) < h / 2",
                    "left": {
                      "type": "fnc",
                      "data": "abs",
                      "parameters": [
                        {
                          "type": "opr",
                          "data": "-",
                          "source": "mouse_y - y2",
                          "left": {
                            "type": "var",
                            "data": "mouse_y",
                            "source": "mouse_y"
                          },
                          "right": {
                            "type": "var",
                            "data": "y2",
                            "source": "y2"
                          }
                        }
                      ],
                      "source": "abs(mouse_y - y2)"
                    },
                    "right": {
                      "type": "opr",
                      "data": "/",
                      "source": "h / 2",
                      "left": {
                        "type": "var",
                        "data": "h",
                        "source": "h"
                      },
                      "right": {
                        "type": "num",
                        "data": 2,
                        "source": "2"
                      }
                    }
                  }
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ]
      },
      "line": 6
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if origin.version < 579 (",
      "line": 10
    },
    {
      "type": "cmp",
      "data": "<",
      "source": "origin.version < 579",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "origin",
            "source": "origin"
          },
          {
            "type": "var",
            "data": "version",
            "source": "version"
          }
        ],
        "source": "origin.version"
      },
      "right": {
        "type": "num",
        "data": 579,
        "source": "579"
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=??",
            "source": "window.close()",
            "left": {
              "type": "var",
              "data": "window",
              "source": "window"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "window",
                  "source": "window"
                },
                {
                  "type": "mtv",
                  "data": "close",
                  "parameters": [],
                  "source": "close()"
                }
              ],
              "source": "window.close()"
            },
            "line": 11
          }
        ]
      ],
      "source": "[ast BLK]"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "window",
      "source": "window \"responsive\" true",
      "line": 14
    },
    {
      "type": "str",
      "data": "responsive",
      "source": "\"responsive\""
    },
    {
      "type": "var",
      "data": true,
      "source": "true"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "hitbox_size = 13",
      "left": {
        "type": "var",
        "data": "hitbox_size",
        "source": "hitbox_size"
      },
      "right": {
        "type": "num",
        "data": 13,
        "source": "13"
      },
      "line": 16
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "def dragEdge(prop, axis) (",
      "left": {
        "type": "var",
        "data": "dragEdge",
        "source": "def"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": "prop,axis",
            "source": "prop,axis"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if !mouse_down (",
                  "line": 19
                },
                {
                  "type": "ury",
                  "data": "!",
                  "right": {
                    "type": "var",
                    "data": "mouse_down",
                    "source": "mouse_down"
                  },
                  "source": "!mouse_down"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.dragEdge = null",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "dragEdge",
                              "source": "dragEdge"
                            }
                          ],
                          "source": "state.dragEdge"
                        },
                        "right": {
                          "type": "unk",
                          "data": null,
                          "source": "null"
                        },
                        "line": 20
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "return",
                        "source": "return",
                        "line": 21
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_moved (",
                  "line": 23
                },
                {
                  "type": "var",
                  "data": "mouse_moved",
                  "source": "mouse_moved"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "local pos = top.tile",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this",
                              "source": "this"
                            },
                            {
                              "type": "var",
                              "data": "pos",
                              "source": "pos"
                            }
                          ],
                          "source": "this.pos"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "var",
                              "data": "tile",
                              "source": "tile"
                            }
                          ],
                          "source": "top.tile"
                        },
                        "line": 24
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if axis == \"x\" (",
                        "line": 25
                      },
                      {
                        "type": "cmp",
                        "data": "==",
                        "source": "axis == \"x\"",
                        "left": {
                          "type": "var",
                          "data": "axis",
                          "source": "axis"
                        },
                        "right": {
                          "type": "str",
                          "data": "x",
                          "source": "\"x\""
                        }
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "cmd",
                              "data": "if",
                              "source": "if pos.startsWith(\"-1,\") or pos.startsWith(\"1,\") (",
                              "line": 26
                            },
                            {
                              "type": "log",
                              "data": "or",
                              "source": "pos.startsWith(\"-1,\") or pos.startsWith(\"1,\")",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "pos",
                                    "source": "pos"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "startsWith",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "-1,",
                                        "source": "\"-1,\""
                                      }
                                    ],
                                    "source": "startsWith(\"-1,\")"
                                  }
                                ],
                                "source": "pos.startsWith(\"-1,\")"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "pos",
                                    "source": "pos"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "startsWith",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "1,",
                                        "source": "\"1,\""
                                      }
                                    ],
                                    "source": "startsWith(\"1,\")"
                                  }
                                ],
                                "source": "pos.startsWith(\"1,\")"
                              }
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "@=",
                                    "source": "local desktop @= \"origin.desktop\".eval()",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "this",
                                          "source": "this"
                                        },
                                        {
                                          "type": "var",
                                          "data": "desktop",
                                          "source": "desktop"
                                        }
                                      ],
                                      "source": "this.desktop"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "str",
                                          "data": "origin.desktop",
                                          "source": "\"origin.desktop\""
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "eval",
                                          "parameters": [],
                                          "source": "eval()"
                                        }
                                      ],
                                      "source": "\"origin.desktop\".eval()"
                                    },
                                    "line": 27
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "source": "local mouse = pos.[1] == \"-\" ? -mouse_x mouse_x",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "this",
                                          "source": "this"
                                        },
                                        {
                                          "type": "var",
                                          "data": "mouse",
                                          "source": "mouse"
                                        }
                                      ],
                                      "source": "this.mouse"
                                    },
                                    "right": {
                                      "type": "qst",
                                      "data": "?",
                                      "source": "?",
                                      "left": {
                                        "type": "cmp",
                                        "data": "==",
                                        "source": "pos.[1] == \"-\"",
                                        "left": {
                                          "type": "mtd",
                                          "data": [
                                            {
                                              "type": "var",
                                              "data": "pos",
                                              "source": "pos"
                                            },
                                            {
                                              "type": "mtv",
                                              "data": "item",
                                              "parameters": [
                                                {
                                                  "type": "num",
                                                  "data": 1,
                                                  "source": "1"
                                                }
                                              ],
                                              "source": "[1]"
                                            }
                                          ],
                                          "source": "pos.[1]"
                                        },
                                        "right": {
                                          "type": "str",
                                          "data": "-",
                                          "source": "\"-\""
                                        }
                                      },
                                      "right": {
                                        "type": "ury",
                                        "data": "-",
                                        "right": {
                                          "type": "var",
                                          "data": "mouse_x",
                                          "source": "mouse_x"
                                        },
                                        "source": "-mouse_x"
                                      },
                                      "right2": {
                                        "type": "var",
                                        "data": "mouse_x",
                                        "source": "mouse_x"
                                      }
                                    },
                                    "line": 28
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "source": "desktop.split.[desktop.current + 1] = (abs(state.resize1 + mouse) / screensize_x).clamp(0.3, 0.7)",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "desktop",
                                          "source": "desktop"
                                        },
                                        {
                                          "type": "var",
                                          "data": "split",
                                          "source": "split"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "item",
                                          "parameters": [
                                            {
                                              "type": "opr",
                                              "data": "+",
                                              "source": "desktop.current + 1",
                                              "left": {
                                                "type": "mtd",
                                                "data": [
                                                  {
                                                    "type": "var",
                                                    "data": "desktop",
                                                    "source": "desktop"
                                                  },
                                                  {
                                                    "type": "var",
                                                    "data": "current",
                                                    "source": "current"
                                                  }
                                                ],
                                                "source": "desktop.current"
                                              },
                                              "right": {
                                                "type": "num",
                                                "data": 1,
                                                "source": "1"
                                              }
                                            }
                                          ],
                                          "source": "[desktop.current + 1]"
                                        }
                                      ],
                                      "source": "desktop.split.[desktop.current + 1]"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "opr",
                                          "data": "/",
                                          "source": "(abs(state.resize1 + mouse) / screensize_x)",
                                          "left": {
                                            "type": "fnc",
                                            "data": "abs",
                                            "parameters": [
                                              {
                                                "type": "opr",
                                                "data": "+",
                                                "source": "state.resize1 + mouse",
                                                "left": {
                                                  "type": "mtd",
                                                  "data": [
                                                    {
                                                      "type": "var",
                                                      "data": "state",
                                                      "source": "state"
                                                    },
                                                    {
                                                      "type": "var",
                                                      "data": "resize1",
                                                      "source": "resize1"
                                                    }
                                                  ],
                                                  "source": "state.resize1"
                                                },
                                                "right": {
                                                  "type": "var",
                                                  "data": "mouse",
                                                  "source": "mouse"
                                                }
                                              }
                                            ],
                                            "source": "abs(state.resize1 + mouse)"
                                          },
                                          "right": {
                                            "type": "var",
                                            "data": "screensize_x",
                                            "source": "screensize_x"
                                          }
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "clamp",
                                          "parameters": [
                                            {
                                              "type": "num",
                                              "data": 0.3,
                                              "source": "0.3"
                                            },
                                            {
                                              "type": "num",
                                              "data": 0.7,
                                              "source": "0.7"
                                            }
                                          ],
                                          "source": "clamp(0.3, 0.7)"
                                        }
                                      ],
                                      "source": "(abs(state.resize1 + mouse) / screensize_x).clamp(0.3, 0.7)"
                                    },
                                    "line": 29
                                  }
                                ]
                              ],
                              "source": "[ast BLK]"
                            },
                            {
                              "type": "var",
                              "data": "else",
                              "source": "else"
                            },
                            {
                              "type": "blk",
                              "data": [
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "source": "top.width = abs(state.resize1 - mouse_x).clamp(top.min_width, 999999)",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "top",
                                          "source": "top"
                                        },
                                        {
                                          "type": "var",
                                          "data": "width",
                                          "source": "width"
                                        }
                                      ],
                                      "source": "top.width"
                                    },
                                    "right": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "fnc",
                                          "data": "abs",
                                          "parameters": [
                                            {
                                              "type": "opr",
                                              "data": "-",
                                              "source": "state.resize1 - mouse_x",
                                              "left": {
                                                "type": "mtd",
                                                "data": [
                                                  {
                                                    "type": "var",
                                                    "data": "state",
                                                    "source": "state"
                                                  },
                                                  {
                                                    "type": "var",
                                                    "data": "resize1",
                                                    "source": "resize1"
                                                  }
                                                ],
                                                "source": "state.resize1"
                                              },
                                              "right": {
                                                "type": "var",
                                                "data": "mouse_x",
                                                "source": "mouse_x"
                                              }
                                            }
                                          ],
                                          "source": "abs(state.resize1 - mouse_x)"
                                        },
                                        {
                                          "type": "mtv",
                                          "data": "clamp",
                                          "parameters": [
                                            {
                                              "type": "mtd",
                                              "data": [
                                                {
                                                  "type": "var",
                                                  "data": "top",
                                                  "source": "top"
                                                },
                                                {
                                                  "type": "var",
                                                  "data": "min_width",
                                                  "source": "min_width"
                                                }
                                              ],
                                              "source": "top.min_width"
                                            },
                                            {
                                              "type": "num",
                                              "data": 999999,
                                              "source": "999999"
                                            }
                                          ],
                                          "source": "clamp(top.min_width, 999999)"
                                        }
                                      ],
                                      "source": "abs(state.resize1 - mouse_x).clamp(top.min_width, 999999)"
                                    },
                                    "line": 31
                                  }
                                ],
                                [
                                  {
                                    "type": "asi",
                                    "data": "=",
                                    "source": "top.x = state.resize1 + (top.width / state.div)",
                                    "left": {
                                      "type": "mtd",
                                      "data": [
                                        {
                                          "type": "var",
                                          "data": "top",
                                          "source": "top"
                                        },
                                        {
                                          "type": "var",
                                          "data": "x",
                                          "source": "x"
                                        }
                                      ],
                                      "source": "top.x"
                                    },
                                    "right": {
                                      "type": "opr",
                                      "data": "+",
                                      "source": "state.resize1 + (top.width / state.div)",
                                      "left": {
                                        "type": "mtd",
                                        "data": [
                                          {
                                            "type": "var",
                                            "data": "state",
                                            "source": "state"
                                          },
                                          {
                                            "type": "var",
                                            "data": "resize1",
                                            "source": "resize1"
                                          }
                                        ],
                                        "source": "state.resize1"
                                      },
                                      "right": {
                                        "type": "opr",
                                        "data": "/",
                                        "source": "(top.width / state.div)",
                                        "left": {
                                          "type": "mtd",
                                          "data": [
                                            {
                                              "type": "var",
                                              "data": "top",
                                              "source": "top"
                                            },
                                            {
                                              "type": "var",
                                              "data": "width",
                                              "source": "width"
                                            }
                                          ],
                                          "source": "top.width"
                                        },
                                        "right": {
                                          "type": "mtd",
                                          "data": [
                                            {
                                              "type": "var",
                                              "data": "state",
                                              "source": "state"
                                            },
                                            {
                                              "type": "var",
                                              "data": "div",
                                              "source": "div"
                                            }
                                          ],
                                          "source": "state.div"
                                        }
                                      }
                                    },
                                    "line": 32
                                  }
                                ]
                              ],
                              "source": "[ast BLK]"
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      },
                      {
                        "type": "var",
                        "data": "else",
                        "source": "else"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "source": "top.height = abs(state.resize2 - mouse_y).clamp(top.min_height, 999999)",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "top",
                                    "source": "top"
                                  },
                                  {
                                    "type": "var",
                                    "data": "height",
                                    "source": "height"
                                  }
                                ],
                                "source": "top.height"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "fnc",
                                    "data": "abs",
                                    "parameters": [
                                      {
                                        "type": "opr",
                                        "data": "-",
                                        "source": "state.resize2 - mouse_y",
                                        "left": {
                                          "type": "mtd",
                                          "data": [
                                            {
                                              "type": "var",
                                              "data": "state",
                                              "source": "state"
                                            },
                                            {
                                              "type": "var",
                                              "data": "resize2",
                                              "source": "resize2"
                                            }
                                          ],
                                          "source": "state.resize2"
                                        },
                                        "right": {
                                          "type": "var",
                                          "data": "mouse_y",
                                          "source": "mouse_y"
                                        }
                                      }
                                    ],
                                    "source": "abs(state.resize2 - mouse_y)"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "clamp",
                                    "parameters": [
                                      {
                                        "type": "mtd",
                                        "data": [
                                          {
                                            "type": "var",
                                            "data": "top",
                                            "source": "top"
                                          },
                                          {
                                            "type": "var",
                                            "data": "min_height",
                                            "source": "min_height"
                                          }
                                        ],
                                        "source": "top.min_height"
                                      },
                                      {
                                        "type": "num",
                                        "data": 999999,
                                        "source": "999999"
                                      }
                                    ],
                                    "source": "clamp(top.min_height, 999999)"
                                  }
                                ],
                                "source": "abs(state.resize2 - mouse_y).clamp(top.min_height, 999999)"
                              },
                              "line": 35
                            }
                          ],
                          [
                            {
                              "type": "asi",
                              "data": "=",
                              "source": "top.y = state.resize2 + (top.height / state.div)",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "top",
                                    "source": "top"
                                  },
                                  {
                                    "type": "var",
                                    "data": "y",
                                    "source": "y"
                                  }
                                ],
                                "source": "top.y"
                              },
                              "right": {
                                "type": "opr",
                                "data": "+",
                                "source": "state.resize2 + (top.height / state.div)",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "state",
                                      "source": "state"
                                    },
                                    {
                                      "type": "var",
                                      "data": "resize2",
                                      "source": "resize2"
                                    }
                                  ],
                                  "source": "state.resize2"
                                },
                                "right": {
                                  "type": "opr",
                                  "data": "/",
                                  "source": "(top.height / state.div)",
                                  "left": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "top",
                                        "source": "top"
                                      },
                                      {
                                        "type": "var",
                                        "data": "height",
                                        "source": "height"
                                      }
                                    ],
                                    "source": "top.height"
                                  },
                                  "right": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "state",
                                        "source": "state"
                                      },
                                      {
                                        "type": "var",
                                        "data": "div",
                                        "source": "div"
                                      }
                                    ],
                                    "source": "state.div"
                                  }
                                }
                              },
                              "line": 36
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "source": "top.callRender()",
                        "left": {
                          "type": "var",
                          "data": "top",
                          "source": "top"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "mtv",
                              "data": "callRender",
                              "parameters": [],
                              "source": "callRender()"
                            }
                          ],
                          "source": "top.callRender()"
                        },
                        "line": 38
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ]
      },
      "line": 18
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "def dragDiagonal() (",
      "left": {
        "type": "var",
        "data": "dragDiagonal",
        "source": "def"
      },
      "right": {
        "type": "fnc",
        "data": "function",
        "parameters": [
          {
            "type": "str",
            "data": "",
            "source": ""
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if !mouse_down (",
                  "line": 43
                },
                {
                  "type": "ury",
                  "data": "!",
                  "right": {
                    "type": "var",
                    "data": "mouse_down",
                    "source": "mouse_down"
                  },
                  "source": "!mouse_down"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.dragDiag = null",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "dragDiag",
                              "source": "dragDiag"
                            }
                          ],
                          "source": "state.dragDiag"
                        },
                        "right": {
                          "type": "unk",
                          "data": null,
                          "source": "null"
                        },
                        "line": 44
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "return",
                        "source": "return",
                        "line": 45
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_moved (",
                  "line": 47
                },
                {
                  "type": "var",
                  "data": "mouse_moved",
                  "source": "mouse_moved"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "top.width = abs(state.resize1 - mouse_x).clamp(top.min_width, 999999)",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "var",
                              "data": "width",
                              "source": "width"
                            }
                          ],
                          "source": "top.width"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "fnc",
                              "data": "abs",
                              "parameters": [
                                {
                                  "type": "opr",
                                  "data": "-",
                                  "source": "state.resize1 - mouse_x",
                                  "left": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "state",
                                        "source": "state"
                                      },
                                      {
                                        "type": "var",
                                        "data": "resize1",
                                        "source": "resize1"
                                      }
                                    ],
                                    "source": "state.resize1"
                                  },
                                  "right": {
                                    "type": "var",
                                    "data": "mouse_x",
                                    "source": "mouse_x"
                                  }
                                }
                              ],
                              "source": "abs(state.resize1 - mouse_x)"
                            },
                            {
                              "type": "mtv",
                              "data": "clamp",
                              "parameters": [
                                {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "top",
                                      "source": "top"
                                    },
                                    {
                                      "type": "var",
                                      "data": "min_width",
                                      "source": "min_width"
                                    }
                                  ],
                                  "source": "top.min_width"
                                },
                                {
                                  "type": "num",
                                  "data": 999999,
                                  "source": "999999"
                                }
                              ],
                              "source": "clamp(top.min_width, 999999)"
                            }
                          ],
                          "source": "abs(state.resize1 - mouse_x).clamp(top.min_width, 999999)"
                        },
                        "line": 48
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "top.height = abs(state.resize2 - mouse_y).clamp(top.min_height, 999999)",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "var",
                              "data": "height",
                              "source": "height"
                            }
                          ],
                          "source": "top.height"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "fnc",
                              "data": "abs",
                              "parameters": [
                                {
                                  "type": "opr",
                                  "data": "-",
                                  "source": "state.resize2 - mouse_y",
                                  "left": {
                                    "type": "mtd",
                                    "data": [
                                      {
                                        "type": "var",
                                        "data": "state",
                                        "source": "state"
                                      },
                                      {
                                        "type": "var",
                                        "data": "resize2",
                                        "source": "resize2"
                                      }
                                    ],
                                    "source": "state.resize2"
                                  },
                                  "right": {
                                    "type": "var",
                                    "data": "mouse_y",
                                    "source": "mouse_y"
                                  }
                                }
                              ],
                              "source": "abs(state.resize2 - mouse_y)"
                            },
                            {
                              "type": "mtv",
                              "data": "clamp",
                              "parameters": [
                                {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "top",
                                      "source": "top"
                                    },
                                    {
                                      "type": "var",
                                      "data": "min_height",
                                      "source": "min_height"
                                    }
                                  ],
                                  "source": "top.min_height"
                                },
                                {
                                  "type": "num",
                                  "data": 999999,
                                  "source": "999999"
                                }
                              ],
                              "source": "clamp(top.min_height, 999999)"
                            }
                          ],
                          "source": "abs(state.resize2 - mouse_y).clamp(top.min_height, 999999)"
                        },
                        "line": 49
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "top.x = state.resize1 + (top.width / state.div1)",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "var",
                              "data": "x",
                              "source": "x"
                            }
                          ],
                          "source": "top.x"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "source": "state.resize1 + (top.width / state.div1)",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              {
                                "type": "var",
                                "data": "resize1",
                                "source": "resize1"
                              }
                            ],
                            "source": "state.resize1"
                          },
                          "right": {
                            "type": "opr",
                            "data": "/",
                            "source": "(top.width / state.div1)",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "top",
                                  "source": "top"
                                },
                                {
                                  "type": "var",
                                  "data": "width",
                                  "source": "width"
                                }
                              ],
                              "source": "top.width"
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "state",
                                  "source": "state"
                                },
                                {
                                  "type": "var",
                                  "data": "div1",
                                  "source": "div1"
                                }
                              ],
                              "source": "state.div1"
                            }
                          }
                        },
                        "line": 50
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "top.y = state.resize2 + (top.height / state.div2)",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "var",
                              "data": "y",
                              "source": "y"
                            }
                          ],
                          "source": "top.y"
                        },
                        "right": {
                          "type": "opr",
                          "data": "+",
                          "source": "state.resize2 + (top.height / state.div2)",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              {
                                "type": "var",
                                "data": "resize2",
                                "source": "resize2"
                              }
                            ],
                            "source": "state.resize2"
                          },
                          "right": {
                            "type": "opr",
                            "data": "/",
                            "source": "(top.height / state.div2)",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "top",
                                  "source": "top"
                                },
                                {
                                  "type": "var",
                                  "data": "height",
                                  "source": "height"
                                }
                              ],
                              "source": "top.height"
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "state",
                                  "source": "state"
                                },
                                {
                                  "type": "var",
                                  "data": "div2",
                                  "source": "div2"
                                }
                              ],
                              "source": "state.div2"
                            }
                          }
                        },
                        "line": 51
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "local w = top.width / 2",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this",
                              "source": "this"
                            },
                            {
                              "type": "var",
                              "data": "w",
                              "source": "w"
                            }
                          ],
                          "source": "this.w"
                        },
                        "right": {
                          "type": "opr",
                          "data": "/",
                          "source": "top.width / 2",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "top",
                                "source": "top"
                              },
                              {
                                "type": "var",
                                "data": "width",
                                "source": "width"
                              }
                            ],
                            "source": "top.width"
                          },
                          "right": {
                            "type": "num",
                            "data": 2,
                            "source": "2"
                          }
                        },
                        "line": 53
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "local h = top.height / 2",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "this",
                              "source": "this"
                            },
                            {
                              "type": "var",
                              "data": "h",
                              "source": "h"
                            }
                          ],
                          "source": "this.h"
                        },
                        "right": {
                          "type": "opr",
                          "data": "/",
                          "source": "top.height / 2",
                          "left": {
                            "type": "mtd",
                            "data": [
                              {
                                "type": "var",
                                "data": "top",
                                "source": "top"
                              },
                              {
                                "type": "var",
                                "data": "height",
                                "source": "height"
                              }
                            ],
                            "source": "top.height"
                          },
                          "right": {
                            "type": "num",
                            "data": 2,
                            "source": "2"
                          }
                        },
                        "line": 54
                      }
                    ],
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "source": "top.callRender()",
                        "left": {
                          "type": "var",
                          "data": "top",
                          "source": "top"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "top",
                              "source": "top"
                            },
                            {
                              "type": "mtv",
                              "data": "callRender",
                              "parameters": [],
                              "source": "callRender()"
                            }
                          ],
                          "source": "top.callRender()"
                        },
                        "line": 56
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ]
      },
      "line": 42
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "state = {",
      "left": {
        "type": "var",
        "data": "state",
        "source": "state"
      },
      "right": {
        "type": "obj",
        "data": {
          "dragEdge": {
            "type": "unk",
            "data": null,
            "source": "null"
          },
          "dragDiag": {
            "type": "unk",
            "data": null,
            "source": "null"
          },
          "changeState": {
            "type": "fnc",
            "data": "function",
            "parameters": [
              {
                "type": "str",
                "data": "edge,prop",
                "source": "edge,prop"
              },
              {
                "type": "blk",
                "data": [
                  [
                    {
                      "type": "cmd",
                      "data": "if",
                      "source": "if prop == \"both\" (",
                      "line": 64
                    },
                    {
                      "type": "cmp",
                      "data": "==",
                      "source": "prop == \"both\"",
                      "left": {
                        "type": "var",
                        "data": "prop",
                        "source": "prop"
                      },
                      "right": {
                        "type": "str",
                        "data": "both",
                        "source": "\"both\""
                      }
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.dragDiag = edge.split(\",\")",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "dragDiag",
                                  "source": "dragDiag"
                                }
                              ],
                              "source": "self.dragDiag"
                            },
                            "right": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "edge",
                                  "source": "edge"
                                },
                                {
                                  "type": "mtv",
                                  "data": "split",
                                  "parameters": [
                                    {
                                      "type": "str",
                                      "data": ",",
                                      "source": "\",\""
                                    }
                                  ],
                                  "source": "split(\",\")"
                                }
                              ],
                              "source": "edge.split(\",\")"
                            },
                            "line": 65
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.axis = \"both\"",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "axis",
                                  "source": "axis"
                                }
                              ],
                              "source": "self.axis"
                            },
                            "right": {
                              "type": "str",
                              "data": "both",
                              "source": "\"both\""
                            },
                            "line": 66
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.div1 = dragDiag.[1] == \"left\" ? -2 2",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "div1",
                                  "source": "div1"
                                }
                              ],
                              "source": "self.div1"
                            },
                            "right": {
                              "type": "qst",
                              "data": "?",
                              "source": "?",
                              "left": {
                                "type": "cmp",
                                "data": "==",
                                "source": "dragDiag.[1] == \"left\"",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "dragDiag",
                                      "source": "dragDiag"
                                    },
                                    {
                                      "type": "mtv",
                                      "data": "item",
                                      "parameters": [
                                        {
                                          "type": "num",
                                          "data": 1,
                                          "source": "1"
                                        }
                                      ],
                                      "source": "[1]"
                                    }
                                  ],
                                  "source": "dragDiag.[1]"
                                },
                                "right": {
                                  "type": "str",
                                  "data": "left",
                                  "source": "\"left\""
                                }
                              },
                              "right": {
                                "type": "num",
                                "data": -2,
                                "source": "-2"
                              },
                              "right2": {
                                "type": "num",
                                "data": 2,
                                "source": "2"
                              }
                            },
                            "line": 67
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.div2 = dragDiag.[2] == \"bottom\" ? -2 2",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "div2",
                                  "source": "div2"
                                }
                              ],
                              "source": "self.div2"
                            },
                            "right": {
                              "type": "qst",
                              "data": "?",
                              "source": "?",
                              "left": {
                                "type": "cmp",
                                "data": "==",
                                "source": "dragDiag.[2] == \"bottom\"",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "dragDiag",
                                      "source": "dragDiag"
                                    },
                                    {
                                      "type": "mtv",
                                      "data": "item",
                                      "parameters": [
                                        {
                                          "type": "num",
                                          "data": 2,
                                          "source": "2"
                                        }
                                      ],
                                      "source": "[2]"
                                    }
                                  ],
                                  "source": "dragDiag.[2]"
                                },
                                "right": {
                                  "type": "str",
                                  "data": "bottom",
                                  "source": "\"bottom\""
                                }
                              },
                              "right": {
                                "type": "num",
                                "data": -2,
                                "source": "-2"
                              },
                              "right2": {
                                "type": "num",
                                "data": 2,
                                "source": "2"
                              }
                            },
                            "line": 68
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.resize1 = top.x - (top.width / div1)",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "resize1",
                                  "source": "resize1"
                                }
                              ],
                              "source": "self.resize1"
                            },
                            "right": {
                              "type": "opr",
                              "data": "-",
                              "source": "top.x - (top.width / div1)",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "top",
                                    "source": "top"
                                  },
                                  {
                                    "type": "var",
                                    "data": "x",
                                    "source": "x"
                                  }
                                ],
                                "source": "top.x"
                              },
                              "right": {
                                "type": "opr",
                                "data": "/",
                                "source": "(top.width / div1)",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "top",
                                      "source": "top"
                                    },
                                    {
                                      "type": "var",
                                      "data": "width",
                                      "source": "width"
                                    }
                                  ],
                                  "source": "top.width"
                                },
                                "right": {
                                  "type": "var",
                                  "data": "div1",
                                  "source": "div1"
                                }
                              }
                            },
                            "line": 69
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.resize2 = top.y - (top.height / div2)",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "resize2",
                                  "source": "resize2"
                                }
                              ],
                              "source": "self.resize2"
                            },
                            "right": {
                              "type": "opr",
                              "data": "-",
                              "source": "top.y - (top.height / div2)",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "top",
                                    "source": "top"
                                  },
                                  {
                                    "type": "var",
                                    "data": "y",
                                    "source": "y"
                                  }
                                ],
                                "source": "top.y"
                              },
                              "right": {
                                "type": "opr",
                                "data": "/",
                                "source": "(top.height / div2)",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "top",
                                      "source": "top"
                                    },
                                    {
                                      "type": "var",
                                      "data": "height",
                                      "source": "height"
                                    }
                                  ],
                                  "source": "top.height"
                                },
                                "right": {
                                  "type": "var",
                                  "data": "div2",
                                  "source": "div2"
                                }
                              }
                            },
                            "line": 70
                          }
                        ]
                      ],
                      "source": "[ast BLK]"
                    },
                    {
                      "type": "var",
                      "data": "else",
                      "source": "else"
                    },
                    {
                      "type": "blk",
                      "data": [
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.dragEdge = edge",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "dragEdge",
                                  "source": "dragEdge"
                                }
                              ],
                              "source": "self.dragEdge"
                            },
                            "right": {
                              "type": "var",
                              "data": "edge",
                              "source": "edge"
                            },
                            "line": 72
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.axis = [\"width\"].contains(prop) ? \"x\" \"y\"",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "axis",
                                  "source": "axis"
                                }
                              ],
                              "source": "self.axis"
                            },
                            "right": {
                              "type": "qst",
                              "data": "?",
                              "source": "?",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "arr",
                                    "data": [
                                      {
                                        "type": "str",
                                        "data": "width",
                                        "source": "\"width\""
                                      }
                                    ],
                                    "source": "[\"width\"]"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "contains",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "prop",
                                        "source": "prop"
                                      }
                                    ],
                                    "source": "contains(prop)"
                                  }
                                ],
                                "source": "[\"width\"].contains(prop)"
                              },
                              "right": {
                                "type": "str",
                                "data": "x",
                                "source": "\"x\""
                              },
                              "right2": {
                                "type": "str",
                                "data": "y",
                                "source": "\"y\""
                              }
                            },
                            "line": 73
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.div = [\"left\",\"bottom\"].contains(edge) ? -2 2",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "div",
                                  "source": "div"
                                }
                              ],
                              "source": "self.div"
                            },
                            "right": {
                              "type": "qst",
                              "data": "?",
                              "source": "?",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "arr",
                                    "data": [
                                      {
                                        "type": "str",
                                        "data": "left",
                                        "source": "\"left\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "bottom",
                                        "source": "\"bottom\""
                                      }
                                    ],
                                    "source": "[\"left\",\"bottom\"]"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "contains",
                                    "parameters": [
                                      {
                                        "type": "var",
                                        "data": "edge",
                                        "source": "edge"
                                      }
                                    ],
                                    "source": "contains(edge)"
                                  }
                                ],
                                "source": "[\"left\",\"bottom\"].contains(edge)"
                              },
                              "right": {
                                "type": "num",
                                "data": -2,
                                "source": "-2"
                              },
                              "right2": {
                                "type": "num",
                                "data": 2,
                                "source": "2"
                              }
                            },
                            "line": 74
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.resize1 = top.x - (top.width / div)",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "resize1",
                                  "source": "resize1"
                                }
                              ],
                              "source": "self.resize1"
                            },
                            "right": {
                              "type": "opr",
                              "data": "-",
                              "source": "top.x - (top.width / div)",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "top",
                                    "source": "top"
                                  },
                                  {
                                    "type": "var",
                                    "data": "x",
                                    "source": "x"
                                  }
                                ],
                                "source": "top.x"
                              },
                              "right": {
                                "type": "opr",
                                "data": "/",
                                "source": "(top.width / div)",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "top",
                                      "source": "top"
                                    },
                                    {
                                      "type": "var",
                                      "data": "width",
                                      "source": "width"
                                    }
                                  ],
                                  "source": "top.width"
                                },
                                "right": {
                                  "type": "var",
                                  "data": "div",
                                  "source": "div"
                                }
                              }
                            },
                            "line": 75
                          }
                        ],
                        [
                          {
                            "type": "asi",
                            "data": "=",
                            "source": "self.resize2 = top.y - (top.height / div)",
                            "left": {
                              "type": "mtd",
                              "data": [
                                {
                                  "type": "var",
                                  "data": "self",
                                  "source": "self"
                                },
                                {
                                  "type": "var",
                                  "data": "resize2",
                                  "source": "resize2"
                                }
                              ],
                              "source": "self.resize2"
                            },
                            "right": {
                              "type": "opr",
                              "data": "-",
                              "source": "top.y - (top.height / div)",
                              "left": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "top",
                                    "source": "top"
                                  },
                                  {
                                    "type": "var",
                                    "data": "y",
                                    "source": "y"
                                  }
                                ],
                                "source": "top.y"
                              },
                              "right": {
                                "type": "opr",
                                "data": "/",
                                "source": "(top.height / div)",
                                "left": {
                                  "type": "mtd",
                                  "data": [
                                    {
                                      "type": "var",
                                      "data": "top",
                                      "source": "top"
                                    },
                                    {
                                      "type": "var",
                                      "data": "height",
                                      "source": "height"
                                    }
                                  ],
                                  "source": "top.height"
                                },
                                "right": {
                                  "type": "var",
                                  "data": "div",
                                  "source": "div"
                                }
                              }
                            },
                            "line": 76
                          }
                        ]
                      ],
                      "source": "[ast BLK]"
                    }
                  ],
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "source": "self.prop = prop",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "self",
                            "source": "self"
                          },
                          {
                            "type": "var",
                            "data": "prop",
                            "source": "prop"
                          }
                        ],
                        "source": "self.prop"
                      },
                      "right": {
                        "type": "var",
                        "data": "prop",
                        "source": "prop"
                      },
                      "line": 79
                    }
                  ],
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "source": "self.last_size = top.[prop]",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "self",
                            "source": "self"
                          },
                          {
                            "type": "var",
                            "data": "last_size",
                            "source": "last_size"
                          }
                        ],
                        "source": "self.last_size"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "mtv",
                            "data": "item",
                            "parameters": [
                              {
                                "type": "var",
                                "data": "prop",
                                "source": "prop"
                              }
                            ],
                            "source": "[prop]"
                          }
                        ],
                        "source": "top.[prop]"
                      },
                      "line": 80
                    }
                  ],
                  [
                    {
                      "type": "asi",
                      "data": "=",
                      "source": "self.pos = top.tile",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "self",
                            "source": "self"
                          },
                          {
                            "type": "var",
                            "data": "pos",
                            "source": "pos"
                          }
                        ],
                        "source": "self.pos"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "tile",
                            "source": "tile"
                          }
                        ],
                        "source": "top.tile"
                      },
                      "line": 81
                    }
                  ]
                ],
                "source": "[ast BLK]"
              }
            ]
          }
        },
        "source": "{\n  dragEdge: null,\n  dragDiag: null,\n  changeState: def(edge,prop) -> (\n/@line 64\n    if prop == \"both\" (\n/@line 65\n      self.dragDiag = edge.split(\",\")\n/@line 66\n      self.axis = \"both\"\n/@line 67\n      self.div1 = dragDiag.[1] == \"left\" ? -2 2\n/@line 68\n      self.div2 = dragDiag.[2] == \"bottom\" ? -2 2\n/@line 69\n      self.resize1 = top.x - (top.width / div1)\n/@line 70\n      self.resize2 = top.y - (top.height / div2)\n/@line 71\n    ) else (\n/@line 72\n      self.dragEdge = edge\n/@line 73\n      self.axis = [\"width\"].contains(prop) ? \"x\" \"y\"\n/@line 74\n      self.div = [\"left\",\"bottom\"].contains(edge) ? -2 2\n/@line 75\n      self.resize1 = top.x - (top.width / div)\n/@line 76\n      self.resize2 = top.y - (top.height / div)\n/@line 77\n    )\n/@line 78\n    \n/@line 79\n    self.prop = prop\n/@line 80\n    self.last_size = top.[prop]\n/@line 81\n    self.pos = top.tile\n/@line 82\n  )\n}"
      },
      "line": 60
    }
  ],
  [
    {
      "type": "unk",
      "data": "mainloop:",
      "source": "mainloop:",
      "line": 85
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if wins.[1].id == window.id (",
      "line": 87
    },
    {
      "type": "cmp",
      "data": "==",
      "source": "wins.[1].id == window.id",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "wins",
            "source": "wins"
          },
          {
            "type": "mtv",
            "data": "item",
            "parameters": [
              {
                "type": "num",
                "data": 1,
                "source": "1"
              }
            ],
            "source": "[1]"
          },
          {
            "type": "var",
            "data": "id",
            "source": "id"
          }
        ],
        "source": "wins.[1].id"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "window",
            "source": "window"
          },
          {
            "type": "var",
            "data": "id",
            "source": "id"
          }
        ],
        "source": "window.id"
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=??",
            "source": "window.resize(0,0)",
            "left": {
              "type": "var",
              "data": "window",
              "source": "window"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "window",
                  "source": "window"
                },
                {
                  "type": "mtv",
                  "data": "resize",
                  "parameters": [
                    {
                      "type": "num",
                      "data": 0,
                      "source": "0"
                    },
                    {
                      "type": "num",
                      "data": 0,
                      "source": "0"
                    }
                  ],
                  "source": "resize(0,0)"
                }
              ],
              "source": "window.resize(0,0)"
            },
            "line": 88
          }
        ]
      ],
      "source": "[ast BLK]"
    },
    {
      "type": "var",
      "data": "else",
      "source": "else"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=??",
            "source": "window.resize(screensize_x,screensize_y)",
            "left": {
              "type": "var",
              "data": "window",
              "source": "window"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "window",
                  "source": "window"
                },
                {
                  "type": "mtv",
                  "data": "resize",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "screensize_x",
                      "source": "screensize_x"
                    },
                    {
                      "type": "var",
                      "data": "screensize_y",
                      "source": "screensize_y"
                    }
                  ],
                  "source": "resize(screensize_x,screensize_y)"
                }
              ],
              "source": "window.resize(screensize_x,screensize_y)"
            },
            "line": 90
          }
        ]
      ],
      "source": "[ast BLK]"
    }
  ],
  [
    {
      "type": "asi",
      "data": "@=",
      "source": "wins @= Windows()",
      "left": {
        "type": "var",
        "data": "wins",
        "source": "wins"
      },
      "right": {
        "type": "fnc",
        "data": "Windows",
        "parameters": [],
        "source": "Windows()"
      },
      "line": 93
    }
  ],
  [
    {
      "type": "asi",
      "data": "@=",
      "source": "top @= wins.[1].window ?? \"\"",
      "left": {
        "type": "var",
        "data": "top",
        "source": "top"
      },
      "right": {
        "type": "opr",
        "data": "??",
        "source": "wins.[1].window ?? \"\"",
        "left": {
          "type": "mtd",
          "data": [
            {
              "type": "var",
              "data": "wins",
              "source": "wins"
            },
            {
              "type": "mtv",
              "data": "item",
              "parameters": [
                {
                  "type": "num",
                  "data": 1,
                  "source": "1"
                }
              ],
              "source": "[1]"
            },
            {
              "type": "var",
              "data": "window",
              "source": "window"
            }
          ],
          "source": "wins.[1].window"
        },
        "right": {
          "type": "str",
          "data": "",
          "source": "\"\""
        }
      },
      "line": 95
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "x2 = hitbox_size * 2",
      "left": {
        "type": "var",
        "data": "x2",
        "source": "x2"
      },
      "right": {
        "type": "opr",
        "data": "*",
        "source": "hitbox_size * 2",
        "left": {
          "type": "var",
          "data": "hitbox_size",
          "source": "hitbox_size"
        },
        "right": {
          "type": "num",
          "data": 2,
          "source": "2"
        }
      },
      "line": 97
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "x25 = hitbox_size / 4",
      "left": {
        "type": "var",
        "data": "x25",
        "source": "x25"
      },
      "right": {
        "type": "opr",
        "data": "/",
        "source": "hitbox_size / 4",
        "left": {
          "type": "var",
          "data": "hitbox_size",
          "source": "hitbox_size"
        },
        "right": {
          "type": "num",
          "data": 4,
          "source": "4"
        }
      },
      "line": 98
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if !mouse_down (",
      "line": 100
    },
    {
      "type": "ury",
      "data": "!",
      "right": {
        "type": "var",
        "data": "mouse_down",
        "source": "mouse_down"
      },
      "source": "!mouse_down"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "state.cursor = null",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "state",
                  "source": "state"
                },
                {
                  "type": "var",
                  "data": "cursor",
                  "source": "cursor"
                }
              ],
              "source": "state.cursor"
            },
            "right": {
              "type": "unk",
              "data": null,
              "source": "null"
            },
            "line": 101
          }
        ]
      ],
      "source": "[ast BLK]"
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "local x = top.x",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "this",
            "source": "this"
          },
          {
            "type": "var",
            "data": "x",
            "source": "x"
          }
        ],
        "source": "this.x"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "top",
            "source": "top"
          },
          {
            "type": "var",
            "data": "x",
            "source": "x"
          }
        ],
        "source": "top.x"
      },
      "line": 103
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "local y = top.y",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "this",
            "source": "this"
          },
          {
            "type": "var",
            "data": "y",
            "source": "y"
          }
        ],
        "source": "this.y"
      },
      "right": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "top",
            "source": "top"
          },
          {
            "type": "var",
            "data": "y",
            "source": "y"
          }
        ],
        "source": "top.y"
      },
      "line": 104
    }
  ],
  [
    {
      "type": "asi",
      "data": "=",
      "source": "isntMini = true",
      "left": {
        "type": "var",
        "data": "isntMini",
        "source": "isntMini"
      },
      "right": {
        "type": "var",
        "data": true,
        "source": "true"
      },
      "line": 106
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if top.isType(\"string\").not() (",
      "line": 107
    },
    {
      "type": "mtd",
      "data": [
        {
          "type": "var",
          "data": "top",
          "source": "top"
        },
        {
          "type": "mtv",
          "data": "isType",
          "parameters": [
            {
              "type": "str",
              "data": "string",
              "source": "\"string\""
            }
          ],
          "source": "isType(\"string\")"
        },
        {
          "type": "mtv",
          "data": "not",
          "parameters": [],
          "source": "not()"
        }
      ],
      "source": "top.isType(\"string\").not()"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "asi",
            "data": "=",
            "source": "isntMini = top.isMini().not()",
            "left": {
              "type": "var",
              "data": "isntMini",
              "source": "isntMini"
            },
            "right": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "top",
                  "source": "top"
                },
                {
                  "type": "mtv",
                  "data": "isMini",
                  "parameters": [],
                  "source": "isMini()"
                },
                {
                  "type": "mtv",
                  "data": "not",
                  "parameters": [],
                  "source": "not()"
                }
              ],
              "source": "top.isMini().not()"
            },
            "line": 108
          }
        ]
      ],
      "source": "[ast BLK]"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if state.dragEdge == null and state.dragDiag == null and checkCollision(x, y, top.width + x2, top.height + x2) and !file_dragging and isntMini (",
      "line": 111
    },
    {
      "type": "log",
      "data": "and",
      "source": "state.dragEdge == null and state.dragDiag == null and checkCollision(x, y, top.width + x2, top.height + x2) and !file_dragging and isntMini",
      "left": {
        "type": "log",
        "data": "and",
        "source": "state.dragEdge == null and state.dragDiag == null and checkCollision(x, y, top.width + x2, top.height + x2) and !file_dragging",
        "left": {
          "type": "log",
          "data": "and",
          "source": "state.dragEdge == null and state.dragDiag == null and checkCollision(x, y, top.width + x2, top.height + x2)",
          "left": {
            "type": "log",
            "data": "and",
            "source": "state.dragEdge == null and state.dragDiag == null",
            "left": {
              "type": "cmp",
              "data": "==",
              "source": "state.dragEdge == null",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "state",
                    "source": "state"
                  },
                  {
                    "type": "var",
                    "data": "dragEdge",
                    "source": "dragEdge"
                  }
                ],
                "source": "state.dragEdge"
              },
              "right": {
                "type": "unk",
                "data": null,
                "source": "null"
              }
            },
            "right": {
              "type": "cmp",
              "data": "==",
              "source": "state.dragDiag == null",
              "left": {
                "type": "mtd",
                "data": [
                  {
                    "type": "var",
                    "data": "state",
                    "source": "state"
                  },
                  {
                    "type": "var",
                    "data": "dragDiag",
                    "source": "dragDiag"
                  }
                ],
                "source": "state.dragDiag"
              },
              "right": {
                "type": "unk",
                "data": null,
                "source": "null"
              }
            }
          },
          "right": {
            "type": "fnc",
            "data": "checkCollision",
            "parameters": [
              {
                "type": "var",
                "data": "x",
                "source": "x"
              },
              {
                "type": "var",
                "data": "y",
                "source": "y"
              },
              {
                "type": "opr",
                "data": "+",
                "source": "top.width + x2",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "top",
                      "source": "top"
                    },
                    {
                      "type": "var",
                      "data": "width",
                      "source": "width"
                    }
                  ],
                  "source": "top.width"
                },
                "right": {
                  "type": "var",
                  "data": "x2",
                  "source": "x2"
                }
              },
              {
                "type": "opr",
                "data": "+",
                "source": "top.height + x2",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "top",
                      "source": "top"
                    },
                    {
                      "type": "var",
                      "data": "height",
                      "source": "height"
                    }
                  ],
                  "source": "top.height"
                },
                "right": {
                  "type": "var",
                  "data": "x2",
                  "source": "x2"
                }
              }
            ],
            "source": "checkCollision(x, y, top.width + x2, top.height + x2)"
          }
        },
        "right": {
          "type": "ury",
          "data": "!",
          "right": {
            "type": "var",
            "data": "file_dragging",
            "source": "file_dragging"
          },
          "source": "!file_dragging"
        }
      },
      "right": {
        "type": "var",
        "data": "isntMini",
        "source": "isntMini"
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if checkCollision(x + top.left, y, hitbox_size, top.height - x25) (",
            "line": 114
          },
          {
            "type": "fnc",
            "data": "checkCollision",
            "parameters": [
              {
                "type": "opr",
                "data": "+",
                "source": "x + top.left",
                "left": {
                  "type": "var",
                  "data": "x",
                  "source": "x"
                },
                "right": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "top",
                      "source": "top"
                    },
                    {
                      "type": "var",
                      "data": "left",
                      "source": "left"
                    }
                  ],
                  "source": "top.left"
                }
              },
              {
                "type": "var",
                "data": "y",
                "source": "y"
              },
              {
                "type": "var",
                "data": "hitbox_size",
                "source": "hitbox_size"
              },
              {
                "type": "opr",
                "data": "-",
                "source": "top.height - x25",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "top",
                      "source": "top"
                    },
                    {
                      "type": "var",
                      "data": "height",
                      "source": "height"
                    }
                  ],
                  "source": "top.height"
                },
                "right": {
                  "type": "var",
                  "data": "x25",
                  "source": "x25"
                }
              }
            ],
            "source": "checkCollision(x + top.left, y, hitbox_size, top.height - x25)"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "state.cursor = \"ew-resize\"",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "state",
                        "source": "state"
                      },
                      {
                        "type": "var",
                        "data": "cursor",
                        "source": "cursor"
                      }
                    ],
                    "source": "state.cursor"
                  },
                  "right": {
                    "type": "str",
                    "data": "ew-resize",
                    "source": "\"ew-resize\""
                  },
                  "line": 115
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_ondown (",
                  "line": 116
                },
                {
                  "type": "var",
                  "data": "mouse_ondown",
                  "source": "mouse_ondown"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "source": "state.changeState(\"left\",\"width\")",
                        "left": {
                          "type": "var",
                          "data": "state",
                          "source": "state"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "mtv",
                              "data": "changeState",
                              "parameters": [
                                {
                                  "type": "str",
                                  "data": "left",
                                  "source": "\"left\""
                                },
                                {
                                  "type": "str",
                                  "data": "width",
                                  "source": "\"width\""
                                }
                              ],
                              "source": "changeState(\"left\",\"width\")"
                            }
                          ],
                          "source": "state.changeState(\"left\",\"width\")"
                        },
                        "line": 117
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if checkCollision(x + top.right, y, hitbox_size, top.height - x25) (",
            "line": 121
          },
          {
            "type": "fnc",
            "data": "checkCollision",
            "parameters": [
              {
                "type": "opr",
                "data": "+",
                "source": "x + top.right",
                "left": {
                  "type": "var",
                  "data": "x",
                  "source": "x"
                },
                "right": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "top",
                      "source": "top"
                    },
                    {
                      "type": "var",
                      "data": "right",
                      "source": "right"
                    }
                  ],
                  "source": "top.right"
                }
              },
              {
                "type": "var",
                "data": "y",
                "source": "y"
              },
              {
                "type": "var",
                "data": "hitbox_size",
                "source": "hitbox_size"
              },
              {
                "type": "opr",
                "data": "-",
                "source": "top.height - x25",
                "left": {
                  "type": "mtd",
                  "data": [
                    {
                      "type": "var",
                      "data": "top",
                      "source": "top"
                    },
                    {
                      "type": "var",
                      "data": "height",
                      "source": "height"
                    }
                  ],
                  "source": "top.height"
                },
                "right": {
                  "type": "var",
                  "data": "x25",
                  "source": "x25"
                }
              }
            ],
            "source": "checkCollision(x + top.right, y, hitbox_size, top.height - x25)"
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "asi",
                  "data": "=",
                  "source": "state.cursor = \"ew-resize\"",
                  "left": {
                    "type": "mtd",
                    "data": [
                      {
                        "type": "var",
                        "data": "state",
                        "source": "state"
                      },
                      {
                        "type": "var",
                        "data": "cursor",
                        "source": "cursor"
                      }
                    ],
                    "source": "state.cursor"
                  },
                  "right": {
                    "type": "str",
                    "data": "ew-resize",
                    "source": "\"ew-resize\""
                  },
                  "line": 122
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if mouse_ondown (",
                  "line": 123
                },
                {
                  "type": "var",
                  "data": "mouse_ondown",
                  "source": "mouse_ondown"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=??",
                        "source": "state.changeState(\"right\",\"width\")",
                        "left": {
                          "type": "var",
                          "data": "state",
                          "source": "state"
                        },
                        "right": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "mtv",
                              "data": "changeState",
                              "parameters": [
                                {
                                  "type": "str",
                                  "data": "right",
                                  "source": "\"right\""
                                },
                                {
                                  "type": "str",
                                  "data": "width",
                                  "source": "\"width\""
                                }
                              ],
                              "source": "changeState(\"right\",\"width\")"
                            }
                          ],
                          "source": "state.changeState(\"right\",\"width\")"
                        },
                        "line": 124
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if top.tile == null (",
            "line": 128
          },
          {
            "type": "cmp",
            "data": "==",
            "source": "top.tile == null",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "top",
                  "source": "top"
                },
                {
                  "type": "var",
                  "data": "tile",
                  "source": "tile"
                }
              ],
              "source": "top.tile"
            },
            "right": {
              "type": "unk",
              "data": null,
              "source": "null"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if checkCollision(x, y + top.top, top.width - x25, hitbox_size) (",
                  "line": 130
                },
                {
                  "type": "fnc",
                  "data": "checkCollision",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "x",
                      "source": "x"
                    },
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "y + top.top",
                      "left": {
                        "type": "var",
                        "data": "y",
                        "source": "y"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          }
                        ],
                        "source": "top.top"
                      }
                    },
                    {
                      "type": "opr",
                      "data": "-",
                      "source": "top.width - x25",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "width",
                            "source": "width"
                          }
                        ],
                        "source": "top.width"
                      },
                      "right": {
                        "type": "var",
                        "data": "x25",
                        "source": "x25"
                      }
                    },
                    {
                      "type": "var",
                      "data": "hitbox_size",
                      "source": "hitbox_size"
                    }
                  ],
                  "source": "checkCollision(x, y + top.top, top.width - x25, hitbox_size)"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.cursor = \"ns-resize\"",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "cursor",
                              "source": "cursor"
                            }
                          ],
                          "source": "state.cursor"
                        },
                        "right": {
                          "type": "str",
                          "data": "ns-resize",
                          "source": "\"ns-resize\""
                        },
                        "line": 131
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_ondown (",
                        "line": 132
                      },
                      {
                        "type": "var",
                        "data": "mouse_ondown",
                        "source": "mouse_ondown"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "source": "state.changeState(\"top\",\"height\")",
                              "left": {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "state",
                                    "source": "state"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "changeState",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "top",
                                        "source": "\"top\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "height",
                                        "source": "\"height\""
                                      }
                                    ],
                                    "source": "changeState(\"top\",\"height\")"
                                  }
                                ],
                                "source": "state.changeState(\"top\",\"height\")"
                              },
                              "line": 133
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if checkCollision(x, y + top.bottom, top.width - x25, hitbox_size) (",
                  "line": 137
                },
                {
                  "type": "fnc",
                  "data": "checkCollision",
                  "parameters": [
                    {
                      "type": "var",
                      "data": "x",
                      "source": "x"
                    },
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "y + top.bottom",
                      "left": {
                        "type": "var",
                        "data": "y",
                        "source": "y"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "bottom",
                            "source": "bottom"
                          }
                        ],
                        "source": "top.bottom"
                      }
                    },
                    {
                      "type": "opr",
                      "data": "-",
                      "source": "top.width - x25",
                      "left": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "width",
                            "source": "width"
                          }
                        ],
                        "source": "top.width"
                      },
                      "right": {
                        "type": "var",
                        "data": "x25",
                        "source": "x25"
                      }
                    },
                    {
                      "type": "var",
                      "data": "hitbox_size",
                      "source": "hitbox_size"
                    }
                  ],
                  "source": "checkCollision(x, y + top.bottom, top.width - x25, hitbox_size)"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.cursor = \"ns-resize\"",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "cursor",
                              "source": "cursor"
                            }
                          ],
                          "source": "state.cursor"
                        },
                        "right": {
                          "type": "str",
                          "data": "ns-resize",
                          "source": "\"ns-resize\""
                        },
                        "line": 138
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_ondown (",
                        "line": 139
                      },
                      {
                        "type": "var",
                        "data": "mouse_ondown",
                        "source": "mouse_ondown"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "source": "state.changeState(\"bottom\",\"height\")",
                              "left": {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "state",
                                    "source": "state"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "changeState",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "bottom",
                                        "source": "\"bottom\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "height",
                                        "source": "\"height\""
                                      }
                                    ],
                                    "source": "changeState(\"bottom\",\"height\")"
                                  }
                                ],
                                "source": "state.changeState(\"bottom\",\"height\")"
                              },
                              "line": 140
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if checkCollision(x + top.right, y + top.top, x2, x2) (",
                  "line": 144
                },
                {
                  "type": "fnc",
                  "data": "checkCollision",
                  "parameters": [
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "x + top.right",
                      "left": {
                        "type": "var",
                        "data": "x",
                        "source": "x"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "right",
                            "source": "right"
                          }
                        ],
                        "source": "top.right"
                      }
                    },
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "y + top.top",
                      "left": {
                        "type": "var",
                        "data": "y",
                        "source": "y"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          }
                        ],
                        "source": "top.top"
                      }
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    }
                  ],
                  "source": "checkCollision(x + top.right, y + top.top, x2, x2)"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.cursor = \"nesw-resize\"",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "cursor",
                              "source": "cursor"
                            }
                          ],
                          "source": "state.cursor"
                        },
                        "right": {
                          "type": "str",
                          "data": "nesw-resize",
                          "source": "\"nesw-resize\""
                        },
                        "line": 145
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_ondown (",
                        "line": 146
                      },
                      {
                        "type": "var",
                        "data": "mouse_ondown",
                        "source": "mouse_ondown"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "source": "state.changeState(\"right,top\",\"both\")",
                              "left": {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "state",
                                    "source": "state"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "changeState",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "right,top",
                                        "source": "\"right,top\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "both",
                                        "source": "\"both\""
                                      }
                                    ],
                                    "source": "changeState(\"right,top\",\"both\")"
                                  }
                                ],
                                "source": "state.changeState(\"right,top\",\"both\")"
                              },
                              "line": 147
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if checkCollision(x + top.right, y + top.bottom, x2, x2) (",
                  "line": 151
                },
                {
                  "type": "fnc",
                  "data": "checkCollision",
                  "parameters": [
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "x + top.right",
                      "left": {
                        "type": "var",
                        "data": "x",
                        "source": "x"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "right",
                            "source": "right"
                          }
                        ],
                        "source": "top.right"
                      }
                    },
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "y + top.bottom",
                      "left": {
                        "type": "var",
                        "data": "y",
                        "source": "y"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "bottom",
                            "source": "bottom"
                          }
                        ],
                        "source": "top.bottom"
                      }
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    }
                  ],
                  "source": "checkCollision(x + top.right, y + top.bottom, x2, x2)"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.cursor = \"nwse-resize\"",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "cursor",
                              "source": "cursor"
                            }
                          ],
                          "source": "state.cursor"
                        },
                        "right": {
                          "type": "str",
                          "data": "nwse-resize",
                          "source": "\"nwse-resize\""
                        },
                        "line": 152
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_ondown (",
                        "line": 153
                      },
                      {
                        "type": "var",
                        "data": "mouse_ondown",
                        "source": "mouse_ondown"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "source": "state.changeState(\"right,bottom\",\"both\")",
                              "left": {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "state",
                                    "source": "state"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "changeState",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "right,bottom",
                                        "source": "\"right,bottom\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "both",
                                        "source": "\"both\""
                                      }
                                    ],
                                    "source": "changeState(\"right,bottom\",\"both\")"
                                  }
                                ],
                                "source": "state.changeState(\"right,bottom\",\"both\")"
                              },
                              "line": 154
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if checkCollision(x + top.left, y + top.top, x2, x2) (",
                  "line": 158
                },
                {
                  "type": "fnc",
                  "data": "checkCollision",
                  "parameters": [
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "x + top.left",
                      "left": {
                        "type": "var",
                        "data": "x",
                        "source": "x"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "left",
                            "source": "left"
                          }
                        ],
                        "source": "top.left"
                      }
                    },
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "y + top.top",
                      "left": {
                        "type": "var",
                        "data": "y",
                        "source": "y"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          }
                        ],
                        "source": "top.top"
                      }
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    }
                  ],
                  "source": "checkCollision(x + top.left, y + top.top, x2, x2)"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.cursor = \"nwse-resize\"",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "cursor",
                              "source": "cursor"
                            }
                          ],
                          "source": "state.cursor"
                        },
                        "right": {
                          "type": "str",
                          "data": "nwse-resize",
                          "source": "\"nwse-resize\""
                        },
                        "line": 159
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_ondown (",
                        "line": 160
                      },
                      {
                        "type": "var",
                        "data": "mouse_ondown",
                        "source": "mouse_ondown"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "source": "state.changeState(\"left,top\",\"both\")",
                              "left": {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "state",
                                    "source": "state"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "changeState",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "left,top",
                                        "source": "\"left,top\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "both",
                                        "source": "\"both\""
                                      }
                                    ],
                                    "source": "changeState(\"left,top\",\"both\")"
                                  }
                                ],
                                "source": "state.changeState(\"left,top\",\"both\")"
                              },
                              "line": 161
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ],
              [
                {
                  "type": "cmd",
                  "data": "if",
                  "source": "if checkCollision(x + top.left, y + top.bottom, x2, x2) (",
                  "line": 165
                },
                {
                  "type": "fnc",
                  "data": "checkCollision",
                  "parameters": [
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "x + top.left",
                      "left": {
                        "type": "var",
                        "data": "x",
                        "source": "x"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "left",
                            "source": "left"
                          }
                        ],
                        "source": "top.left"
                      }
                    },
                    {
                      "type": "opr",
                      "data": "+",
                      "source": "y + top.bottom",
                      "left": {
                        "type": "var",
                        "data": "y",
                        "source": "y"
                      },
                      "right": {
                        "type": "mtd",
                        "data": [
                          {
                            "type": "var",
                            "data": "top",
                            "source": "top"
                          },
                          {
                            "type": "var",
                            "data": "bottom",
                            "source": "bottom"
                          }
                        ],
                        "source": "top.bottom"
                      }
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    },
                    {
                      "type": "var",
                      "data": "x2",
                      "source": "x2"
                    }
                  ],
                  "source": "checkCollision(x + top.left, y + top.bottom, x2, x2)"
                },
                {
                  "type": "blk",
                  "data": [
                    [
                      {
                        "type": "asi",
                        "data": "=",
                        "source": "state.cursor = \"nesw-resize\"",
                        "left": {
                          "type": "mtd",
                          "data": [
                            {
                              "type": "var",
                              "data": "state",
                              "source": "state"
                            },
                            {
                              "type": "var",
                              "data": "cursor",
                              "source": "cursor"
                            }
                          ],
                          "source": "state.cursor"
                        },
                        "right": {
                          "type": "str",
                          "data": "nesw-resize",
                          "source": "\"nesw-resize\""
                        },
                        "line": 166
                      }
                    ],
                    [
                      {
                        "type": "cmd",
                        "data": "if",
                        "source": "if mouse_ondown (",
                        "line": 167
                      },
                      {
                        "type": "var",
                        "data": "mouse_ondown",
                        "source": "mouse_ondown"
                      },
                      {
                        "type": "blk",
                        "data": [
                          [
                            {
                              "type": "asi",
                              "data": "=??",
                              "source": "state.changeState(\"left,bottom\",\"both\")",
                              "left": {
                                "type": "var",
                                "data": "state",
                                "source": "state"
                              },
                              "right": {
                                "type": "mtd",
                                "data": [
                                  {
                                    "type": "var",
                                    "data": "state",
                                    "source": "state"
                                  },
                                  {
                                    "type": "mtv",
                                    "data": "changeState",
                                    "parameters": [
                                      {
                                        "type": "str",
                                        "data": "left,bottom",
                                        "source": "\"left,bottom\""
                                      },
                                      {
                                        "type": "str",
                                        "data": "both",
                                        "source": "\"both\""
                                      }
                                    ],
                                    "source": "changeState(\"left,bottom\",\"both\")"
                                  }
                                ],
                                "source": "state.changeState(\"left,bottom\",\"both\")"
                              },
                              "line": 168
                            }
                          ]
                        ],
                        "source": "[ast BLK]"
                      }
                    ]
                  ],
                  "source": "[ast BLK]"
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ]
      ],
      "source": "[ast BLK]"
    },
    {
      "type": "var",
      "data": "else",
      "source": "else"
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if state.dragEdge != null (",
            "line": 173
          },
          {
            "type": "cmp",
            "data": "!=",
            "source": "state.dragEdge != null",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "state",
                  "source": "state"
                },
                {
                  "type": "var",
                  "data": "dragEdge",
                  "source": "dragEdge"
                }
              ],
              "source": "state.dragEdge"
            },
            "right": {
              "type": "unk",
              "data": null,
              "source": "null"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "fnc",
                  "data": "dragEdge",
                  "parameters": [
                    {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "state",
                          "source": "state"
                        },
                        {
                          "type": "var",
                          "data": "prop",
                          "source": "prop"
                        }
                      ],
                      "source": "state.prop"
                    },
                    {
                      "type": "mtd",
                      "data": [
                        {
                          "type": "var",
                          "data": "state",
                          "source": "state"
                        },
                        {
                          "type": "var",
                          "data": "axis",
                          "source": "axis"
                        }
                      ],
                      "source": "state.axis"
                    }
                  ],
                  "source": "dragEdge(state.prop,state.axis)",
                  "line": 174
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ],
        [
          {
            "type": "cmd",
            "data": "if",
            "source": "if state.dragDiag != null (",
            "line": 176
          },
          {
            "type": "cmp",
            "data": "!=",
            "source": "state.dragDiag != null",
            "left": {
              "type": "mtd",
              "data": [
                {
                  "type": "var",
                  "data": "state",
                  "source": "state"
                },
                {
                  "type": "var",
                  "data": "dragDiag",
                  "source": "dragDiag"
                }
              ],
              "source": "state.dragDiag"
            },
            "right": {
              "type": "unk",
              "data": null,
              "source": "null"
            }
          },
          {
            "type": "blk",
            "data": [
              [
                {
                  "type": "fnc",
                  "data": "dragDiagonal",
                  "parameters": [],
                  "source": "dragDiagonal()",
                  "line": 177
                }
              ]
            ],
            "source": "[ast BLK]"
          }
        ]
      ],
      "source": "[ast BLK]"
    }
  ],
  [
    {
      "type": "cmd",
      "data": "if",
      "source": "if state.cursor != null (",
      "line": 180
    },
    {
      "type": "cmp",
      "data": "!=",
      "source": "state.cursor != null",
      "left": {
        "type": "mtd",
        "data": [
          {
            "type": "var",
            "data": "state",
            "source": "state"
          },
          {
            "type": "var",
            "data": "cursor",
            "source": "cursor"
          }
        ],
        "source": "state.cursor"
      },
      "right": {
        "type": "unk",
        "data": null,
        "source": "null"
      }
    },
    {
      "type": "blk",
      "data": [
        [
          {
            "type": "cmd",
            "data": "cursor",
            "source": "cursor state.cursor",
            "line": 181
          },
          {
            "type": "mtd",
            "data": [
              {
                "type": "var",
                "data": "state",
                "source": "state"
              },
              {
                "type": "var",
                "data": "cursor",
                "source": "cursor"
              }
            ],
            "source": "state.cursor"
          }
        ]
      ],
      "source": "[ast BLK]"
    }
  ]
]