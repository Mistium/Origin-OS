import as "glass" from "packages"
import "window_tools"
load_theme

permission "request" "save admin"
permission "request" "javascript"
permission "request" "terminal"
permission "request" "file admin"
permission "request" "account"
permission "request" "kernel"

def "setting_toggle" "txt, w, state, callback" (
  local x = x_position
  square w 30 10 : c#prim
  change_x w / -2 + 10
  text txt 10 : c#txtc
  set_x x + (w / 2 - 15)
  square 30 30 5 : c#seco
  if onclick (
    set_x x
    return callback()
  )
  if state (
    icon "tick" 0.8 : c#txtc
  )
  set_x x
)

def "setting_do" "txt, w, callback, inp" (
  local x = x_position
  square w 30 10 : c#prim
  local cl = onclick
  change_x w / -2 + 5
  text txt 10 : c#txtc
  set_x x
  if cl (
    void callback(inp ?? "")
  )
)

def "setting_input" "id, default_txt, w, callback" (
  square w 30 10 : c#prim
  if inputs[id] == null (
    inputs[id] = default_txt
  )
  if "enter".onKeyDown() (
    return callback(inputs[id])
  )
  input w - 10 25 id null 10
)

def parseUserAgent(string ua) string (
  string browser = "Unknown Browser"
  string os = "Unknown OS"

  if ua.contains("Firefox") (
    browser = "Firefox"
  ) else if ua.contains("Chrome") (
    browser = "Chrome"
  ) else if ua.contains("Safari") (
    browser = "Safari"
  ) else if ua.contains("Edg") (
    browser = "Edge"
  ) else if ua.contains("Opera") (
    browser = "Opera"
  )


  if ua.contains("Windows") (
    os = "Windows"
  ) else if ua.contains("Mac") (
    os = "macOS"
  ) else if ua.contains("Linux") (
    os = "Linux"
  ) else if ua.contains("Android") (
    os = "Android"
  ) else if ua.contains("like Mac") (
    os = "iOS"
  )

  return browser ++ " on " ++ os
)

def "appopt" "optname,opticn,icnsize" (
  loc 999 2 0 y
  square frame_width - 25 30 10 1 : c#prim
  loc 2 2 30 y
  icon opticn icnsize.destr : c#txtc
  change_x 25
  text optname 8
)

def "DrawCategory" "setting,icn_code" (
  temp = x_position
  change_x 80
  if category == setting (
    square 190 30 15 : c#seco
    square 190 30 10 : c#prim
  ) else (
    square 190 30 15 0 1
  )
  if onclick (
    category = setting
    subcategory = "none"
  )
  icon icn_code 0.8 : c#txtc chx#-80
  change_x 25
  text setting 10
  goto temp y_position - 50
)

def "option" "name,icn_code" (
  loc 999 2 0 y
  local w = frame.width - 100
  square w 30 10 0 1
  if mouse_touching (
    square w 30 15 : c#seco
    square w 30 10 : c#prim
    if onclick (
      gotosubcategory = name
    )
  ) else (
    square w 30 15 1 : c#prim
  )
  change_x w / -2 + 20
  icn_code ??= name
  icon icn_code 0.8 : c#txtc
  text name 10 : chx#30
  y -= 50
  page_len += 50
)

def "system" (
  local w = frame.width - 25
  switch subcategory (
    case "none"
      option "Display" "w 3 square 0 3 10 7 w 3 line 0 -7 0 -10 line -6 -10 6 -10"
      option "Media" "w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80"
      option "Boot Applications" "w 2.5 cutcircle 0 0 10 18 130 line 0 4 0 10"
      option "Time" "alarm-clock"
      break
    case "About"
      info
      break
    case "Display"
      loc 2 2 10 -20 + scroll_y
      text "Origin Resolution: " ++ screensize_x ++ "x" ++ screensize_y 10 : c#txtc
      
      goto 0 window.top - 100 + scroll_y
      
      display "invert" "get"
      c #txtc
      setting_toggle "Invert Colours" w data === 100 def(val) -> (
        display "invert" "get"
        inp = 100 - data
        display "invert" "set" inp
      )

      change_y -50
      display "saturation" "get"
      c #txtc
      setting_toggle "Black & White" w data === 0 def(val) -> (
        display "saturation" "get"
        inp = 100 - data
        display "saturation" "set" inp
      )

      change_y -50
      display "contrast" "get"
      c #txtc
      setting_toggle "Increase Contrast" w data === 110 def(val) -> (
        display "contrast" "get"
        inp = data == 110 ? 100 110
        display "contrast" "set" inp
      )
      break
    case "Media"
      if media == "" (
        terminal "get access camera"
        data2 = data
        terminal "get access microphone"
        if [data, data2].contains("granted") (
          terminal "get mediadevices"
          media = data.JsonParse()
          keys = media.getKeys()
          types = media.getValues().getKeys("type")
        ) else (
          media = "Please Grant Origin Microphone And Camera Permissions"
        )
      )
      loc 2 2 10 -40 + scroll_y
      text "System Volume" + round(slider_volume * 100) ++ "%" 10 : c#txtc
      loc 999 2 0 -90 + scroll_y
      terminal "system sound get volume"
      slider_volume = data / 100
      slider w 40 "volume" 15 : c#prim
      terminal "system sound set volume " ++ (slider_volume * 100)
      c txtc
      loc 2 2 10 -160 + scroll_y
      if media.istype("object") (
        text "Media Devices" 10
        for i keys.len (
          y = i + 2.5 * -60 + scroll_y
          loc 999 2 0 y
          w = frame.width - 25
          square w 40 15 : c#prim
          if mouse_touching (
            square w 40 15 : c#seco
            square w 40 10 : c#prim
          )
          cur = keys[i]
          loc 2 2 30 y
          square 30 30 10 : c#seco
          c txtc
          type = types[i]
          if type == "audiooutput" or type == "audioboth" (
            icon "w 2 cutcircle -3 -1.5 6.5 -9 90 line -3 5 0 7 line -3 -8 0 -10 line 0 -10 0 7 cutcircle 4 -2 3 9 90 cutcircle 4 -2 8 9 80" 0.7
          )
          if type == "audioinput" (
            icon "w 3 line 0 -8 0 -5 line -4 -10 4 -10 cutcircle 0 2 7 18 70 w 7 line 0 2 0 8" 0.7
          )
          if type == "videoinput" (
            icon "w 3 line 8 -6 8 6 cont -4 6 cont -4 -6 cont 8 -6 cont -4 -6 cont -4 0 cont -10 -5 cont -10 5 cont -4 0" 0.7
          )
          text cur 9 : chx#30
        )
        page_len = keys.len + 3 * 60
      ) else (
        text media 10
        page_len = 100
      )
      break
    case "Boot Applications"
      boot_apps = user.onboot
      if new_transmit (
        file "open" transmit_data
        f = file[3] ++ "/" ++ file[2] ++ file[1]
        void boot_apps.append(f)
        network "update" "onboot" boot_apps
        new_transmit = false
      )
      w = frame.width - 25
      y = -30 + scroll_y
      loc 9999 2 0 y
      square w 30 15 : c#prim
      loc 2 2 30 y
      icon "w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3" 0.6 : c#txtc
      if onclick (
        boot_apps = [
          "origin/(a) system/system apps/originWM.osl",
          "origin/(a) system/system apps/Desktop.osl",
          "origin/(a) system/docks/Dock.osl",
          "origin/(a) system/system apps/Quick_Settings.osl"
        ]
        network "update" "onboot" boot_apps
      )
      text "Reset Boot To Default" 9 : chx#20
      loc 2 2 20 -70 + scroll_y
      text "Drop File Here" 9 : c#txtc
      if file_dropped != 0 (
        local dat = open(file_dropped, ["location","name","type"])
        void boot_apps.append(dat[1] ++ "/" ++ dat[2] ++ dat[3])
       
        network "update" "onboot" boot_apps
        file_dropped = 0
      )
      loc 9999 2 0 y - 50
      square w 30 15 : c#prim
      if onclick (
        file "pick" "osl"
        can = false
      )
      loc 2 2 30 y - 50
      icon "upload" 0.7 : c#txtc
      text "Click here or drop an osl file to add it to your boot" 9 : chx#20

      for count boot_apps.len (
        y = count + 1.5 * -60 + scroll_y
        loc 999 2 0 y
        square w 40 15 : c#prim
        loc 2 2 15 y
        text boot_apps[count] 9 : c#txtc
        loc -2 2 -33 y
        square 30 30 10 0 1
        if mouse_touching (
          square 30 30 10 : c#prim
          if onclick (
            boot_apps.delete(count)
            network "update" "onboot" boot_apps
          )
        )
        icon "bin" 0.8 : c#txtc
      )
      page_len = boot_apps.len + 2 * 60
      break
    case "Time"
      goto 0 frame.top - 40 + scroll_y
      centext timestamp.timestamp("convert-time") ++ "." ++ timestamp.toStr().right(3) 20 : c#txtc
      change_y -50
      centext "Your originOS time is offset by" 10
      change_y -40
      centext time.offset ++ "ms" 20
      change_y -40
      centext "to make it more accurate" 10

      change_y -50
      setting_toggle "Show Seconds" w user.timeformat.show_seconds def() -> (
        local current_format = user.timeformat
        current_format.show_seconds = current_format.show_seconds.not()
        network "update" "timeformat" current_format
      )

      change_y -50
      setting_toggle "Use 24 hour time" w user.timeformat.hours == "24h" def() -> (
        local current_format = user.timeformat
        current_format.hours = current_format.hours == "24h" ? "12h" "24h"
        network "update" "timeformat" current_format
      )
      break
  )
  clicked = false
)

def "network_page" (
  local w = frame.width - 25
  if subcategory == "Cors Proxy" (
    loc 2 2 20 -20
    text "Current Cors Proxy: " ++ user.proxy ?? "https://apps.mistium.com/cors?url=" 10 : c#txtc
    
    set_x 0 : chy#-50
    
    setting_input "proxy" user.proxy ?? "https://apps.mistium.com/cors?url=" w def(value) -> (
      if value.startsWith("https://") (
        network "update" "proxy" value
      )
    )
    return
  )
  goto 0 window.top - 70 + scroll_y

  icon "network" 4 : c#txtc
  if network.connected (
    local message = "Connected"
  ) else (
    icon "w 2 line -10 -10 10 10" 4
    local message = "No Connection"
  )
  
  change_y -60
  centext message 10
  
  if roturlink.enabled (
    change_y -100
    setting_do "Connected to " ++ roturlink.wifi.ssid w () -> ()
    change_y -50
    setting_do "Signal Strength: " ++ roturlink.wifi.signal_strength w () -> ()
    
    change_y -70
    local networks @= roturlink.wifi.scan
      .sortBy("signal_strength")
      .reverse()
    
    setting_do networks.len + (networks.len == 1 ? "Network" "Networks") w def() -> ()
    change_y -10
    
    for i networks.len (
      local cur @= networks[i]
      set_x 0 : chy#-50
      setting_do cur.ssid w (val) -> (
        // implement network switching
      ) cur
      
      set_x w / 2 - 20
      local connection = round(cur.signal_strength.clamp(0, 75) / 25)
   
      icon "w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6" 0.8 : c#seco
      c txtc
      icon [
        "",
        "w 4 dot 0 -6",
        "w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6",
        "w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6"
      ][connection + 1] 0.8
    )
    page_len = networks.len * 50 + 350
  )
  // option "Cors Proxy" "network"
)

def "colour_selector" "name, id" (
  loc 9999 2 0 y
  local w = frame.width - 25
  square w 30 15 : c#prim
  if mouse_touching (
    square w 30 15 : c#seco
    square w 30 10 : c#prim
  )
  loc 2 2 15 y
  text name ++ ":" 10 : c#txtc
  loc -2 2 -130 y
  text theme_select[id] 10
  square 0 0 25 0 : chx#30
  c theme_select[id]
  square 0 0 20 0
  if onclick (
    colourpicker "setcol" theme_select[id]
    colourpicker "show"
    selected_col = id
  )
  if user.theme[id] != theme_select[id] (
    change_x -120
    square 20 20 10 0 1 : tooltip#"Reset Colour"
    if mouse_touching (
      square 20 20 15 : c#seco
      square 20 20 10 : c#prim
    )
    icon "reload" 0.5 : c#txtc
    if onclick (
      theme_select[id] = user.theme[id]
      colourpicker "setcol" theme_select[id]
      selected_col = id
    )
  )
)

def "appearance" (
  local w = frame.width - 25
  switch subcategory (
    case "none"
      option "Background" "w 3 square 0 0 10 10 line 5 -5 3 -3 cont 2 -4 line 1 -5 -2 -2 cont -5 -5 w 6 dot 3 4"
      option "Dock" "w 6 line -7 -7 0 -7 line 7 -7 7 -7"
      option "Windows" "maximise"
      option "Colours" "w 3 cutcircle 0 -3 5 18 120 cont 0 8 cont 4.9 -1.5 line 4 -3 -4 -3 line 4 -5.5 -4 -5.5"
      break
    case "Background"
      y = -30 + scroll_y
      w = frame.width - 25
      loc 9999 2 0 y
      square w 30 15 : c#prim
      if current_wallpaper == "" (
        if onclick (
          wallpaper_started = timer
          current_wallpaper = "Enter a url for your wallpaper here".ask()
        )
        loc 2 2 50 y
        text "Click To Add Custom Wallpaper" 10 : c#txtc
      )
      loc 2 2 27 y
      icon "w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10" 0.7 : c#txtc
      if !wallpapers.contains(current_wallpaper) (
        if current_wallpaper.imageinfo("loaded") (
          current_wallpaper = ""
        )
        if current_wallpaper != "" (
          image current_wallpaper 100 100
          text "Trying" 10 : c#txtc chx#20
        )
      )
      if timer - wallpaper_started > 10 and current_wallpaper != "" (
        current_wallpaper = ""
        say "Failed to load wallpaper"
      )

      y -= 50
      loc 9999 2 0 y
      square w 30 15 : c#prim
      loc 2 2 27 y
      icon "image" 0.7 : c#txtc
      text "Wallpaper Cover Mode" 10 : c#txtc chx#30

      w = frame.width / 2 - 25
      y -= 50
      array categories @= wallpaper_categories.getKeys()
      for i categories.len (
        object category @= wallpaper_categories[categories[i]]
        array wallpapers @= category.values
        loc 2 2 20 y
        text categories[i] 10 : c#txtc
        loc -2 2 -20 y
        if wallpapers.len > 2 (
          rigtext category.open ? "Show Less" "Show More" 10 : c#txtc
          if onclick (
            category.open = !category.open
          )
        )
        y += 100
        for count wallpapers.len (
          if count % 2 == 1 (
            if !category.open and count > 1 (
              break
            )
            y -= 230
          )
          loc count % 2 == 1 ? 4 -4 2 0 y
          square w 200 15 : c#prim
          string cur = wallpapers[count]
          if onclick and mouse_y < frame.top (
            terminal "system wallpaper" + cur
          )
          image cur w 200
        )
        y -= 150
      )

      if typeof(user.wallpaper_mode) != "string" (
        network "update" "wallpaper_mode" "Fill"
      )
      array modes = ["Fill","Center","Fit","Stretch"]
      local mode = (user.wallpaper_mode ?? "Fill").toStr().toTitle()
      log mode modes modes.index(mode)
      inputs.dropdowns ??= {}
      inputs.dropdowns.fillmode ??= {
        open: false,
        idx: modes.index(mode),
        value: mode
      }
      log inputs.dropdowns

      loc -2 2 -115 -80 + scroll_y
      dropdown 200 25 10 {
        id: "fillmode",
        options: modes,
        max_height: 300
      } : c#window_colour

      local fillmode @= inputs.dropdowns.fillmode.value
      if fillmode != null and fillmode != user.wallpaper_mode (
        terminal "system wallpapermode" + fillmode
        network "update" "wallpaper_mode" fillmode
      )

      page_len = -y + scroll_y
      break
    case "Dock"
      if new_transmit (
        file "open" transmit_data "onlyaccess"
        f = fileGet(3) ++ "/" ++ fileGet(2) ++ fileGet(1)
        segments.append(f)
        network "update" "origin_dock" segments
        new_transmit = false
      )
      w = frame.width - 25
      y = -30 + scroll_y
      loc 9999 2 0 y
      square w 30 15 : c#prim
      loc 2 2 30 y
      icon "w 4 cutcircle 0 -2 11 13.5 150 line -6 9 0 15 line -6 10 0 3" 0.6 : c#txtc
      text "Reset Dock To Default" 9 : chx#20
      if clicked (
        segments = [
          "Origin/(A) System/Docks/Modules/main.ode",
          "Origin/(A) System/Docks/Modules/applications.ode",
          "Origin/(A) System/Docks/Modules/running.ode",
          "Origin/(A) System/Docks/Modules/folders.ode",
          "Origin/(A) System/Docks/Modules/time.ode",
          "Origin/(A) System/Docks/Modules/battery.ode"
        ]
        network "update" "origin_dock" segments
      )
      if file_dropped != 0 (
        file "open" file_dropped "onlyaccess"
        data = fileGet(1)
        if data == ".ode" (
          f = fileGet(3) ++ "/" ++ fileGet(2) ++ data
          void segments.append(f)
          network "update" "origin_dock" segments
        )
        file_dropped = 0
      )
      loc 9999 2 0 y - 50
      square w 30 15 : c#prim
      if onclick (
        file "pick" "ode"
        can = false
      )
      loc 2 2 30 y - 50
      icon "upload" 0.7 : c#txtc
      text "Click here or drop an ode file to add it to your dock" 9 : chx#20
      for count segments.len (
        y = count + 2 * -50 + scroll_y
        loc 999 2 0 y
        w = frame_width - 25
        square w 30 15 : c#prim
        if mouse_touching (
          square w 30 15 : c#seco
          square w 30 10 : c#prim
        )
        loc 2 2 15 y
        text segments[count] 9 : c#txtc
        loc -2 2 -28 y
        square 30 30 10 0 1
        if mouse_touching (
          square 30 30 15 : c#seco
          square 30 30 10 : c#prim
          if onclick (
            segments.delete(count)
            network "update" "origin_dock" segments
          )
        )
        icon "bin" 0.8 : c#txtc
        change_x -45
        if count > 1 (
          square 30 30 15 0 1
          if mouse_touching (
            square 30 30 15 : c#seco
            square 30 30 10 : c#prim
            if onclick (
              segments.swap(count - 1,count)
              network "update" "origin_dock" segments
            )
          )
          icon "up" 0.8 : c#txtc
        )
        if count < segments.len (
          change_x -45
          square 30 30 15 0 1
          if mouse_touching (
            square 30 30 15 : c#seco
            square 30 30 10 : c#prim
            if onclick (
              segments.swap(count,count + 1)
              network "update" "origin_dock" segments
            )
          )
          icon "down" 0.8 : c#txtc
        )
      )
      page_len = segments.len + 2 * 60
      break
    case "windows"
      goto 0 frame.top + scroll_y - 30
      setting_toggle "Show Window Outline" w user.theme.show_outline != false def() -> (
        local theme = user.theme
        theme.show_outline = theme.show_outline == false
        network "update" "theme" theme
      )
      break
    case "Colours"
      if typeof(theme_select) != "object" (
        window_accent = global_accent
        theme_select = user.theme
      )
  
      y = -30 + scroll_y
      colour_selector "Accent Colour" "accent"

      y -= 70
      colour_selector "Window Background" "background"
      y -= 50
      colour_selector "Window Primary" "primary"
      y -= 50
      colour_selector "Window Secondary" "secondary"
      y -= 50
      colour_selector "Window Tertiary" "tertiary"
      y -= 50
      colour_selector "Window Text And Icons" "text"
  
      switch selected_col (
        case "accent"
          window_accent = picker_colour
          break
        case "background"
          window_colour = picker_colour
          break
        case "primary"
          prim = picker_colour
          break
        case "secondary"
          seco = picker_colour
          break
        case "tertiary"
          tert = picker_colour
          break
        case "text"
          txtc = picker_colour
          break
      )
      if selected_col != "" (
        theme_select[selected_col] = picker_colour
      )
      
      y -= 50
      loc 9999 2 0 y
      w = frame.width - 25
      square w 30 15 : c#prim
      if mouse_touching (
        if onclick (
          network "update" "theme" theme_select
        )
        square w 30 15 : c#seco
        square w 30 10 : c#prim
      )
      loc 2 2 30 y
      icon "save" 0.7 : c#txtc
      text "Save And Apply Theme" 9 : chx#30
      
      y -= 80
      each theme themes.getKeys() (
        loc 9999 2 0 y
        square w 30 15 : c#prim
        if mouse_touching (
          if onclick (
            theme_select = themes[theme]
            selected_col = ""
            
            prim = theme_select.primary
            seco = theme_select.secondary
            tert = theme_select.tertiary
            txtc = theme_select.text
            window_colour = theme_select.background
            window_accent = global_accent
          )
        )
        loc 2 2 30 y
        text theme 10 : c#txtc
        y -= 50
      )
      
      page_len = 380 + (themes.len * 50)      
      break
  )
  frame "clear"
)

def "files" (

  local w = frame.width - 100
  page_len = 0

  switch subcategory (
    case "none"
      option "File Types" "w 4 line -8 10 3 10 cont 8 5 cont 8 -10 cont -8 -10 cont -8 10"
      option "Storage" "w 3 line -10 10 5 10 cont 10 5 cont 10 -10 cont -10 -10 cont -10 10 line -4 5 2 5 w 8 line 0 -2 0 -2"
      break
    case "File Types"
      for count ftkeys.len (
        y = count * -60 + scroll_y + 30
        
        loc 999 2 0 y
        square frame.width - 20 40 10 : c#prim
        if mouse_touching (
          square frame.width - 20 40 10 : c#seco
          square frame.width - 20 40 5 : c#prim
        )
        
        loc 2 2 30 y
        square 40 40 10 : c#seco
        square 40 40 5 : c#prim
        
        ftv @= ftvalues[count]
        icon ftv[1] 1 : c#txtc
        text ftv[2] + "(" ++ ftkeys[count] ++ ")" 9 : chx#35 : c#txtc
      )
      page_len = count * 60
      break
    case "Storage"
      y = -160 + 75 + scroll_y
      loc 2 2 80 y
      image pfp 100 100
      text "(Network)" + username 15 : chx#80 chy#20 c#txtc
      change_x 20
      square 120 20 10 : c#prim chx#100
      if mouse_touching (
        cursor "pointer"
        if onclick (
          http "newtab" "https://patreon.com/mistium"
        )
      )
      image "https://origin.mistium.com/OSL%20Programs/assets/Settings/originOS%20patreon%20badge.png" null 25
      
      loc 2 2 160 y
      text formatFileSize(user.used_size) ++ "/" ++ formatFileSize(user.max_size) 10 : c#txtc
      loc 999 2 125 / 2 y - 35
      c prim
      bar frame_width - 200 20 10 user.used_size / user.max_size seco
      page_len = 460
  
      if total_files == 0 (
        loop 100 (
          file "open" current[1] "onlyaccess"
          dat = fileGet(4).toStr()
          file = dat.len + "bytes"
          file = " " * (15 - file.len) + file + "-" + fileGet(2)
          file.append(fileGet(1))
          files.append(file)
          current.delete(1)
          if fileGet(1) == ".folder" (
            current ++= fileGet(4)
          )
          total_files = files.len
          file_data = files.sort().reverse().trim(1,20)
        )

        goto frame.left + 30 frame.top + scroll_y - 200
        direction (timer * 100).sin() * 360
        icon "w 2 cutcircle 0 0 10 0 90" 1 : c#txtc
        direction 90
        text files.len + "Files Processed" 10 : chx#30
      ) else (
        loc 2 2 20 -200 + scroll_y
        text "Biggest Files" 9 : c#txtc
        for i file_data.len (
          loc 2 2 20 i * -30 - 200 + scroll_y
          text file_data[i] 9
        )
        page_len = file_data.len * 30 + 200
      )
      break
  )
)

def "account" (
  local w = frame.width - 100
  page_len = 500
  
  goto 0 frame.top - 50 + scroll_y
  
  if subcategory == "backups" (
    page_len = 0
    each this.backup user["sys.backups"] (
      if backup.isType("object") (
        page_len += 50
        setting_do backup.name + "(" ++ (backup.size / 1000).round() ++ "kb)" w def(id) -> (
          if "Restore this backup?".confirm() (
            network "server" "restore_backup" id
          )
        ) backup.id
        set_x 0 : chy#-50
      )
    )
    return
  )
  
  if subcategory == "banners" (
    page_len = 0
    goto 0 frame.top - 110 + scroll_y
    square w 200 10 : c#prim
    c seco
    square 50 50 20
    if mouse_touching (
      cursor "pointer"
      if onclick (
        if user["sys.currency"] >= 10 (
          local url = "Paste the url of an image to use as your banner".ask()
          network "getsync_asurl" url
          // invalid url, likely 404 or html data, needs to be an image
          if data.startsWith("data:text/html") (
            say "Banner purchase aborted"
            return
          )
          network "update" "banner" data
        ) else (
          say "You do not have enough credits for this"
        )
      )
    )
    c txtc
    icon "add" 1.5
    change_y 50
    centext "Add New Banner" 10
    change_y -100
    centext "Cost: 10 credits" 10
    change_y -20
    centext "You have " ++ user["sys.currency"] ++ " credits" 10
    
    array banners = []
    if user["sys.banner"] == null (
      change_y -60
      centext "Current banner:" 10
      change_y 100

      banners @= [user["sys.banner"]]
      y = y_position - (100 + (w / 6)) - 20
      
      each banner banners (
        goto 0 y
        square w w / 3 10 : c#prim
        image banner w w / 3
        y -= w / 3 + 20
      )
    )
    page_len = (w / 3 + 20) * banners.len + 250
    return
  )
  
  if subcategory == "connections" (
    /*
    local links = user["sys.links"]
    if links.contains("github") and github_data == "Loading" (
      github_data = ("https://api.github.com/user/" ++ links.github.id).getAsync()
    )
    setting_do "Github: " ++ (links.contains("github") ? github_data.login "Click To Link") w def() -> (
      network "server" "link" {
        service: "github",
        username: "What is your github username?".ask()
      }
    )
    */
    page_len = 50
    goto 0 frame.top + scroll_y + 25
    
    set_x 0 : chy#-50
    setting_do "Change Email (" ++ user.email ++ ")" w def() -> (
      network "update" "email" "Enter Your New Email".ask()
    )
    
    return
  )
  
  if subcategory == "Subscriptions" (
    page_len = 0
    if typeof(subscriptions) != "array" (
      goto 0 frame.top - 60 + scroll_y
      centext "Fetching Subscriptions" 10 : c#txtc
      
      data = ("https://social.rotur.dev/keys/mine?auth=" ++ roturToken()).getAsync()
      if data != "Loading" (
        subscriptions = data.filter(v -> (v["type"] == "subscription"))
      )
    ) else (
      goto 0 frame.top - 60 + scroll_y
      if subscriptions.len == 0 (
        centext "You have no subscriptions" 10 : c#txtc
      )
     
      for i subscriptions.len (
        cur @= subscriptions[i]
        x = x_position
        y = y_position
        square w 100 10 : c#prim
        change w / -2 + 10 30
        text cur.name ?? cur.key ++ "\n" 10 : c#txtc
        text "by: " ++ cur.creator ++ "\n" 10
        text "price (credits): " ++ cur.price ++ " per " ++ cur.subscription.frequency ++ " " ++ cur.subscription.period 10
        goto x y
        change w / 2 - 70
        square 100 40 10 : c#seco
        if onclick (
          if ("Are you sure you want to cancel '" ++ cur.name ++ "'?").confirm() (
            void ("https://social.rotur.dev/keys/cancel/" ++ cur.key ++ "?auth=" ++ roturToken()).getAsync()
            subscriptions = ""
          )
        )
        centext "Cancel" 10 : c#txtc
        goto x y
        change_y -120
        page_len += 120
      )
    )
    return
  )

  if subcategory == "Logins" (
    page_len = 0
    goto 0 frame.top - 60 + scroll_y
    array logins @= user["sys.logins"]
    logins.sortBy("timestamp")
    logins.reverse()

    if logins.len == 0 (
      centext "You have no logins" 10 : c#txtc
    )
    
    for i logins.len (
      object cur @= logins[i]
      x = x_position
      y = y_position
      square w 100 10 : c#prim
      change w / -2 + 10 30
      text "Login " ++ cur.timestamp.timestamp("to-relative") ++ " from " ++ cur.country ++ "\n" 10 : c#txtc
      text "Origin: " ++ cur.origin ++ "\n" 10
      text parseUserAgent(cur.userAgent) ++ "\n" 10
      goto x + (w / 2) - 50 y
      image "https://proxy.mistium.com?url=" ++ encodeURIComponent("https://favicon.is/" ++ cur.origin) 50 50
      goto x y
      change_y -120
      page_len += 120
    )
    return
  )
  
  if subcategory == "Privacy" (
    page_len = 500
    setting_toggle "Private Account?" w user.private def() -> (
      network "update" "private" user.private.not()
    )
    set_x 0 : chy#-50
    centext "Public Data:" 10 : c#txtc
    local items = {
      "username": "username",
      "profile picture": "pfp",
      "banner": "sys.banner",
      "bio": "bio",
      "theming and colours": "theme",
      "rotur credit total": "sys.currency",
      "your rotur operating system": "system",
      "account creation date": "created"
    }
    change_y -50
    local names = items.getKeys()
    local keys = items.getValues()
    for i names.len (
      square w 30 10 : c#prim
      set_x w / -2 + 10
      text names[i].toTitle() 10 : c#txtc tooltip#keys[i]
      set_x 0 : chy#-50
    )
    return
  )
  
  goto 0 frame.top - (w / 6) - 10 + scroll_y
  square w w / 3 10 : c#prim
  effect "transparency" 70
  image user.banner ++ "?radius=10" w w / 3
  effect "clear"
  page_len += w / 3
  
  local pfp_s = w / 3 - 30
  change_x w / -2 + (pfp_s / 2) + 15
  image pfp pfp_s pfp_s
  if current_pfp != "" (
    direction timer * 300
    icon "cutcircle 0 0 10 0 90" 1 : c#txtc
    direction 90
  ) else (
    square pfp_s pfp_s 10 0 1
    if mouse_touching (
      if mouse_ondown and timer - upload_time > 1 and current_pfp == "" (
        current_pfp = "Enter A Url".ask()
        upload_time = timer
      )
      change_y 20
      square 25 25 12 : c#seco
      icon "w 4 square 0 0 7 8 line -2 6 2 6 line 0 10 0 10" 0.7 : c#txtc
      
      square 81 10 20 : chy#-40 c#seco
      centext "Change PFP" 9 : c#txtc
      change_y 20
    )
  )
  
  local pos = [x_position + (pfp_s / 2) + 30, y_position + 15]
  goto pos
  
  local username_x = x_position
  local uname = user.username.trimText((frame.width - (frame.right + x_position)) / 15 - 5)
  text uname 15 : c#txtc
  
  loc -2 2 -70 -30 + scroll_y
  icon "edit" 0.8
  if onclick (
    subcategory = "Banners"
  )
  
  if current_pfp != "" (
    image current_pfp 0 0
    if current_pfp.imageinfo("loaded") (
      network "getsync_asurl" current_pfp
      network "update" "pfp" data
      current_pfp = ""
    )
    if timer - upload_time > 5 (
      current_pfp = ""
      say "Failed to load pfp, try a different   website or try again"
    )
  )
  local all_badges = System().badges ?? {}
  if all_badges.istype("object") (
    user_badges = user["sys.badges"]
    local w2 = user_badges.len * 30
    local username_w = uname.len * 15
    local x = pos[1] + username_w + 15 + w2
    if x < frame.right - 50 (
      pos[1] += username_w + 0
    ) else (
      pos[1] -= 15
      pos[2] -= 30
    )
    goto pos[1] + (w2 * .5) + 15 pos[2]
    square w2 - 5 25 10 : c#prim
    goto pos[1] + 30 pos[2]
    each badge user_badges (
      icon all_badges[badge].icon 1.2 : tooltip#badge
      if onclick (
        say all_badges[badge].description
      )
      change_x 30
    )
  )
  set_x username_x + 5
  change_y -25
  text user.system + "Account" 10 : c#txtc
  
  local bio_data = inputs.bio.join("\n")
  
  goto w / -2 frame.top - (w / 3) - 70 + scroll_y
  text "Bio (" ++ bio_data.len ++ "/200)" 10 : c#txtc
  
  if bio_data != user.bio (
    set_x w / 2 - 10
    icon "save" 0.7
    if onclick (
      network "update" "bio" inputs.bio.join("\n").strip()
    )
  )
  
  set_x 0 : chy#-70
  textbox w 100 "bio" 10 {
    bg_colour: prim,
    line_numbers: false
  }
  
  set_x 0 : chy#-100
  setting_do "Change Password" w def() -> (
    network "update" "password" "Enter Your New Password".ask().hashMD5()
  )
  
  change_y -20
  
  set_x 0 : chy#-50
  setting_do "Privacy" w def() -> (
    subcategory = "Privacy"
  )
  
  set_x 0 : chy#-50
  setting_do "Recent Logins" w def() -> (
    subcategory = "Logins"
  )
  
  set_x 0 : chy#-50
  setting_do "Connections" w def() -> (
    subcategory = "Connections"
  )
  
  set_x 0 : chy#-70
  setting_do "Subscriptions" w def() -> (
    subcategory = "Subscriptions"
  )
  
  change_y -20

  set_x 0 : chy#-50
  setting_do "Logout" w def() -> (
    eval "localStorage.setItem('origin_login', '')"
    terminal "shutdown"
  )
  
  page_len += 70
)

def "apps" (

)

def "permissions" (
  file "open" "~/application data/permissions.json" "onlyaccess"
  local perms = fileGet(4)
  if typeof(perms) != "object" (
    file "set" 4 {}
    perms = {}
  )
  
  local w = frame.width - 100
  
  if subcategory != "none" (
    local my_perms @= perms[subcategory]
    
    goto 0 window.top - 100 + frame.scroll
    file "open" subcategory "onlyaccess"
    file "render" 2
    change_y -50
    centext fileGet(2) 10 : c#txtc
    change_y -40
    centext fileGet(3) 9 : c#seco
    
    change_y -100
    square w 45 10 : c#prim
    change_x w / -2 + 20
    text "Add a permission" 10 : c#txtc
    set_x w / 2 - 20
    square 20 20 10 : c#seco tooltip#"Add"
    if onclick and can (
      void my_perms.prepend("Enter the permission name".ask())
      file "open" "~/application data/permissions.json" "onlyaccess"
      file "set" 4 perms
      file "close"
    )
    icon "add" 0.8 : c#txtc
    set_x 0
    change_y -70
    each perm my_perms (
      square w 45 10 : c#prim
      change_x w / -2 + 20
      text perm 10 : c#txtc
      set_x w / 2 - 20
      square 20 20 10 : c#seco tooltip#"Remove"
      if onclick and can (
        can = false
        void my_perms.delete(perm)
        file "open" "~/application data/permissions.json" "onlyaccess"
        file "set" 4 perms
        file "close"
      )
      icon "minus" 0.8 : c#txtc
      set_x 0 : chy#-60
    )
    file "close"
    
    page_len = my_perms.len * 60 + 330
    return
  )
  local perm_keys @= perms
    .getKeys()
    .prepend("__ADD__")
  
  if new_transmit (
    if transmit_source == picker_id (
      file "open" transmit_data "onlyaccess"
      if fileGet(1) == ".osl" (
        subcategory = fileGet(14)
        perms[fileGet(14)] ??= []
        file "open" "~/application data/permissions.json" "onlyaccess"
        file "set" 4 perms
        file "close"
      ) else (
        say "Invalid file type, select a .osl file"
      )
      
      file "close"
    )
    new_transmit = false
  )
  
  local ih = 60
  local count = round(frame.scroll / ih) - 1
  
  loop ceil(frame.height / ih) + 1 (
    count ++
    if count > perm_keys.len or count < 1 (
      continue
    )
    local uuid = perm_keys[count]
    goto 0 frame.top - (count - 0.5 * ih) + frame.scroll
    square w 45 10 : c#prim
    change_x w / -2 + 20
    if uuid == "__ADD__" (
      if onclick (
        file "pick"
        picker_id = data
      )
      text "Select a script to view and edit permissions".trimText(w / 10 - 8) 10 : c#txtc
      set_x w / 2 - 20
      icon "open" 0.8
    ) else (
      if onclick (
        subcategory = uuid
      )
      file "uuid_exists" uuid
      if exists.not() or perms[uuid].len == 0 (
        file "open" "~/application data/permissions.json" "onlyaccess"
        file "set" 4 perms.delete(uuid)
        file "close"
        continue
      )
      file "open" uuid "onlyaccess"
      file "render" 1.5
      change 25 -10
      local x = x_position
      text fileGet(3).trimText(w / 8 - 14) 8 : c#seco
      set_x x : chy#20
      text fileGet(2).trimText(w / 10 - 10) 10 : c#txtc
      set_x w / 2 - 20 : chy#-10
      icon "right" 0.8
    )
  )
  
  page_len = perm_keys.len * ih
)

def "bluetooth_page" (
  goto 0 frame.top - 40 + scroll_y
  w = frame.width - 100
  local connection = 0
  local changePage = def() -> (
    
  )
  local devices = roturlink.bluetooth.devices
    .filter(v -> (v.name != "unknown"))
    .sortBy("rssi")
    .reverse()
  
  inputs.bluetooth = roturlink.bluetooth.enabled
  setting_do devices.len ++ " Devices" w def() -> ()
  change_y -10
  
  each device devices (
    set_x 0 : chy#-50
    setting_do device.name w changePage
    
    set_x w / 2 - 20
    connection = round((device.rssi + 100).clamp(0, 100) / 25)
 
    icon "w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6" 0.8 : c#seco
    c txtc
    icon [
      "",
      "w 4 dot 0 -6",
      "w 3 cutcircle 0 -6 7 0 50 w 4 dot 0 -6",
      "w 3 cutcircle 0 -6 14 0 50 cutcircle 0 -6 7 0 50 w 4 dot 0 -6"
    ][connection + 1] 0.8
  )
  
  page_len = devices.len + 1 * 50
)

def "inputs" (
  local w = frame.width - 25
  switch subcategory (
    case "none"
      option "Mouse" "line -9 9 7 -1 cont -5 -6 cont -9 9 line 5.8 -10 -9 9 line 0 0 -5 -5"
      option "Keybinds" "w 2.5 line -3 7 -3 -7 line -7 3 7 3 line -7 -3 7 -3 line 3 7 3 -7 w 2.2 cutcircle -7 7 4 -4.5 135 cutcircle 7 7 4 4.5 135 cutcircle 7 -7 4 13.5 135 cutcircle -7 -7 4 -13.5 135"
      option "Gamepads" "controller"
      break
    case "Mouse"
      loc 2 2 10 -20
      text "Scroll Wheel Speed" 12 : c#txtc
      terminal "get scrollspeed"
      data = data.toNum()
      flipped = false
      if data < 0 (
        data *= -1
        flipped = true
      )
      slider_scrollsp = data.clamp(1,10)
      loc 2 2 10 -90
      text "Scrolling " ++ (round(slider_scrollsp * 10) / 10) ++ "x speed" 9 : c#txtc
      slider_scrollsp = slider_scrollsp - 1 / 9
      loc 999 2 0 -60
      slider w 25 "scrollsp" 10 : c#prim
      slider_scrollsp = slider_scrollsp * 9 + 1
      change_y -90
      setting_toggle "Invert Scroll Direction" w flipped def() -> (
        flipped = flipped.not()
      )
      if flipped (
        slider_scrollsp *= -1
      )
      terminal "system scrollspeed" + slider_scrollsp
      if slider_scrollsp != user.scrollspeed and mouse_down.not() (
        network "update" "scrollspeed" slider_scrollsp
      )
      break
    case "Keybinds"
      local keybinds @= "origin.keyboard.keybinds".eval()
      local keys = keybinds.getKeys()
      keybind_display ??= keys[1]
      keybind_selected ??= null
      goto 0 frame.top + scroll_y - 30
      for i keys.len (
        local cur = keys[i]
        set_x 0
        square w 30 10 : c#prim
        if mouse_touching (
          if onclick (
            keybind_display = cur
          )
          square w 30 15 : c#seco
          square w 30 10 : c#prim
        )
        set_x w / -2 + 10
        text cur ++ " (" ++ keybinds[cur].len ++ " binds)" 9 : c#txtc
        set_x w / 2 - 20
        icon keybind_display == cur ? "down" "right" 0.6
        change_y -50
        if keybind_display == cur (
          local binds @= keybinds[cur].getKeys()
          local height = binds.len * 30

          change_y height / -2 + 15
          page_len += height
          set_x 0
          change_y height / 2 - 15
          local w2 = w - 20
          for j binds.len (
            local cur2 = binds[j]
            set_x 0
            square w2 30 10 : c#prim
            if mouse_touching (
              square w2 30 15 : c#seco
              square w2 30 10 : c#prim
            )
            set_x w2 / -2 + 10
            text cur2 9 : c#txtc
            set_x w2 / 2 - 20
            if keybind_selected == cur2 (
              icon "close" 0.6 : tooltip#"Stop editing"
              if onclick (
                keybind_selected = null
              )
              change_x -30
              icon "save" 0.6 : tooltip#"Save keybind"
              if onclick (
                keybinds[cur][cur2] = inputs.bind.join("\n")
                save "keybinds.json" "set" keybinds.JsonFormat()
              )
              change_y -85
              set_x 0
              square w2 100 10 : c#prim
              textbox w2 100 "bind" 0 {
                line_numbers: {
                  bg_colour: prim
                },
                sel_colour: seco,
                text_colour: txtc,
              }
              change_y -35
              page_len += 320
            ) else (
              icon "edit" 0.6 : tooltip#"Edit keybind"
              if onclick (
                keybind_selected = cur2
                inputs.bind = keybinds[cur][cur2].split("\n")
              )
              change_x -30
              icon "bin" 0.6 : tooltip#"Delete keybind"
              if onclick (
                void keybinds[cur].delete(cur2)
                save "keybinds.json" "set" keybinds.JsonFormat()
              )
            )
            change_y -50
          )
          change_y -10
          set_x 0
          square w2 30 10 : c#prim
          change_x w2 / -2 + 10
          text "Click to add a keybind" 9 : c#txtc
          if onclick (
            local name = "What key?".ask()
            if binds.contains(name) (
              say "Key already exists"
            ) else (
              keybinds[cur][name] = ""
              keybind_selected = name
              inputs.bind = [""]
              save "keybinds.json" "set" keybinds.JsonFormat()
            )
          )
          change_y -60
          page_len += binds.len * 50
        )
        page_len += 50
      )
      break
    case "Gamepads"
      local gamepads = getGamepads()
      
      loc 2 2 10 -20 + scroll_y
      text "Total: " ++ gamepads.len ++ "/4" 10 : c#txtc
      
      y = y_position + 70
      for i gamepads.len (
        y -= 170
        local cur @= gamepads[i]
        goto 0 y
        square w 150 10 : c#prim
        set_x frame.left + 20 : chy#60
        text cur.id 10 : c#txtc
        goto frame.left + 30 y + 20
        for j cur.axes.len (
          local x = x_position
          square 0 0 30 : c#seco
          change cur.axes[j].x * 10 cur.axes[j].y * 10
          square 0 0 5 : c#txtc
          goto x + 40 y + 20
        )
        goto frame.left + 30 y - 20
        for j cur.buttons.len (
          local x = x_position
          if cur.buttons[j]["pressed"] (
            square 0 0 34 : c#txtc
          )
          square 0 0 30 : c#seco
          centext j 10 : c#txtc
          change_x 40
          if x_position > frame.right - 20 (
            set_x frame.left + 30 : chy#-40
          )
        )
      )
      break
  )
)


def "credits" (
  if subcategory == "none" (
    page_len = 290
    w = frame_width / 2 - 50
    loc 4 2 2.5 -95 + scroll_y
    square w 150 20 : c#prim
    square w 150 15 : c#global_accent
    square w 150 8 : c#prim
    c txtc
    x = x_position
    change_x -65
    icon "w 1 ellipse 0 0 10 0.5 100 ellipse 0 0 10 0.5 160 ellipse 0 0 10 0.5 220" 1.3
    text "roturTw" 15 : chx#30
    change -25 -18
    text "v5" 8
    set_x x : chy#-105
    square w 40 20 : c#prim
    if clicked (
      subcategory = "Extensions"
      extensions = "Object.keys(Object.fromEntries(vm.extensionManager._loadedExtensions))".eval()
      extensions.prepend("Total:" + extensions.len)
    )
    change_x w / -2 + 10
    text "Full Extensions List >" 9 -100 : c#txtc
    
    set_x x : chy#-70
    square w 40 20 : c#prim
    if clicked (
      subcategory = "Community"
    )
    change_x w / -2 + 10
    text "Community >" 9 -100 : c#txtc

    
    loc -4 2 -2.5 -95 + scroll_y
    square w 150 20 : c#prim
    if onclick (
      http "newtab" "https://turbowarp.org"
    )
    x = x_position
    change w / -2 + 30 40
    image "https://raw.githubusercontent.com/Mistium/Origin-OS/main/Resources/turbowarp_logo.png" 50 50
    change_x 30
    text "TurboWarp" 16 : c#txtc
    change -200 -45
    local y = y_position
    text "Thanks to GarboMuffin and the scratch team for making TurboWarp possible".wrapText(w / 9 - 1) 9
    goto x y - 120
    square w 40 20 : c#prim
    if onclick (
      http "newtab" "vm.runtime.platform.url".eval()
    )
    change_x w / -2 + 10
    text "Made With " ++ "vm.runtime.platform.name".eval() 10 : c#txtc
    goto x y - 190
    square w 40 20 : c#prim
    if clicked (
      subcategory = "Contributors"
    )
    change_x w / -2 + 10
    text "Github Contributors >" 9 -100 : c#txtc
  )
  if subcategory == "Extensions" (
    w = frame_width - 25
    for count extensions.len (
      y = count - 0.5 * -60 + scroll_y
      loc 999 2 0 y
      square w 40 15 1 : c#prim
      if mouse_touching (
        square w 40 15 : c#seco
        square w 40 10 1 : c#prim
      )
      loc 2 2 15 y
      text extensions[count] 9 : c#txtc
    )
    page_len = extensions.len * 60
  )
  if subcategory == "Contributors" (
    w = frame_width - 25
    for count contributors.len (
      local cur @= contributors[count]
      y = count - 0.5 * -60 + scroll_y
      loc 999 2 0 y
      square w 40 15 1 : c#prim
      if mouse_touching (
        square w 40 15 : c#seco
        square w 40 10 1 : c#prim
        if onclick (
          http "newtab" "https://github.com/" ++ cur.login
        )
      )
      loc 2 2 30 y
      image cur.avatar_url 40 40
      text cur.login 9 : c#txtc chx#30
      
      text "(" ++ cur.contributions ++ " commits)" 8 : chx#10
    )
    page_len = contributors.len * 60
  )
  if subcategory == "Community" (
    local url = "https://social.rotur.dev/supporters"
    local data = null
    if supporterData.getType() != "array" (
      data @= url.getAsync()
      if data.getType() == "array" (
        supporterData = data
      )
    )
    if supporterData == null (
      goto 0 0
      direction timer * 720
      icon "sync" .75 : c#txtc
    ) else (
      loc 2 2 115 -30 + scroll_y
      square 200 25 10 : c#prim hover_c#seco
      if onclick (
        http "newtab" "https://www.patreon.com/user?u=51594743"
      )
      centext "My Patreon" 10 : c#txtc chx#-17.5
      icon "open" .6 : chx#("My Patreon".len * 5 + 17.5)
      loc 2 2 15 -70 + scroll_y
      text "Patreon Supporters:" 10 : c#txtc
      
      supporters @= {
        "OriginPro": supporterData
          .filter(u -> u.subscription == "originPro")
          .map(u -> u.username),
        "OriginDrive": supporterData
          .filter(u -> u.subscription == "originDrive")
          .map(u -> u.username),
        "Supporter": supporterData
          .filter(u -> u.subscription == "Supporter")
          .map(u -> u.username)
      }
  
      local height = 0
      local y = 0
      local keys @= supporters.getKeys()
      local values @= supporters.getValues()
      for categoryi supporters.getKeys().len (
        local category @= values[categoryi]
        local categoryName @= keys[categoryi]

        if category.len > 0 (
          y += 20
          loc 2 2 15 -85 - y + scroll_y
          text categoryName 11.5 : c#txtc
          y += 20
          
          for useri category.len (
            local user @= category[useri]
            
            y += 8
            loc 2 2 25 -85 - y + scroll_y
            image "https://avatars.rotur.dev/" ++ user ++ "?radius=128" 22 : chx#15
            text user 10 : c#txtc chx#16.5
            y += 20
          )
        )
      )
      page_len = y + 80
    )
  )
)

def networking() (
  if new_network_data (
    if packet.username != "sys-rotur" (
      new_network_data = false
      return
    )
    switch network_data_command (
      case "ping"
        ping.time = timestamp - ping.sent
        break
      case "link"
        if packet.data == "Failed" (
          say "Unable to link to this account"
        )
        break
    )
    new_network_data = false
  )
)

def "about" (
  local w = frame.width - 25
  set_x frame.left + 20
  set_y frame.top - 20
  text "originOS v" ++ origin.version ++ "\n" 10 : c#txtc

  set_x frame.left + 20
  change_y -30
  local info = "originOS is a scratch-based desktop environment that runs the OSL programming language. It is designed to be a lightweight, customizable, and secure desktop experience."
  text info.wrapText(w / 10 - 4) 10 : c#txtc

  set_x frame.left + 20
  change_y -60
  text "Developed with <3 by Mistium" 10 : c#txtc
)

if passed_data == "" (
  category = "Account"
  subcategory = "none"
) else (
  passed_data.split("/")
  category = passed_data[1]
  subcategory = passed_data[2]
)

save "settings" "set_directory"
file "open" user_folder ++ ".folder"
ping = {
  "sent": timestamp,
  "time": 0
}

current = file[4]
files = []
file_data = ""
total_files = 0
contributors = "https://raw.githubusercontent.com/Mistium/Origin-OS/refs/heads/main/contributors.json"
  .httpGet()
  .JsonClean()
  .filter(v -> (v["type"] == "User"))

c_names @= contributors.getKeys("username")
c_imgs @= contributors.getKeys("avatar_url")

window "dimensions" 880 500
window_accent = global_accent
media = ""
segments = user.origin_dock
accent_select = ""
tier = null
network_drive = "none"
gotosubcategory = ""
current_pfp = ""
github_data = "Loading"
if "wallpapers.json".saveExists() (
  wallpapers = "wallpapers.json".saveGet()
) else (
  wallpapers = []
)

wallpaper_categories = {
  origin: {
    open: false,
    values: [
      "https://origin.mistium.com/Wallpapers/originOS%20Veil.jpeg",
      "https://origin.mistium.com/Wallpapers/originOS%20Dawn.jpeg",
      "https://origin.mistium.com/Wallpapers/originOS%20Rift.png",
      "https://origin.mistium.com/Wallpapers/originOS%20Flow.png",
    ]
  },
  nature: {
    open: false,
    values: [
      "https://images.pexels.com/photos/589810/pexels-photo-589810.jpeg",
      "https://images.pexels.com/photos/1612351/pexels-photo-1612351.jpeg",
      "https://images.pexels.com/photos/640781/pexels-photo-640781.jpeg",
      "https://images.pexels.com/photos/7919/pexels-photo.jpg"
    ]
  },
  city: {
    open: false,
    values: [
      "https://images.pexels.com/photos/1366957/pexels-photo-1366957.jpeg",
      "https://raw.githubusercontent.com/Mistium/wallpapers/refs/heads/main/cyberpunk-scene.jpg"
    ]
  },
  anime: {
    open: false,
    values: [
      "https://raw.githubusercontent.com/Mistium/wallpapers/refs/heads/main/asleep.jpg",
      "https://raw.githubusercontent.com/Mistium/wallpapers/refs/heads/main/miku-and-stars.jpg",
      "https://raw.githubusercontent.com/Mistium/wallpapers/refs/heads/main/miku.jpeg",
      "https://raw.githubusercontent.com/Mistium/wallpapers/refs/heads/main/warm-and-cozy.png",
    ]
  }
}
current_wallpaper = ""

themes = {
  "dark":{"primary":"#222222","secondary":"#555555","tertiary":"#777777","text":"#ffffff","background":"#050505","accent":"#57cdac"},
  "midnight":{"primary":"#111111","secondary":"#333333","tertiary":"#555555","text":"#ffffff","background":"#000000","accent":"#57cdac"},
  "light":{"primary":"#cccccc","secondary":"#e6e6e6","tertiary":"#ffffff","text":"#292929","background":"#b0b0b0","accent":"#57cdac"},
  "ocean":{"primary":"#1a1d28","secondary":"#313f4e","tertiary":"#4f617d","text":"#bae3ee","background":"#090a0b","accent":"#7cc2f8"},
  "forest":{"primary":"#1a2823","secondary":"#33523e","tertiary":"#417656","text":"#e5ffed","background":"#090b0a","accent":"#7ea59a"},
  "mint":{"primary":"#8fbcac","secondary":"#639274","tertiary":"#07170e","text":"#000000","background":"#cde5dd","accent":"#97f7dc"},
  "candyfloss":{"primary":"#9e8cb1","secondary":"#eac5f2","tertiary":"#170717","text":"#000000","background":"#cdb6d3","accent":"#f8e0ff"},
}

system
// file type pages
ftkeys = file_types.getKeys()
ftvalues = file_types.getValues()

inputs.bio = (user.bio ?? "").split("\n")

window "set_dragbox" [[2,2,260,0],[-2,2,-100,-40]]

pfp = "https://avatars.rotur.dev/" ++ username ++ "?radius=30"

supporterData = null

slider_brightness = (roturlink.enabled ? roturlink.brightness 100) / 100
upload_time = timer

mainloop:
networking()

glass:frame window.left window.top window.left + 215 window.bottom
c window_colour
pen "opacity" 40
icon "w 99999 dot 0 0" 10
pen "opacity" 0
frame "clear"


loc 2 2 105 -25
if category == "Account" (
  square 190 30 15 : c#seco
  square 190 30 10 : c#prim
) else (
  square 190 30 15 0 1
)

if onclick (
  category = "Account"
  subcategory = "none"
)
icon icn_code 0.8 : c#txtc chx#-80
text user.username.trimText(13) 10 : chx#30

set_x window.left + 25
change_y -70
DrawCategory "System" "w 2 cutcircle 0 0 12 4.5 150 cutcircle 0 0 7 5 150 line -2 -4 -8 -10"
DrawCategory "Style" "w 3 cutcircle 5 6 3 45 80 line 7.5 4 -4.5 -9 line 3.5 8.5 -9 -5 line -9 -5 -11 -11 line -4.5 -9 -11 -11"
DrawCategory "Files" "file"
DrawCategory "Inputs" "w 3 square 0 0 10 5.5 line 3 10 3 -10 line -1 10 7 10 line -1 -10 7 -10 line -5 0 -2 0"
if roturlink.enabled (
  DrawCategory "Network" "w 2.5 cutcircle 0 -5 14 0 45 cutcircle 0 -5 7 0 40 w 4 dot 0 -6"
  DrawCategory "Bluetooth" "w 3 line 0 10 0 -10 cont 5 -5 cont -5 5 line 0 10 5 5 cont -5 -5"
)

change_y -25
// DrawCategory "Apps" "grid-apps"
DrawCategory "Permissions" "key"

change_y -25
DrawCategory "About" "info"
DrawCategory "Credits" "w 3 cutcircle -4.5 -10 5.5 0 90 cutcircle 4 -5.5 6 3 60 cutcircle -5 5 2 0 180 cutcircle 5 8 2 0 180"

loc 2 2 25 -25
image pfp 35 35

loc 2 2 232 -25
if subcategory == "none" (
  text category 10 : c#txtc
) else (
  change_x 10
  square 20 20 15 0 1
  if mouse_touching (
    square 20 20 15 : c#seco
    square 20 20 10 : c#prim
  )
  icon "left-arrow" 0.6 : c#txtc
  if clicked (
    subcategory = "none"
  )
  change_x 30
  text subcategory 10
)
c seco
frame window.left + 215 window.top - 47 window.right window.bottom page_len
page_len = 0
y = -29 + scroll_y
startx = x_position
location = category + subcategory
switch category (
  case "System"
    system
    break
  case "Network"
    network_page
    break
  case "Bluetooth"
    bluetooth_page
    break
  case "Style"
    appearance
    break
  case "Files"
    files
    break
  case "Inputs"
    inputs
    break
  case "Account"
    account
    break
  case "Permissions"
    permissions
    break
  case "Apps"
    apps
    break
  case "About"
    about
    break
  case "credits"
    credits
    break
)

if mouse_down.not "can = True"
frame "clear"

if gotosubcategory != "" and mouse_down.not (
  subcategory = gotosubcategory
  gotosubcategory = ""
)
window.show()
import "win-buttons"
