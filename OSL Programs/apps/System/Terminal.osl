import as "glass" from "packages"
import "window_tools"

file "use_type" "ots"

terminal_worker @= worker({
  cmd: null,
  isThread: true,
  onframe: def() -> (
    if cmd != null (
      terminal cmd
      terminal @= terminal.trim(1, terminal_length) ++ terminal_output
      loops = terminal.len
      self.cmd = null
    )
  )
})

ansi = {
  "\e[30m": "#000",
  "\e[31m": "#f00",
  "\e[32m": "#0f0",
  "\e[33m": "#ff0",
  "\e[34m": "#00f",
  "\e[35m": "#f0f",
  "\e[36m": "#0ff",
  "\e[37m": "#fff",
  "\e[90m": "#555",
  "\e[91m": "#f55",
  "\e[92m": "#5f5",
  "\e[93m": "#ff5",
  "\e[94m": "#55f",
  "\e[95m": "#f5f",
  "\e[96m": "#5ff",
  "\e[97m": "#fff"
}

ansi_re = "/\e\[[0-9;]+m/g"

save "system@terminal" "set_directory"

mode = "norm"

if passed_data != "" (
  file "open" passed_data "onlyaccess"
  file "get" 4
  data.replace("/^[ \n\t]*/gm","")
  ots_script = data.split("\n")
  each i line ots_script (
    if line.startsWith("if ") or line.startsWith("jump ") (
      line.split(" ")
      if line.last()[1] == ":" (
        idx = ots_script.index(line.last())
        line[line.len] = idx
        ots_script[i] = line.join(" ").destr
      )
    )
  )
  mode = "ots"
) else (
  ots_script = ""
)
network "set_app_id" "terminal@system"
window "set_dragbox" [[2,2,0,0],[-2,2,-100,-30]]

user_start = username ++ "@originos ~ % "
terminal = []
canenter = true
input_1 = null
last = []
last_index = 0

permission "request" "terminal"

window.setDragbox([2,2,0,0],[-2,-2,0,0])

loops = 0
taking_input = false
ots_i = 1

mainloop:
load_theme

if all_hit.len > 0 and inputs.selected.id != "main" (
  input "focus" "main"
)

if new_network_data and terminal_worker.cmd == null (
  if packet.data.istype("array") (
    msg = packet.username + "> " + packet.data[0]
    each line packet.data.delete(1) (
      terminal.append(line)
      loops ++
    )
  ) else (
    terminal.append(packet.username + "> " + packet.data)
    loops ++
  )
  new_network_data = false
)

glass:frame window.left window.top window.right window.bottom
c window_colour
pen "opacity" 60
icon "w 999 dot 0 0" 100
frame "clear"

/* if mode == "SRE" (
  if "enter".onKeyDown() (
    network "SRE" input_1 sre_target
    terminal = terminal.destr.append(username ++ "/:" ++ input_1)
  )
) */
if mode == "norm" (
  if "enter".onKeyDown() (
    void last.append(inputs.main)
    last_index = last.len + 1
    try (
      if input_1.startsWith("SRE ") (
        mode = "SRE"
        sre_target = inputs.main.split(" ")[2]
      ) else (
        terminal_worker.cmd = inputs.main
        terminal_length = terminal.len + 1
      )
      void terminal.append(user_start ++ inputs.main)
    ) catch e (
      void terminal.append(user_start ++ inputs.main)
      void terminal.append(e.error)
    )
    loops = terminal.len
    terminal_output = []
    inputs.main = null
  )
  if terminal_worker.cmd != null (
    term @= window.getTerminal()
    terminal @= terminal.trim(1,terminal_length) ++ term
    loops = terminal.len
  )
)

if "arrowup".onKeyDown() (
  last_index --
  last_index.clamp(1,last.len)
  inputs.main = last[last_index]
)
if "arrowdown".onKeyDown() (
  last_index ++
  last_index.clamp(1,last.len + 1)
  inputs.main = last[last_index]
)

c prim
frame window.left window.top window.right + 20 window.bottom loops + 1.5 * 20

c txtc
count = floor(scroll_y / 20).clamp(0,loops)
loop round(frame_height / 20 + 3).clamp(0,loops) (
  count ++
  y = count * -20 + scroll_y + 5
  loc 2 2 10 y
  text terminal[count] 10
)

if terminal_worker.cmd == null (
  loc 2 2 10 loops * -20 + scroll_y - 15
  text user_start 10 : c#txtc
  set_x user_start.len * 5 - 10
  pen "opacity" 0
  input window_width - (user_start.len + 2 * 10) 30 "main" null null txtc
)
frame "clear"

import "win-buttons"