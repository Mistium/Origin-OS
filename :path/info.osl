local g = global_accent
local kernel = origin.kernel
local uptime = floor(timer / 3600) ++ "hrs, " ++ floor((timer % 3600) / 60) ++ "mins, " ++ round(timer % 60) ++ "secs"
try (
    local gpu = getGpuInfo()
) catch e (
    local gpu = {
        vendor: "Unknown",
        model: "Unknown"
    }
)

local asciiArt = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣴⣶⣶⣶⣶⣦⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⠿⠛⠉⠁⠀⠀⠈⠉⠛⠿⣿⣷⣦⡀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⢠⣾⣿⠟⠁⢀⣤⣶⣾⣿⣿⣷⣶⣤⡀⠈⠻⣿⣷⡄⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⣿⣿⠃⠀⣴⣿⣿⡿⠟⠛⠛⠻⢿⣿⣿⣦⠀⠘⣿⣿⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⢰⣿⡇⠀⣸⣿⣿⠏⠀⠀⠀⠀⠀⠀⠹⣿⣿⣇⠀⢸⣿⡆⠀⠀⠀⠀  
⠀⠀⠀⠀⢸⣿⡀⠀⠘⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⢈⣿⡇⠀⠀⠀⠀  
⠀⠀⠀⠀⠘⣿⡇⠀⠀⠀⢀⣴⣶⡄⠀⠀⠀⠀⣴⣿⣿⠏⠀⢸⣿⠃⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠁⠀⠀⢀⣴⣿⣿⣿⣷⣤⣤⣶⣿⣿⣿⠏⠀⣠⣿⣿⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⡿⠛⠻⠿⣿⣿⠿⠟⠋⠁⢀⣴⣿⡿⠁⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⣴⣿⣿⡿⠋⠀⢀⣀⣀⣀⣀⣀⣠⣤⣾⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀  
⠀⠀⠀⠀⠀⠛⠛⠛⠀⠀⠀⠘⠛⠿⠿⠿⠿⠛⠛⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀  "

local infoTexts = [
  "User       |   " ++ username ++ "@" ++ user.system,
  "System     |   originOS v" ++ origin.version,
  "Kernel     |   " ++ kernel.name ++ kernel.version ++ " (" ++ kernel["type"] ++ ")",
  "Uptime     |   " ++ uptime,
  "Shell      |   RSHv2 (OSL)",
  "Screen     |   " ++ screensize_x ++ "x" ++ screensize_y,
  "Cloud      |   " ++ formatFileSize(user.used_size),
  "Host       |   " ++ system_url.match("/https?:\/\/([^/]+)/")[2],
  "GPU        |   " ++ gpu.vendor,
  "OS         |   " ++ system_os,
  "Browser    |   " ++ system_browser
]

local artLines = asciiArt.split("\n")

loop infoTexts.len - artLines.len (
  artLines.append("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ")
)

for i infoTexts.len (
  terminal.writeLine([g, artLines[i], null, infoTexts[i]])
)